'------------------------------------------------------------------------------
' <auto-generated>
'     Dieser Code wurde von einem Tool generiert.
'     Laufzeitversion:4.0.30319.235
'
'     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
'     der Code erneut generiert wird.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("ds_TemplateView"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class ds_TemplateView
    Inherits Global.System.Data.DataSet
    
    Private tableproc_TSQL_Functions As proc_TSQL_FunctionsDataTable
    
    Private tableproc_TSQL_Procedures As proc_TSQL_ProceduresDataTable
    
    Private tableproc_TSQL_Triggers As proc_TSQL_TriggersDataTable
    
    Private tableproc_TSQL_Parameters As proc_TSQL_ParametersDataTable
    
    Private tableproc_TSQL_Synonyms As proc_TSQL_SynonymsDataTable
    
    Private tableproc_TSQL_Views As proc_TSQL_ViewsDataTable
    
    Private tableproc_TSQL_Tables As proc_TSQL_TablesDataTable
    
    Private tableproc_TSQL_ObjectDefinition As proc_TSQL_ObjectDefinitionDataTable
    
    Private tabledtblTables As dtblTablesDataTable
    
    Private tabledtblProcedures As dtblProceduresDataTable
    
    Private tabledtblFunctions As dtblFunctionsDataTable
    
    Private tabledtblSynonyms As dtblSynonymsDataTable
    
    Private tabledtblTriggers As dtblTriggersDataTable
    
    Private tabledtblViews As dtblViewsDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("proc_TSQL_Functions")) Is Nothing) Then
                MyBase.Tables.Add(New proc_TSQL_FunctionsDataTable(ds.Tables("proc_TSQL_Functions")))
            End If
            If (Not (ds.Tables("proc_TSQL_Procedures")) Is Nothing) Then
                MyBase.Tables.Add(New proc_TSQL_ProceduresDataTable(ds.Tables("proc_TSQL_Procedures")))
            End If
            If (Not (ds.Tables("proc_TSQL_Triggers")) Is Nothing) Then
                MyBase.Tables.Add(New proc_TSQL_TriggersDataTable(ds.Tables("proc_TSQL_Triggers")))
            End If
            If (Not (ds.Tables("proc_TSQL_Parameters")) Is Nothing) Then
                MyBase.Tables.Add(New proc_TSQL_ParametersDataTable(ds.Tables("proc_TSQL_Parameters")))
            End If
            If (Not (ds.Tables("proc_TSQL_Synonyms")) Is Nothing) Then
                MyBase.Tables.Add(New proc_TSQL_SynonymsDataTable(ds.Tables("proc_TSQL_Synonyms")))
            End If
            If (Not (ds.Tables("proc_TSQL_Views")) Is Nothing) Then
                MyBase.Tables.Add(New proc_TSQL_ViewsDataTable(ds.Tables("proc_TSQL_Views")))
            End If
            If (Not (ds.Tables("proc_TSQL_Tables")) Is Nothing) Then
                MyBase.Tables.Add(New proc_TSQL_TablesDataTable(ds.Tables("proc_TSQL_Tables")))
            End If
            If (Not (ds.Tables("proc_TSQL_ObjectDefinition")) Is Nothing) Then
                MyBase.Tables.Add(New proc_TSQL_ObjectDefinitionDataTable(ds.Tables("proc_TSQL_ObjectDefinition")))
            End If
            If (Not (ds.Tables("dtblTables")) Is Nothing) Then
                MyBase.Tables.Add(New dtblTablesDataTable(ds.Tables("dtblTables")))
            End If
            If (Not (ds.Tables("dtblProcedures")) Is Nothing) Then
                MyBase.Tables.Add(New dtblProceduresDataTable(ds.Tables("dtblProcedures")))
            End If
            If (Not (ds.Tables("dtblFunctions")) Is Nothing) Then
                MyBase.Tables.Add(New dtblFunctionsDataTable(ds.Tables("dtblFunctions")))
            End If
            If (Not (ds.Tables("dtblSynonyms")) Is Nothing) Then
                MyBase.Tables.Add(New dtblSynonymsDataTable(ds.Tables("dtblSynonyms")))
            End If
            If (Not (ds.Tables("dtblTriggers")) Is Nothing) Then
                MyBase.Tables.Add(New dtblTriggersDataTable(ds.Tables("dtblTriggers")))
            End If
            If (Not (ds.Tables("dtblViews")) Is Nothing) Then
                MyBase.Tables.Add(New dtblViewsDataTable(ds.Tables("dtblViews")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property proc_TSQL_Functions() As proc_TSQL_FunctionsDataTable
        Get
            Return Me.tableproc_TSQL_Functions
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property proc_TSQL_Procedures() As proc_TSQL_ProceduresDataTable
        Get
            Return Me.tableproc_TSQL_Procedures
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property proc_TSQL_Triggers() As proc_TSQL_TriggersDataTable
        Get
            Return Me.tableproc_TSQL_Triggers
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property proc_TSQL_Parameters() As proc_TSQL_ParametersDataTable
        Get
            Return Me.tableproc_TSQL_Parameters
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property proc_TSQL_Synonyms() As proc_TSQL_SynonymsDataTable
        Get
            Return Me.tableproc_TSQL_Synonyms
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property proc_TSQL_Views() As proc_TSQL_ViewsDataTable
        Get
            Return Me.tableproc_TSQL_Views
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property proc_TSQL_Tables() As proc_TSQL_TablesDataTable
        Get
            Return Me.tableproc_TSQL_Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property proc_TSQL_ObjectDefinition() As proc_TSQL_ObjectDefinitionDataTable
        Get
            Return Me.tableproc_TSQL_ObjectDefinition
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dtblTables() As dtblTablesDataTable
        Get
            Return Me.tabledtblTables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dtblProcedures() As dtblProceduresDataTable
        Get
            Return Me.tabledtblProcedures
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dtblFunctions() As dtblFunctionsDataTable
        Get
            Return Me.tabledtblFunctions
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dtblSynonyms() As dtblSynonymsDataTable
        Get
            Return Me.tabledtblSynonyms
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dtblTriggers() As dtblTriggersDataTable
        Get
            Return Me.tabledtblTriggers
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dtblViews() As dtblViewsDataTable
        Get
            Return Me.tabledtblViews
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As ds_TemplateView = CType(MyBase.Clone,ds_TemplateView)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("proc_TSQL_Functions")) Is Nothing) Then
                MyBase.Tables.Add(New proc_TSQL_FunctionsDataTable(ds.Tables("proc_TSQL_Functions")))
            End If
            If (Not (ds.Tables("proc_TSQL_Procedures")) Is Nothing) Then
                MyBase.Tables.Add(New proc_TSQL_ProceduresDataTable(ds.Tables("proc_TSQL_Procedures")))
            End If
            If (Not (ds.Tables("proc_TSQL_Triggers")) Is Nothing) Then
                MyBase.Tables.Add(New proc_TSQL_TriggersDataTable(ds.Tables("proc_TSQL_Triggers")))
            End If
            If (Not (ds.Tables("proc_TSQL_Parameters")) Is Nothing) Then
                MyBase.Tables.Add(New proc_TSQL_ParametersDataTable(ds.Tables("proc_TSQL_Parameters")))
            End If
            If (Not (ds.Tables("proc_TSQL_Synonyms")) Is Nothing) Then
                MyBase.Tables.Add(New proc_TSQL_SynonymsDataTable(ds.Tables("proc_TSQL_Synonyms")))
            End If
            If (Not (ds.Tables("proc_TSQL_Views")) Is Nothing) Then
                MyBase.Tables.Add(New proc_TSQL_ViewsDataTable(ds.Tables("proc_TSQL_Views")))
            End If
            If (Not (ds.Tables("proc_TSQL_Tables")) Is Nothing) Then
                MyBase.Tables.Add(New proc_TSQL_TablesDataTable(ds.Tables("proc_TSQL_Tables")))
            End If
            If (Not (ds.Tables("proc_TSQL_ObjectDefinition")) Is Nothing) Then
                MyBase.Tables.Add(New proc_TSQL_ObjectDefinitionDataTable(ds.Tables("proc_TSQL_ObjectDefinition")))
            End If
            If (Not (ds.Tables("dtblTables")) Is Nothing) Then
                MyBase.Tables.Add(New dtblTablesDataTable(ds.Tables("dtblTables")))
            End If
            If (Not (ds.Tables("dtblProcedures")) Is Nothing) Then
                MyBase.Tables.Add(New dtblProceduresDataTable(ds.Tables("dtblProcedures")))
            End If
            If (Not (ds.Tables("dtblFunctions")) Is Nothing) Then
                MyBase.Tables.Add(New dtblFunctionsDataTable(ds.Tables("dtblFunctions")))
            End If
            If (Not (ds.Tables("dtblSynonyms")) Is Nothing) Then
                MyBase.Tables.Add(New dtblSynonymsDataTable(ds.Tables("dtblSynonyms")))
            End If
            If (Not (ds.Tables("dtblTriggers")) Is Nothing) Then
                MyBase.Tables.Add(New dtblTriggersDataTable(ds.Tables("dtblTriggers")))
            End If
            If (Not (ds.Tables("dtblViews")) Is Nothing) Then
                MyBase.Tables.Add(New dtblViewsDataTable(ds.Tables("dtblViews")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableproc_TSQL_Functions = CType(MyBase.Tables("proc_TSQL_Functions"),proc_TSQL_FunctionsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableproc_TSQL_Functions) Is Nothing) Then
                Me.tableproc_TSQL_Functions.InitVars
            End If
        End If
        Me.tableproc_TSQL_Procedures = CType(MyBase.Tables("proc_TSQL_Procedures"),proc_TSQL_ProceduresDataTable)
        If (initTable = true) Then
            If (Not (Me.tableproc_TSQL_Procedures) Is Nothing) Then
                Me.tableproc_TSQL_Procedures.InitVars
            End If
        End If
        Me.tableproc_TSQL_Triggers = CType(MyBase.Tables("proc_TSQL_Triggers"),proc_TSQL_TriggersDataTable)
        If (initTable = true) Then
            If (Not (Me.tableproc_TSQL_Triggers) Is Nothing) Then
                Me.tableproc_TSQL_Triggers.InitVars
            End If
        End If
        Me.tableproc_TSQL_Parameters = CType(MyBase.Tables("proc_TSQL_Parameters"),proc_TSQL_ParametersDataTable)
        If (initTable = true) Then
            If (Not (Me.tableproc_TSQL_Parameters) Is Nothing) Then
                Me.tableproc_TSQL_Parameters.InitVars
            End If
        End If
        Me.tableproc_TSQL_Synonyms = CType(MyBase.Tables("proc_TSQL_Synonyms"),proc_TSQL_SynonymsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableproc_TSQL_Synonyms) Is Nothing) Then
                Me.tableproc_TSQL_Synonyms.InitVars
            End If
        End If
        Me.tableproc_TSQL_Views = CType(MyBase.Tables("proc_TSQL_Views"),proc_TSQL_ViewsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableproc_TSQL_Views) Is Nothing) Then
                Me.tableproc_TSQL_Views.InitVars
            End If
        End If
        Me.tableproc_TSQL_Tables = CType(MyBase.Tables("proc_TSQL_Tables"),proc_TSQL_TablesDataTable)
        If (initTable = true) Then
            If (Not (Me.tableproc_TSQL_Tables) Is Nothing) Then
                Me.tableproc_TSQL_Tables.InitVars
            End If
        End If
        Me.tableproc_TSQL_ObjectDefinition = CType(MyBase.Tables("proc_TSQL_ObjectDefinition"),proc_TSQL_ObjectDefinitionDataTable)
        If (initTable = true) Then
            If (Not (Me.tableproc_TSQL_ObjectDefinition) Is Nothing) Then
                Me.tableproc_TSQL_ObjectDefinition.InitVars
            End If
        End If
        Me.tabledtblTables = CType(MyBase.Tables("dtblTables"),dtblTablesDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledtblTables) Is Nothing) Then
                Me.tabledtblTables.InitVars
            End If
        End If
        Me.tabledtblProcedures = CType(MyBase.Tables("dtblProcedures"),dtblProceduresDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledtblProcedures) Is Nothing) Then
                Me.tabledtblProcedures.InitVars
            End If
        End If
        Me.tabledtblFunctions = CType(MyBase.Tables("dtblFunctions"),dtblFunctionsDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledtblFunctions) Is Nothing) Then
                Me.tabledtblFunctions.InitVars
            End If
        End If
        Me.tabledtblSynonyms = CType(MyBase.Tables("dtblSynonyms"),dtblSynonymsDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledtblSynonyms) Is Nothing) Then
                Me.tabledtblSynonyms.InitVars
            End If
        End If
        Me.tabledtblTriggers = CType(MyBase.Tables("dtblTriggers"),dtblTriggersDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledtblTriggers) Is Nothing) Then
                Me.tabledtblTriggers.InitVars
            End If
        End If
        Me.tabledtblViews = CType(MyBase.Tables("dtblViews"),dtblViewsDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledtblViews) Is Nothing) Then
                Me.tabledtblViews.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "ds_TemplateView"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/ds_TemplateView.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableproc_TSQL_Functions = New proc_TSQL_FunctionsDataTable()
        MyBase.Tables.Add(Me.tableproc_TSQL_Functions)
        Me.tableproc_TSQL_Procedures = New proc_TSQL_ProceduresDataTable()
        MyBase.Tables.Add(Me.tableproc_TSQL_Procedures)
        Me.tableproc_TSQL_Triggers = New proc_TSQL_TriggersDataTable()
        MyBase.Tables.Add(Me.tableproc_TSQL_Triggers)
        Me.tableproc_TSQL_Parameters = New proc_TSQL_ParametersDataTable()
        MyBase.Tables.Add(Me.tableproc_TSQL_Parameters)
        Me.tableproc_TSQL_Synonyms = New proc_TSQL_SynonymsDataTable()
        MyBase.Tables.Add(Me.tableproc_TSQL_Synonyms)
        Me.tableproc_TSQL_Views = New proc_TSQL_ViewsDataTable()
        MyBase.Tables.Add(Me.tableproc_TSQL_Views)
        Me.tableproc_TSQL_Tables = New proc_TSQL_TablesDataTable()
        MyBase.Tables.Add(Me.tableproc_TSQL_Tables)
        Me.tableproc_TSQL_ObjectDefinition = New proc_TSQL_ObjectDefinitionDataTable()
        MyBase.Tables.Add(Me.tableproc_TSQL_ObjectDefinition)
        Me.tabledtblTables = New dtblTablesDataTable()
        MyBase.Tables.Add(Me.tabledtblTables)
        Me.tabledtblProcedures = New dtblProceduresDataTable()
        MyBase.Tables.Add(Me.tabledtblProcedures)
        Me.tabledtblFunctions = New dtblFunctionsDataTable()
        MyBase.Tables.Add(Me.tabledtblFunctions)
        Me.tabledtblSynonyms = New dtblSynonymsDataTable()
        MyBase.Tables.Add(Me.tabledtblSynonyms)
        Me.tabledtblTriggers = New dtblTriggersDataTable()
        MyBase.Tables.Add(Me.tabledtblTriggers)
        Me.tabledtblViews = New dtblViewsDataTable()
        MyBase.Tables.Add(Me.tabledtblViews)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeproc_TSQL_Functions() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeproc_TSQL_Procedures() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeproc_TSQL_Triggers() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeproc_TSQL_Parameters() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeproc_TSQL_Synonyms() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeproc_TSQL_Views() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeproc_TSQL_Tables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeproc_TSQL_ObjectDefinition() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializedtblTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializedtblProcedures() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializedtblFunctions() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializedtblSynonyms() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializedtblTriggers() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializedtblViews() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As ds_TemplateView = New ds_TemplateView()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub proc_TSQL_FunctionsRowChangeEventHandler(ByVal sender As Object, ByVal e As proc_TSQL_FunctionsRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub proc_TSQL_ProceduresRowChangeEventHandler(ByVal sender As Object, ByVal e As proc_TSQL_ProceduresRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub proc_TSQL_TriggersRowChangeEventHandler(ByVal sender As Object, ByVal e As proc_TSQL_TriggersRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub proc_TSQL_ParametersRowChangeEventHandler(ByVal sender As Object, ByVal e As proc_TSQL_ParametersRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub proc_TSQL_SynonymsRowChangeEventHandler(ByVal sender As Object, ByVal e As proc_TSQL_SynonymsRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub proc_TSQL_ViewsRowChangeEventHandler(ByVal sender As Object, ByVal e As proc_TSQL_ViewsRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub proc_TSQL_TablesRowChangeEventHandler(ByVal sender As Object, ByVal e As proc_TSQL_TablesRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub proc_TSQL_ObjectDefinitionRowChangeEventHandler(ByVal sender As Object, ByVal e As proc_TSQL_ObjectDefinitionRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub dtblTablesRowChangeEventHandler(ByVal sender As Object, ByVal e As dtblTablesRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub dtblProceduresRowChangeEventHandler(ByVal sender As Object, ByVal e As dtblProceduresRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub dtblFunctionsRowChangeEventHandler(ByVal sender As Object, ByVal e As dtblFunctionsRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub dtblSynonymsRowChangeEventHandler(ByVal sender As Object, ByVal e As dtblSynonymsRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub dtblTriggersRowChangeEventHandler(ByVal sender As Object, ByVal e As dtblTriggersRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub dtblViewsRowChangeEventHandler(ByVal sender As Object, ByVal e As dtblViewsRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class proc_TSQL_FunctionsDataTable
        Inherits Global.System.Data.TypedTableBase(Of proc_TSQL_FunctionsRow)
        
        Private columnSPECIFIC_CATALOG As Global.System.Data.DataColumn
        
        Private columnSPECIFIC_SCHEMA As Global.System.Data.DataColumn
        
        Private columnSPECIFIC_NAME As Global.System.Data.DataColumn
        
        Private columnROUTINE_CATALOG As Global.System.Data.DataColumn
        
        Private columnROUTINE_SCHEMA As Global.System.Data.DataColumn
        
        Private columnROUTINE_NAME As Global.System.Data.DataColumn
        
        Private columnROUTINE_TYPE As Global.System.Data.DataColumn
        
        Private columnMODULE_CATALOG As Global.System.Data.DataColumn
        
        Private columnMODULE_SCHEMA As Global.System.Data.DataColumn
        
        Private columnMODULE_NAME As Global.System.Data.DataColumn
        
        Private columnUDT_CATALOG As Global.System.Data.DataColumn
        
        Private columnUDT_SCHEMA As Global.System.Data.DataColumn
        
        Private columnUDT_NAME As Global.System.Data.DataColumn
        
        Private columnDATA_TYPE As Global.System.Data.DataColumn
        
        Private columnCHARACTER_MAXIMUM_LENGTH As Global.System.Data.DataColumn
        
        Private columnCHARACTER_OCTET_LENGTH As Global.System.Data.DataColumn
        
        Private columnCOLLATION_CATALOG As Global.System.Data.DataColumn
        
        Private columnCOLLATION_SCHEMA As Global.System.Data.DataColumn
        
        Private columnCOLLATION_NAME As Global.System.Data.DataColumn
        
        Private columnCHARACTER_SET_CATALOG As Global.System.Data.DataColumn
        
        Private columnCHARACTER_SET_SCHEMA As Global.System.Data.DataColumn
        
        Private columnCHARACTER_SET_NAME As Global.System.Data.DataColumn
        
        Private columnNUMERIC_PRECISION As Global.System.Data.DataColumn
        
        Private columnNUMERIC_PRECISION_RADIX As Global.System.Data.DataColumn
        
        Private columnNUMERIC_SCALE As Global.System.Data.DataColumn
        
        Private columnDATETIME_PRECISION As Global.System.Data.DataColumn
        
        Private columnINTERVAL_TYPE As Global.System.Data.DataColumn
        
        Private columnINTERVAL_PRECISION As Global.System.Data.DataColumn
        
        Private columnTYPE_UDT_CATALOG As Global.System.Data.DataColumn
        
        Private columnTYPE_UDT_SCHEMA As Global.System.Data.DataColumn
        
        Private columnTYPE_UDT_NAME As Global.System.Data.DataColumn
        
        Private columnSCOPE_CATALOG As Global.System.Data.DataColumn
        
        Private columnSCOPE_SCHEMA As Global.System.Data.DataColumn
        
        Private columnSCOPE_NAME As Global.System.Data.DataColumn
        
        Private columnMAXIMUM_CARDINALITY As Global.System.Data.DataColumn
        
        Private columnDTD_IDENTIFIER As Global.System.Data.DataColumn
        
        Private columnROUTINE_BODY As Global.System.Data.DataColumn
        
        Private columnROUTINE_DEFINITION As Global.System.Data.DataColumn
        
        Private columnEXTERNAL_NAME As Global.System.Data.DataColumn
        
        Private columnEXTERNAL_LANGUAGE As Global.System.Data.DataColumn
        
        Private columnPARAMETER_STYLE As Global.System.Data.DataColumn
        
        Private columnIS_DETERMINISTIC As Global.System.Data.DataColumn
        
        Private columnSQL_DATA_ACCESS As Global.System.Data.DataColumn
        
        Private columnIS_NULL_CALL As Global.System.Data.DataColumn
        
        Private columnSQL_PATH As Global.System.Data.DataColumn
        
        Private columnSCHEMA_LEVEL_ROUTINE As Global.System.Data.DataColumn
        
        Private columnMAX_DYNAMIC_RESULT_SETS As Global.System.Data.DataColumn
        
        Private columnIS_USER_DEFINED_CAST As Global.System.Data.DataColumn
        
        Private columnIS_IMPLICITLY_INVOCABLE As Global.System.Data.DataColumn
        
        Private columnCREATED As Global.System.Data.DataColumn
        
        Private columnLAST_ALTERED As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "proc_TSQL_Functions"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPECIFIC_CATALOGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPECIFIC_CATALOG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPECIFIC_SCHEMAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPECIFIC_SCHEMA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPECIFIC_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPECIFIC_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ROUTINE_CATALOGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnROUTINE_CATALOG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ROUTINE_SCHEMAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnROUTINE_SCHEMA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ROUTINE_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnROUTINE_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ROUTINE_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnROUTINE_TYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODULE_CATALOGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODULE_CATALOG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODULE_SCHEMAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODULE_SCHEMA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODULE_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODULE_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UDT_CATALOGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUDT_CATALOG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UDT_SCHEMAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUDT_SCHEMA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UDT_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUDT_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATA_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATA_TYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CHARACTER_MAXIMUM_LENGTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCHARACTER_MAXIMUM_LENGTH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CHARACTER_OCTET_LENGTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCHARACTER_OCTET_LENGTH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COLLATION_CATALOGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOLLATION_CATALOG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COLLATION_SCHEMAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOLLATION_SCHEMA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COLLATION_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOLLATION_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CHARACTER_SET_CATALOGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCHARACTER_SET_CATALOG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CHARACTER_SET_SCHEMAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCHARACTER_SET_SCHEMA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CHARACTER_SET_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCHARACTER_SET_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMERIC_PRECISIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMERIC_PRECISION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMERIC_PRECISION_RADIXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMERIC_PRECISION_RADIX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMERIC_SCALEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMERIC_SCALE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATETIME_PRECISIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATETIME_PRECISION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INTERVAL_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINTERVAL_TYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INTERVAL_PRECISIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINTERVAL_PRECISION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TYPE_UDT_CATALOGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTYPE_UDT_CATALOG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TYPE_UDT_SCHEMAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTYPE_UDT_SCHEMA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TYPE_UDT_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTYPE_UDT_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SCOPE_CATALOGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCOPE_CATALOG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SCOPE_SCHEMAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCOPE_SCHEMA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SCOPE_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCOPE_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MAXIMUM_CARDINALITYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMAXIMUM_CARDINALITY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DTD_IDENTIFIERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDTD_IDENTIFIER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ROUTINE_BODYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnROUTINE_BODY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ROUTINE_DEFINITIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnROUTINE_DEFINITION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXTERNAL_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTERNAL_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXTERNAL_LANGUAGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTERNAL_LANGUAGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PARAMETER_STYLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPARAMETER_STYLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IS_DETERMINISTICColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIS_DETERMINISTIC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SQL_DATA_ACCESSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSQL_DATA_ACCESS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IS_NULL_CALLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIS_NULL_CALL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SQL_PATHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSQL_PATH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SCHEMA_LEVEL_ROUTINEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCHEMA_LEVEL_ROUTINE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MAX_DYNAMIC_RESULT_SETSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMAX_DYNAMIC_RESULT_SETS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IS_USER_DEFINED_CASTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIS_USER_DEFINED_CAST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IS_IMPLICITLY_INVOCABLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIS_IMPLICITLY_INVOCABLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LAST_ALTEREDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLAST_ALTERED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As proc_TSQL_FunctionsRow
            Get
                Return CType(Me.Rows(index),proc_TSQL_FunctionsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_TSQL_FunctionsRowChanging As proc_TSQL_FunctionsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_TSQL_FunctionsRowChanged As proc_TSQL_FunctionsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_TSQL_FunctionsRowDeleting As proc_TSQL_FunctionsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_TSQL_FunctionsRowDeleted As proc_TSQL_FunctionsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addproc_TSQL_FunctionsRow(ByVal row As proc_TSQL_FunctionsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addproc_TSQL_FunctionsRow( _
                    ByVal SPECIFIC_CATALOG As String,  _
                    ByVal SPECIFIC_SCHEMA As String,  _
                    ByVal SPECIFIC_NAME As String,  _
                    ByVal ROUTINE_CATALOG As String,  _
                    ByVal ROUTINE_SCHEMA As String,  _
                    ByVal ROUTINE_NAME As String,  _
                    ByVal ROUTINE_TYPE As String,  _
                    ByVal MODULE_CATALOG As String,  _
                    ByVal MODULE_SCHEMA As String,  _
                    ByVal MODULE_NAME As String,  _
                    ByVal UDT_CATALOG As String,  _
                    ByVal UDT_SCHEMA As String,  _
                    ByVal UDT_NAME As String,  _
                    ByVal DATA_TYPE As String,  _
                    ByVal CHARACTER_MAXIMUM_LENGTH As Integer,  _
                    ByVal CHARACTER_OCTET_LENGTH As Integer,  _
                    ByVal COLLATION_CATALOG As String,  _
                    ByVal COLLATION_SCHEMA As String,  _
                    ByVal COLLATION_NAME As String,  _
                    ByVal CHARACTER_SET_CATALOG As String,  _
                    ByVal CHARACTER_SET_SCHEMA As String,  _
                    ByVal CHARACTER_SET_NAME As String,  _
                    ByVal NUMERIC_PRECISION As Byte,  _
                    ByVal NUMERIC_PRECISION_RADIX As Short,  _
                    ByVal NUMERIC_SCALE As Integer,  _
                    ByVal DATETIME_PRECISION As Short,  _
                    ByVal INTERVAL_TYPE As String,  _
                    ByVal INTERVAL_PRECISION As Short,  _
                    ByVal TYPE_UDT_CATALOG As String,  _
                    ByVal TYPE_UDT_SCHEMA As String,  _
                    ByVal TYPE_UDT_NAME As String,  _
                    ByVal SCOPE_CATALOG As String,  _
                    ByVal SCOPE_SCHEMA As String,  _
                    ByVal SCOPE_NAME As String,  _
                    ByVal MAXIMUM_CARDINALITY As Long,  _
                    ByVal DTD_IDENTIFIER As String,  _
                    ByVal ROUTINE_BODY As String,  _
                    ByVal ROUTINE_DEFINITION As String,  _
                    ByVal EXTERNAL_NAME As String,  _
                    ByVal EXTERNAL_LANGUAGE As String,  _
                    ByVal PARAMETER_STYLE As String,  _
                    ByVal IS_DETERMINISTIC As String,  _
                    ByVal SQL_DATA_ACCESS As String,  _
                    ByVal IS_NULL_CALL As String,  _
                    ByVal SQL_PATH As String,  _
                    ByVal SCHEMA_LEVEL_ROUTINE As String,  _
                    ByVal MAX_DYNAMIC_RESULT_SETS As Short,  _
                    ByVal IS_USER_DEFINED_CAST As String,  _
                    ByVal IS_IMPLICITLY_INVOCABLE As String,  _
                    ByVal CREATED As Date,  _
                    ByVal LAST_ALTERED As Date) As proc_TSQL_FunctionsRow
            Dim rowproc_TSQL_FunctionsRow As proc_TSQL_FunctionsRow = CType(Me.NewRow,proc_TSQL_FunctionsRow)
            Dim columnValuesArray() As Object = New Object() {SPECIFIC_CATALOG, SPECIFIC_SCHEMA, SPECIFIC_NAME, ROUTINE_CATALOG, ROUTINE_SCHEMA, ROUTINE_NAME, ROUTINE_TYPE, MODULE_CATALOG, MODULE_SCHEMA, MODULE_NAME, UDT_CATALOG, UDT_SCHEMA, UDT_NAME, DATA_TYPE, CHARACTER_MAXIMUM_LENGTH, CHARACTER_OCTET_LENGTH, COLLATION_CATALOG, COLLATION_SCHEMA, COLLATION_NAME, CHARACTER_SET_CATALOG, CHARACTER_SET_SCHEMA, CHARACTER_SET_NAME, NUMERIC_PRECISION, NUMERIC_PRECISION_RADIX, NUMERIC_SCALE, DATETIME_PRECISION, INTERVAL_TYPE, INTERVAL_PRECISION, TYPE_UDT_CATALOG, TYPE_UDT_SCHEMA, TYPE_UDT_NAME, SCOPE_CATALOG, SCOPE_SCHEMA, SCOPE_NAME, MAXIMUM_CARDINALITY, DTD_IDENTIFIER, ROUTINE_BODY, ROUTINE_DEFINITION, EXTERNAL_NAME, EXTERNAL_LANGUAGE, PARAMETER_STYLE, IS_DETERMINISTIC, SQL_DATA_ACCESS, IS_NULL_CALL, SQL_PATH, SCHEMA_LEVEL_ROUTINE, MAX_DYNAMIC_RESULT_SETS, IS_USER_DEFINED_CAST, IS_IMPLICITLY_INVOCABLE, CREATED, LAST_ALTERED}
            rowproc_TSQL_FunctionsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowproc_TSQL_FunctionsRow)
            Return rowproc_TSQL_FunctionsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As proc_TSQL_FunctionsDataTable = CType(MyBase.Clone,proc_TSQL_FunctionsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New proc_TSQL_FunctionsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSPECIFIC_CATALOG = MyBase.Columns("SPECIFIC_CATALOG")
            Me.columnSPECIFIC_SCHEMA = MyBase.Columns("SPECIFIC_SCHEMA")
            Me.columnSPECIFIC_NAME = MyBase.Columns("SPECIFIC_NAME")
            Me.columnROUTINE_CATALOG = MyBase.Columns("ROUTINE_CATALOG")
            Me.columnROUTINE_SCHEMA = MyBase.Columns("ROUTINE_SCHEMA")
            Me.columnROUTINE_NAME = MyBase.Columns("ROUTINE_NAME")
            Me.columnROUTINE_TYPE = MyBase.Columns("ROUTINE_TYPE")
            Me.columnMODULE_CATALOG = MyBase.Columns("MODULE_CATALOG")
            Me.columnMODULE_SCHEMA = MyBase.Columns("MODULE_SCHEMA")
            Me.columnMODULE_NAME = MyBase.Columns("MODULE_NAME")
            Me.columnUDT_CATALOG = MyBase.Columns("UDT_CATALOG")
            Me.columnUDT_SCHEMA = MyBase.Columns("UDT_SCHEMA")
            Me.columnUDT_NAME = MyBase.Columns("UDT_NAME")
            Me.columnDATA_TYPE = MyBase.Columns("DATA_TYPE")
            Me.columnCHARACTER_MAXIMUM_LENGTH = MyBase.Columns("CHARACTER_MAXIMUM_LENGTH")
            Me.columnCHARACTER_OCTET_LENGTH = MyBase.Columns("CHARACTER_OCTET_LENGTH")
            Me.columnCOLLATION_CATALOG = MyBase.Columns("COLLATION_CATALOG")
            Me.columnCOLLATION_SCHEMA = MyBase.Columns("COLLATION_SCHEMA")
            Me.columnCOLLATION_NAME = MyBase.Columns("COLLATION_NAME")
            Me.columnCHARACTER_SET_CATALOG = MyBase.Columns("CHARACTER_SET_CATALOG")
            Me.columnCHARACTER_SET_SCHEMA = MyBase.Columns("CHARACTER_SET_SCHEMA")
            Me.columnCHARACTER_SET_NAME = MyBase.Columns("CHARACTER_SET_NAME")
            Me.columnNUMERIC_PRECISION = MyBase.Columns("NUMERIC_PRECISION")
            Me.columnNUMERIC_PRECISION_RADIX = MyBase.Columns("NUMERIC_PRECISION_RADIX")
            Me.columnNUMERIC_SCALE = MyBase.Columns("NUMERIC_SCALE")
            Me.columnDATETIME_PRECISION = MyBase.Columns("DATETIME_PRECISION")
            Me.columnINTERVAL_TYPE = MyBase.Columns("INTERVAL_TYPE")
            Me.columnINTERVAL_PRECISION = MyBase.Columns("INTERVAL_PRECISION")
            Me.columnTYPE_UDT_CATALOG = MyBase.Columns("TYPE_UDT_CATALOG")
            Me.columnTYPE_UDT_SCHEMA = MyBase.Columns("TYPE_UDT_SCHEMA")
            Me.columnTYPE_UDT_NAME = MyBase.Columns("TYPE_UDT_NAME")
            Me.columnSCOPE_CATALOG = MyBase.Columns("SCOPE_CATALOG")
            Me.columnSCOPE_SCHEMA = MyBase.Columns("SCOPE_SCHEMA")
            Me.columnSCOPE_NAME = MyBase.Columns("SCOPE_NAME")
            Me.columnMAXIMUM_CARDINALITY = MyBase.Columns("MAXIMUM_CARDINALITY")
            Me.columnDTD_IDENTIFIER = MyBase.Columns("DTD_IDENTIFIER")
            Me.columnROUTINE_BODY = MyBase.Columns("ROUTINE_BODY")
            Me.columnROUTINE_DEFINITION = MyBase.Columns("ROUTINE_DEFINITION")
            Me.columnEXTERNAL_NAME = MyBase.Columns("EXTERNAL_NAME")
            Me.columnEXTERNAL_LANGUAGE = MyBase.Columns("EXTERNAL_LANGUAGE")
            Me.columnPARAMETER_STYLE = MyBase.Columns("PARAMETER_STYLE")
            Me.columnIS_DETERMINISTIC = MyBase.Columns("IS_DETERMINISTIC")
            Me.columnSQL_DATA_ACCESS = MyBase.Columns("SQL_DATA_ACCESS")
            Me.columnIS_NULL_CALL = MyBase.Columns("IS_NULL_CALL")
            Me.columnSQL_PATH = MyBase.Columns("SQL_PATH")
            Me.columnSCHEMA_LEVEL_ROUTINE = MyBase.Columns("SCHEMA_LEVEL_ROUTINE")
            Me.columnMAX_DYNAMIC_RESULT_SETS = MyBase.Columns("MAX_DYNAMIC_RESULT_SETS")
            Me.columnIS_USER_DEFINED_CAST = MyBase.Columns("IS_USER_DEFINED_CAST")
            Me.columnIS_IMPLICITLY_INVOCABLE = MyBase.Columns("IS_IMPLICITLY_INVOCABLE")
            Me.columnCREATED = MyBase.Columns("CREATED")
            Me.columnLAST_ALTERED = MyBase.Columns("LAST_ALTERED")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSPECIFIC_CATALOG = New Global.System.Data.DataColumn("SPECIFIC_CATALOG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPECIFIC_CATALOG)
            Me.columnSPECIFIC_SCHEMA = New Global.System.Data.DataColumn("SPECIFIC_SCHEMA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPECIFIC_SCHEMA)
            Me.columnSPECIFIC_NAME = New Global.System.Data.DataColumn("SPECIFIC_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPECIFIC_NAME)
            Me.columnROUTINE_CATALOG = New Global.System.Data.DataColumn("ROUTINE_CATALOG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnROUTINE_CATALOG)
            Me.columnROUTINE_SCHEMA = New Global.System.Data.DataColumn("ROUTINE_SCHEMA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnROUTINE_SCHEMA)
            Me.columnROUTINE_NAME = New Global.System.Data.DataColumn("ROUTINE_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnROUTINE_NAME)
            Me.columnROUTINE_TYPE = New Global.System.Data.DataColumn("ROUTINE_TYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnROUTINE_TYPE)
            Me.columnMODULE_CATALOG = New Global.System.Data.DataColumn("MODULE_CATALOG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODULE_CATALOG)
            Me.columnMODULE_SCHEMA = New Global.System.Data.DataColumn("MODULE_SCHEMA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODULE_SCHEMA)
            Me.columnMODULE_NAME = New Global.System.Data.DataColumn("MODULE_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODULE_NAME)
            Me.columnUDT_CATALOG = New Global.System.Data.DataColumn("UDT_CATALOG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUDT_CATALOG)
            Me.columnUDT_SCHEMA = New Global.System.Data.DataColumn("UDT_SCHEMA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUDT_SCHEMA)
            Me.columnUDT_NAME = New Global.System.Data.DataColumn("UDT_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUDT_NAME)
            Me.columnDATA_TYPE = New Global.System.Data.DataColumn("DATA_TYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATA_TYPE)
            Me.columnCHARACTER_MAXIMUM_LENGTH = New Global.System.Data.DataColumn("CHARACTER_MAXIMUM_LENGTH", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHARACTER_MAXIMUM_LENGTH)
            Me.columnCHARACTER_OCTET_LENGTH = New Global.System.Data.DataColumn("CHARACTER_OCTET_LENGTH", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHARACTER_OCTET_LENGTH)
            Me.columnCOLLATION_CATALOG = New Global.System.Data.DataColumn("COLLATION_CATALOG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOLLATION_CATALOG)
            Me.columnCOLLATION_SCHEMA = New Global.System.Data.DataColumn("COLLATION_SCHEMA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOLLATION_SCHEMA)
            Me.columnCOLLATION_NAME = New Global.System.Data.DataColumn("COLLATION_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOLLATION_NAME)
            Me.columnCHARACTER_SET_CATALOG = New Global.System.Data.DataColumn("CHARACTER_SET_CATALOG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHARACTER_SET_CATALOG)
            Me.columnCHARACTER_SET_SCHEMA = New Global.System.Data.DataColumn("CHARACTER_SET_SCHEMA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHARACTER_SET_SCHEMA)
            Me.columnCHARACTER_SET_NAME = New Global.System.Data.DataColumn("CHARACTER_SET_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHARACTER_SET_NAME)
            Me.columnNUMERIC_PRECISION = New Global.System.Data.DataColumn("NUMERIC_PRECISION", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMERIC_PRECISION)
            Me.columnNUMERIC_PRECISION_RADIX = New Global.System.Data.DataColumn("NUMERIC_PRECISION_RADIX", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMERIC_PRECISION_RADIX)
            Me.columnNUMERIC_SCALE = New Global.System.Data.DataColumn("NUMERIC_SCALE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMERIC_SCALE)
            Me.columnDATETIME_PRECISION = New Global.System.Data.DataColumn("DATETIME_PRECISION", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATETIME_PRECISION)
            Me.columnINTERVAL_TYPE = New Global.System.Data.DataColumn("INTERVAL_TYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINTERVAL_TYPE)
            Me.columnINTERVAL_PRECISION = New Global.System.Data.DataColumn("INTERVAL_PRECISION", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINTERVAL_PRECISION)
            Me.columnTYPE_UDT_CATALOG = New Global.System.Data.DataColumn("TYPE_UDT_CATALOG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTYPE_UDT_CATALOG)
            Me.columnTYPE_UDT_SCHEMA = New Global.System.Data.DataColumn("TYPE_UDT_SCHEMA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTYPE_UDT_SCHEMA)
            Me.columnTYPE_UDT_NAME = New Global.System.Data.DataColumn("TYPE_UDT_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTYPE_UDT_NAME)
            Me.columnSCOPE_CATALOG = New Global.System.Data.DataColumn("SCOPE_CATALOG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCOPE_CATALOG)
            Me.columnSCOPE_SCHEMA = New Global.System.Data.DataColumn("SCOPE_SCHEMA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCOPE_SCHEMA)
            Me.columnSCOPE_NAME = New Global.System.Data.DataColumn("SCOPE_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCOPE_NAME)
            Me.columnMAXIMUM_CARDINALITY = New Global.System.Data.DataColumn("MAXIMUM_CARDINALITY", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMAXIMUM_CARDINALITY)
            Me.columnDTD_IDENTIFIER = New Global.System.Data.DataColumn("DTD_IDENTIFIER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDTD_IDENTIFIER)
            Me.columnROUTINE_BODY = New Global.System.Data.DataColumn("ROUTINE_BODY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnROUTINE_BODY)
            Me.columnROUTINE_DEFINITION = New Global.System.Data.DataColumn("ROUTINE_DEFINITION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnROUTINE_DEFINITION)
            Me.columnEXTERNAL_NAME = New Global.System.Data.DataColumn("EXTERNAL_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTERNAL_NAME)
            Me.columnEXTERNAL_LANGUAGE = New Global.System.Data.DataColumn("EXTERNAL_LANGUAGE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTERNAL_LANGUAGE)
            Me.columnPARAMETER_STYLE = New Global.System.Data.DataColumn("PARAMETER_STYLE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPARAMETER_STYLE)
            Me.columnIS_DETERMINISTIC = New Global.System.Data.DataColumn("IS_DETERMINISTIC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIS_DETERMINISTIC)
            Me.columnSQL_DATA_ACCESS = New Global.System.Data.DataColumn("SQL_DATA_ACCESS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSQL_DATA_ACCESS)
            Me.columnIS_NULL_CALL = New Global.System.Data.DataColumn("IS_NULL_CALL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIS_NULL_CALL)
            Me.columnSQL_PATH = New Global.System.Data.DataColumn("SQL_PATH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSQL_PATH)
            Me.columnSCHEMA_LEVEL_ROUTINE = New Global.System.Data.DataColumn("SCHEMA_LEVEL_ROUTINE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCHEMA_LEVEL_ROUTINE)
            Me.columnMAX_DYNAMIC_RESULT_SETS = New Global.System.Data.DataColumn("MAX_DYNAMIC_RESULT_SETS", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMAX_DYNAMIC_RESULT_SETS)
            Me.columnIS_USER_DEFINED_CAST = New Global.System.Data.DataColumn("IS_USER_DEFINED_CAST", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIS_USER_DEFINED_CAST)
            Me.columnIS_IMPLICITLY_INVOCABLE = New Global.System.Data.DataColumn("IS_IMPLICITLY_INVOCABLE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIS_IMPLICITLY_INVOCABLE)
            Me.columnCREATED = New Global.System.Data.DataColumn("CREATED", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATED)
            Me.columnLAST_ALTERED = New Global.System.Data.DataColumn("LAST_ALTERED", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLAST_ALTERED)
            Me.columnSPECIFIC_CATALOG.ReadOnly = true
            Me.columnSPECIFIC_CATALOG.MaxLength = 128
            Me.columnSPECIFIC_SCHEMA.ReadOnly = true
            Me.columnSPECIFIC_SCHEMA.MaxLength = 128
            Me.columnSPECIFIC_NAME.AllowDBNull = false
            Me.columnSPECIFIC_NAME.MaxLength = 128
            Me.columnROUTINE_CATALOG.ReadOnly = true
            Me.columnROUTINE_CATALOG.MaxLength = 128
            Me.columnROUTINE_SCHEMA.ReadOnly = true
            Me.columnROUTINE_SCHEMA.MaxLength = 128
            Me.columnROUTINE_NAME.AllowDBNull = false
            Me.columnROUTINE_NAME.MaxLength = 128
            Me.columnROUTINE_TYPE.ReadOnly = true
            Me.columnROUTINE_TYPE.MaxLength = 20
            Me.columnMODULE_CATALOG.ReadOnly = true
            Me.columnMODULE_CATALOG.MaxLength = 128
            Me.columnMODULE_SCHEMA.ReadOnly = true
            Me.columnMODULE_SCHEMA.MaxLength = 128
            Me.columnMODULE_NAME.ReadOnly = true
            Me.columnMODULE_NAME.MaxLength = 128
            Me.columnUDT_CATALOG.ReadOnly = true
            Me.columnUDT_CATALOG.MaxLength = 128
            Me.columnUDT_SCHEMA.ReadOnly = true
            Me.columnUDT_SCHEMA.MaxLength = 128
            Me.columnUDT_NAME.ReadOnly = true
            Me.columnUDT_NAME.MaxLength = 128
            Me.columnDATA_TYPE.ReadOnly = true
            Me.columnDATA_TYPE.MaxLength = 128
            Me.columnCHARACTER_MAXIMUM_LENGTH.ReadOnly = true
            Me.columnCHARACTER_OCTET_LENGTH.ReadOnly = true
            Me.columnCOLLATION_CATALOG.ReadOnly = true
            Me.columnCOLLATION_CATALOG.MaxLength = 128
            Me.columnCOLLATION_SCHEMA.ReadOnly = true
            Me.columnCOLLATION_SCHEMA.MaxLength = 128
            Me.columnCOLLATION_NAME.ReadOnly = true
            Me.columnCOLLATION_NAME.MaxLength = 128
            Me.columnCHARACTER_SET_CATALOG.ReadOnly = true
            Me.columnCHARACTER_SET_CATALOG.MaxLength = 128
            Me.columnCHARACTER_SET_SCHEMA.ReadOnly = true
            Me.columnCHARACTER_SET_SCHEMA.MaxLength = 128
            Me.columnCHARACTER_SET_NAME.ReadOnly = true
            Me.columnCHARACTER_SET_NAME.MaxLength = 128
            Me.columnNUMERIC_PRECISION.ReadOnly = true
            Me.columnNUMERIC_PRECISION_RADIX.ReadOnly = true
            Me.columnNUMERIC_SCALE.ReadOnly = true
            Me.columnDATETIME_PRECISION.ReadOnly = true
            Me.columnINTERVAL_TYPE.ReadOnly = true
            Me.columnINTERVAL_TYPE.MaxLength = 30
            Me.columnINTERVAL_PRECISION.ReadOnly = true
            Me.columnTYPE_UDT_CATALOG.ReadOnly = true
            Me.columnTYPE_UDT_CATALOG.MaxLength = 128
            Me.columnTYPE_UDT_SCHEMA.ReadOnly = true
            Me.columnTYPE_UDT_SCHEMA.MaxLength = 128
            Me.columnTYPE_UDT_NAME.ReadOnly = true
            Me.columnTYPE_UDT_NAME.MaxLength = 128
            Me.columnSCOPE_CATALOG.ReadOnly = true
            Me.columnSCOPE_CATALOG.MaxLength = 128
            Me.columnSCOPE_SCHEMA.ReadOnly = true
            Me.columnSCOPE_SCHEMA.MaxLength = 128
            Me.columnSCOPE_NAME.ReadOnly = true
            Me.columnSCOPE_NAME.MaxLength = 128
            Me.columnMAXIMUM_CARDINALITY.ReadOnly = true
            Me.columnDTD_IDENTIFIER.ReadOnly = true
            Me.columnDTD_IDENTIFIER.MaxLength = 128
            Me.columnROUTINE_BODY.ReadOnly = true
            Me.columnROUTINE_BODY.MaxLength = 30
            Me.columnROUTINE_DEFINITION.ReadOnly = true
            Me.columnROUTINE_DEFINITION.MaxLength = 4000
            Me.columnEXTERNAL_NAME.ReadOnly = true
            Me.columnEXTERNAL_NAME.MaxLength = 128
            Me.columnEXTERNAL_LANGUAGE.ReadOnly = true
            Me.columnEXTERNAL_LANGUAGE.MaxLength = 30
            Me.columnPARAMETER_STYLE.ReadOnly = true
            Me.columnPARAMETER_STYLE.MaxLength = 30
            Me.columnIS_DETERMINISTIC.ReadOnly = true
            Me.columnIS_DETERMINISTIC.MaxLength = 10
            Me.columnSQL_DATA_ACCESS.ReadOnly = true
            Me.columnSQL_DATA_ACCESS.MaxLength = 30
            Me.columnIS_NULL_CALL.ReadOnly = true
            Me.columnIS_NULL_CALL.MaxLength = 10
            Me.columnSQL_PATH.ReadOnly = true
            Me.columnSQL_PATH.MaxLength = 128
            Me.columnSCHEMA_LEVEL_ROUTINE.ReadOnly = true
            Me.columnSCHEMA_LEVEL_ROUTINE.MaxLength = 10
            Me.columnMAX_DYNAMIC_RESULT_SETS.ReadOnly = true
            Me.columnIS_USER_DEFINED_CAST.ReadOnly = true
            Me.columnIS_USER_DEFINED_CAST.MaxLength = 10
            Me.columnIS_IMPLICITLY_INVOCABLE.ReadOnly = true
            Me.columnIS_IMPLICITLY_INVOCABLE.MaxLength = 10
            Me.columnCREATED.AllowDBNull = false
            Me.columnLAST_ALTERED.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newproc_TSQL_FunctionsRow() As proc_TSQL_FunctionsRow
            Return CType(Me.NewRow,proc_TSQL_FunctionsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New proc_TSQL_FunctionsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(proc_TSQL_FunctionsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.proc_TSQL_FunctionsRowChangedEvent) Is Nothing) Then
                RaiseEvent proc_TSQL_FunctionsRowChanged(Me, New proc_TSQL_FunctionsRowChangeEvent(CType(e.Row,proc_TSQL_FunctionsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.proc_TSQL_FunctionsRowChangingEvent) Is Nothing) Then
                RaiseEvent proc_TSQL_FunctionsRowChanging(Me, New proc_TSQL_FunctionsRowChangeEvent(CType(e.Row,proc_TSQL_FunctionsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.proc_TSQL_FunctionsRowDeletedEvent) Is Nothing) Then
                RaiseEvent proc_TSQL_FunctionsRowDeleted(Me, New proc_TSQL_FunctionsRowChangeEvent(CType(e.Row,proc_TSQL_FunctionsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.proc_TSQL_FunctionsRowDeletingEvent) Is Nothing) Then
                RaiseEvent proc_TSQL_FunctionsRowDeleting(Me, New proc_TSQL_FunctionsRowChangeEvent(CType(e.Row,proc_TSQL_FunctionsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removeproc_TSQL_FunctionsRow(ByVal row As proc_TSQL_FunctionsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ds_TemplateView = New ds_TemplateView()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "proc_TSQL_FunctionsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class proc_TSQL_ProceduresDataTable
        Inherits Global.System.Data.TypedTableBase(Of proc_TSQL_ProceduresRow)
        
        Private columnname As Global.System.Data.DataColumn
        
        Private columnobject_id As Global.System.Data.DataColumn
        
        Private columnprincipal_id As Global.System.Data.DataColumn
        
        Private columnschema_id As Global.System.Data.DataColumn
        
        Private columnparent_object_id As Global.System.Data.DataColumn
        
        Private columntype As Global.System.Data.DataColumn
        
        Private columntype_desc As Global.System.Data.DataColumn
        
        Private columncreate_date As Global.System.Data.DataColumn
        
        Private columnmodify_date As Global.System.Data.DataColumn
        
        Private columnis_ms_shipped As Global.System.Data.DataColumn
        
        Private columnis_published As Global.System.Data.DataColumn
        
        Private columnis_schema_published As Global.System.Data.DataColumn
        
        Private columnis_auto_executed As Global.System.Data.DataColumn
        
        Private columnis_execution_replicated As Global.System.Data.DataColumn
        
        Private columnis_repl_serializable_only As Global.System.Data.DataColumn
        
        Private columnskips_repl_constraints As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "proc_TSQL_Procedures"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property object_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnobject_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property principal_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprincipal_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property schema_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnschema_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property parent_object_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnparent_object_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntype
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property type_descColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntype_desc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property create_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreate_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property modify_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmodify_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property is_ms_shippedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnis_ms_shipped
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property is_publishedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnis_published
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property is_schema_publishedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnis_schema_published
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property is_auto_executedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnis_auto_executed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property is_execution_replicatedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnis_execution_replicated
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property is_repl_serializable_onlyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnis_repl_serializable_only
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property skips_repl_constraintsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnskips_repl_constraints
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As proc_TSQL_ProceduresRow
            Get
                Return CType(Me.Rows(index),proc_TSQL_ProceduresRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_TSQL_ProceduresRowChanging As proc_TSQL_ProceduresRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_TSQL_ProceduresRowChanged As proc_TSQL_ProceduresRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_TSQL_ProceduresRowDeleting As proc_TSQL_ProceduresRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_TSQL_ProceduresRowDeleted As proc_TSQL_ProceduresRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addproc_TSQL_ProceduresRow(ByVal row As proc_TSQL_ProceduresRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addproc_TSQL_ProceduresRow( _
                    ByVal name As String,  _
                    ByVal object_id As Integer,  _
                    ByVal principal_id As Integer,  _
                    ByVal schema_id As Integer,  _
                    ByVal parent_object_id As Integer,  _
                    ByVal type As String,  _
                    ByVal type_desc As String,  _
                    ByVal create_date As Date,  _
                    ByVal modify_date As Date,  _
                    ByVal is_ms_shipped As Boolean,  _
                    ByVal is_published As Boolean,  _
                    ByVal is_schema_published As Boolean,  _
                    ByVal is_auto_executed As Boolean,  _
                    ByVal is_execution_replicated As Boolean,  _
                    ByVal is_repl_serializable_only As Boolean,  _
                    ByVal skips_repl_constraints As Boolean) As proc_TSQL_ProceduresRow
            Dim rowproc_TSQL_ProceduresRow As proc_TSQL_ProceduresRow = CType(Me.NewRow,proc_TSQL_ProceduresRow)
            Dim columnValuesArray() As Object = New Object() {name, object_id, principal_id, schema_id, parent_object_id, type, type_desc, create_date, modify_date, is_ms_shipped, is_published, is_schema_published, is_auto_executed, is_execution_replicated, is_repl_serializable_only, skips_repl_constraints}
            rowproc_TSQL_ProceduresRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowproc_TSQL_ProceduresRow)
            Return rowproc_TSQL_ProceduresRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByobject_id(ByVal object_id As Integer) As proc_TSQL_ProceduresRow
            Return CType(Me.Rows.Find(New Object() {object_id}),proc_TSQL_ProceduresRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As proc_TSQL_ProceduresDataTable = CType(MyBase.Clone,proc_TSQL_ProceduresDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New proc_TSQL_ProceduresDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnname = MyBase.Columns("name")
            Me.columnobject_id = MyBase.Columns("object_id")
            Me.columnprincipal_id = MyBase.Columns("principal_id")
            Me.columnschema_id = MyBase.Columns("schema_id")
            Me.columnparent_object_id = MyBase.Columns("parent_object_id")
            Me.columntype = MyBase.Columns("type")
            Me.columntype_desc = MyBase.Columns("type_desc")
            Me.columncreate_date = MyBase.Columns("create_date")
            Me.columnmodify_date = MyBase.Columns("modify_date")
            Me.columnis_ms_shipped = MyBase.Columns("is_ms_shipped")
            Me.columnis_published = MyBase.Columns("is_published")
            Me.columnis_schema_published = MyBase.Columns("is_schema_published")
            Me.columnis_auto_executed = MyBase.Columns("is_auto_executed")
            Me.columnis_execution_replicated = MyBase.Columns("is_execution_replicated")
            Me.columnis_repl_serializable_only = MyBase.Columns("is_repl_serializable_only")
            Me.columnskips_repl_constraints = MyBase.Columns("skips_repl_constraints")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnname = New Global.System.Data.DataColumn("name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnname)
            Me.columnobject_id = New Global.System.Data.DataColumn("object_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobject_id)
            Me.columnprincipal_id = New Global.System.Data.DataColumn("principal_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprincipal_id)
            Me.columnschema_id = New Global.System.Data.DataColumn("schema_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnschema_id)
            Me.columnparent_object_id = New Global.System.Data.DataColumn("parent_object_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnparent_object_id)
            Me.columntype = New Global.System.Data.DataColumn("type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntype)
            Me.columntype_desc = New Global.System.Data.DataColumn("type_desc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntype_desc)
            Me.columncreate_date = New Global.System.Data.DataColumn("create_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreate_date)
            Me.columnmodify_date = New Global.System.Data.DataColumn("modify_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmodify_date)
            Me.columnis_ms_shipped = New Global.System.Data.DataColumn("is_ms_shipped", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnis_ms_shipped)
            Me.columnis_published = New Global.System.Data.DataColumn("is_published", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnis_published)
            Me.columnis_schema_published = New Global.System.Data.DataColumn("is_schema_published", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnis_schema_published)
            Me.columnis_auto_executed = New Global.System.Data.DataColumn("is_auto_executed", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnis_auto_executed)
            Me.columnis_execution_replicated = New Global.System.Data.DataColumn("is_execution_replicated", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnis_execution_replicated)
            Me.columnis_repl_serializable_only = New Global.System.Data.DataColumn("is_repl_serializable_only", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnis_repl_serializable_only)
            Me.columnskips_repl_constraints = New Global.System.Data.DataColumn("skips_repl_constraints", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnskips_repl_constraints)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnobject_id}, true))
            Me.columnname.AllowDBNull = false
            Me.columnname.MaxLength = 128
            Me.columnobject_id.AllowDBNull = false
            Me.columnobject_id.Unique = true
            Me.columnschema_id.AllowDBNull = false
            Me.columnparent_object_id.AllowDBNull = false
            Me.columntype.AllowDBNull = false
            Me.columntype.MaxLength = 2
            Me.columntype_desc.MaxLength = 60
            Me.columncreate_date.AllowDBNull = false
            Me.columnmodify_date.AllowDBNull = false
            Me.columnis_ms_shipped.ReadOnly = true
            Me.columnis_published.ReadOnly = true
            Me.columnis_schema_published.ReadOnly = true
            Me.columnis_auto_executed.ReadOnly = true
            Me.columnis_execution_replicated.ReadOnly = true
            Me.columnis_repl_serializable_only.ReadOnly = true
            Me.columnskips_repl_constraints.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newproc_TSQL_ProceduresRow() As proc_TSQL_ProceduresRow
            Return CType(Me.NewRow,proc_TSQL_ProceduresRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New proc_TSQL_ProceduresRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(proc_TSQL_ProceduresRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.proc_TSQL_ProceduresRowChangedEvent) Is Nothing) Then
                RaiseEvent proc_TSQL_ProceduresRowChanged(Me, New proc_TSQL_ProceduresRowChangeEvent(CType(e.Row,proc_TSQL_ProceduresRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.proc_TSQL_ProceduresRowChangingEvent) Is Nothing) Then
                RaiseEvent proc_TSQL_ProceduresRowChanging(Me, New proc_TSQL_ProceduresRowChangeEvent(CType(e.Row,proc_TSQL_ProceduresRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.proc_TSQL_ProceduresRowDeletedEvent) Is Nothing) Then
                RaiseEvent proc_TSQL_ProceduresRowDeleted(Me, New proc_TSQL_ProceduresRowChangeEvent(CType(e.Row,proc_TSQL_ProceduresRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.proc_TSQL_ProceduresRowDeletingEvent) Is Nothing) Then
                RaiseEvent proc_TSQL_ProceduresRowDeleting(Me, New proc_TSQL_ProceduresRowChangeEvent(CType(e.Row,proc_TSQL_ProceduresRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removeproc_TSQL_ProceduresRow(ByVal row As proc_TSQL_ProceduresRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ds_TemplateView = New ds_TemplateView()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "proc_TSQL_ProceduresDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class proc_TSQL_TriggersDataTable
        Inherits Global.System.Data.TypedTableBase(Of proc_TSQL_TriggersRow)
        
        Private columnname As Global.System.Data.DataColumn
        
        Private columnobject_id As Global.System.Data.DataColumn
        
        Private columnparent_class As Global.System.Data.DataColumn
        
        Private columnparent_class_desc As Global.System.Data.DataColumn
        
        Private columnparent_id As Global.System.Data.DataColumn
        
        Private columntype As Global.System.Data.DataColumn
        
        Private columntype_desc As Global.System.Data.DataColumn
        
        Private columncreate_date As Global.System.Data.DataColumn
        
        Private columnmodify_date As Global.System.Data.DataColumn
        
        Private columnis_ms_shipped As Global.System.Data.DataColumn
        
        Private columnis_disabled As Global.System.Data.DataColumn
        
        Private columnis_not_for_replication As Global.System.Data.DataColumn
        
        Private columnis_instead_of_trigger As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "proc_TSQL_Triggers"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property object_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnobject_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property parent_classColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnparent_class
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property parent_class_descColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnparent_class_desc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property parent_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnparent_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntype
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property type_descColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntype_desc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property create_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreate_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property modify_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmodify_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property is_ms_shippedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnis_ms_shipped
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property is_disabledColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnis_disabled
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property is_not_for_replicationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnis_not_for_replication
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property is_instead_of_triggerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnis_instead_of_trigger
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As proc_TSQL_TriggersRow
            Get
                Return CType(Me.Rows(index),proc_TSQL_TriggersRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_TSQL_TriggersRowChanging As proc_TSQL_TriggersRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_TSQL_TriggersRowChanged As proc_TSQL_TriggersRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_TSQL_TriggersRowDeleting As proc_TSQL_TriggersRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_TSQL_TriggersRowDeleted As proc_TSQL_TriggersRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addproc_TSQL_TriggersRow(ByVal row As proc_TSQL_TriggersRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addproc_TSQL_TriggersRow(ByVal name As String, ByVal object_id As Integer, ByVal parent_class As Byte, ByVal parent_class_desc As String, ByVal parent_id As Integer, ByVal type As String, ByVal type_desc As String, ByVal create_date As Date, ByVal modify_date As Date, ByVal is_ms_shipped As Boolean, ByVal is_disabled As Boolean, ByVal is_not_for_replication As Boolean, ByVal is_instead_of_trigger As Boolean) As proc_TSQL_TriggersRow
            Dim rowproc_TSQL_TriggersRow As proc_TSQL_TriggersRow = CType(Me.NewRow,proc_TSQL_TriggersRow)
            Dim columnValuesArray() As Object = New Object() {name, object_id, parent_class, parent_class_desc, parent_id, type, type_desc, create_date, modify_date, is_ms_shipped, is_disabled, is_not_for_replication, is_instead_of_trigger}
            rowproc_TSQL_TriggersRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowproc_TSQL_TriggersRow)
            Return rowproc_TSQL_TriggersRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByobject_id(ByVal object_id As Integer) As proc_TSQL_TriggersRow
            Return CType(Me.Rows.Find(New Object() {object_id}),proc_TSQL_TriggersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As proc_TSQL_TriggersDataTable = CType(MyBase.Clone,proc_TSQL_TriggersDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New proc_TSQL_TriggersDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnname = MyBase.Columns("name")
            Me.columnobject_id = MyBase.Columns("object_id")
            Me.columnparent_class = MyBase.Columns("parent_class")
            Me.columnparent_class_desc = MyBase.Columns("parent_class_desc")
            Me.columnparent_id = MyBase.Columns("parent_id")
            Me.columntype = MyBase.Columns("type")
            Me.columntype_desc = MyBase.Columns("type_desc")
            Me.columncreate_date = MyBase.Columns("create_date")
            Me.columnmodify_date = MyBase.Columns("modify_date")
            Me.columnis_ms_shipped = MyBase.Columns("is_ms_shipped")
            Me.columnis_disabled = MyBase.Columns("is_disabled")
            Me.columnis_not_for_replication = MyBase.Columns("is_not_for_replication")
            Me.columnis_instead_of_trigger = MyBase.Columns("is_instead_of_trigger")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnname = New Global.System.Data.DataColumn("name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnname)
            Me.columnobject_id = New Global.System.Data.DataColumn("object_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobject_id)
            Me.columnparent_class = New Global.System.Data.DataColumn("parent_class", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnparent_class)
            Me.columnparent_class_desc = New Global.System.Data.DataColumn("parent_class_desc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnparent_class_desc)
            Me.columnparent_id = New Global.System.Data.DataColumn("parent_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnparent_id)
            Me.columntype = New Global.System.Data.DataColumn("type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntype)
            Me.columntype_desc = New Global.System.Data.DataColumn("type_desc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntype_desc)
            Me.columncreate_date = New Global.System.Data.DataColumn("create_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreate_date)
            Me.columnmodify_date = New Global.System.Data.DataColumn("modify_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmodify_date)
            Me.columnis_ms_shipped = New Global.System.Data.DataColumn("is_ms_shipped", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnis_ms_shipped)
            Me.columnis_disabled = New Global.System.Data.DataColumn("is_disabled", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnis_disabled)
            Me.columnis_not_for_replication = New Global.System.Data.DataColumn("is_not_for_replication", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnis_not_for_replication)
            Me.columnis_instead_of_trigger = New Global.System.Data.DataColumn("is_instead_of_trigger", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnis_instead_of_trigger)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnobject_id}, true))
            Me.columnname.AllowDBNull = false
            Me.columnname.MaxLength = 128
            Me.columnobject_id.AllowDBNull = false
            Me.columnobject_id.Unique = true
            Me.columnparent_class.AllowDBNull = false
            Me.columnparent_class_desc.MaxLength = 60
            Me.columnparent_id.AllowDBNull = false
            Me.columntype.AllowDBNull = false
            Me.columntype.MaxLength = 2
            Me.columntype_desc.MaxLength = 60
            Me.columncreate_date.AllowDBNull = false
            Me.columnmodify_date.AllowDBNull = false
            Me.columnis_ms_shipped.ReadOnly = true
            Me.columnis_disabled.ReadOnly = true
            Me.columnis_not_for_replication.ReadOnly = true
            Me.columnis_instead_of_trigger.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newproc_TSQL_TriggersRow() As proc_TSQL_TriggersRow
            Return CType(Me.NewRow,proc_TSQL_TriggersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New proc_TSQL_TriggersRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(proc_TSQL_TriggersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.proc_TSQL_TriggersRowChangedEvent) Is Nothing) Then
                RaiseEvent proc_TSQL_TriggersRowChanged(Me, New proc_TSQL_TriggersRowChangeEvent(CType(e.Row,proc_TSQL_TriggersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.proc_TSQL_TriggersRowChangingEvent) Is Nothing) Then
                RaiseEvent proc_TSQL_TriggersRowChanging(Me, New proc_TSQL_TriggersRowChangeEvent(CType(e.Row,proc_TSQL_TriggersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.proc_TSQL_TriggersRowDeletedEvent) Is Nothing) Then
                RaiseEvent proc_TSQL_TriggersRowDeleted(Me, New proc_TSQL_TriggersRowChangeEvent(CType(e.Row,proc_TSQL_TriggersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.proc_TSQL_TriggersRowDeletingEvent) Is Nothing) Then
                RaiseEvent proc_TSQL_TriggersRowDeleting(Me, New proc_TSQL_TriggersRowChangeEvent(CType(e.Row,proc_TSQL_TriggersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removeproc_TSQL_TriggersRow(ByVal row As proc_TSQL_TriggersRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ds_TemplateView = New ds_TemplateView()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "proc_TSQL_TriggersDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class proc_TSQL_ParametersDataTable
        Inherits Global.System.Data.TypedTableBase(Of proc_TSQL_ParametersRow)
        
        Private columnSPECIFIC_CATALOG As Global.System.Data.DataColumn
        
        Private columnSPECIFIC_SCHEMA As Global.System.Data.DataColumn
        
        Private columnSPECIFIC_NAME As Global.System.Data.DataColumn
        
        Private columnORDINAL_POSITION As Global.System.Data.DataColumn
        
        Private columnPARAMETER_MODE As Global.System.Data.DataColumn
        
        Private columnIS_RESULT As Global.System.Data.DataColumn
        
        Private columnAS_LOCATOR As Global.System.Data.DataColumn
        
        Private columnPARAMETER_NAME As Global.System.Data.DataColumn
        
        Private columnDATA_TYPE As Global.System.Data.DataColumn
        
        Private columnCHARACTER_MAXIMUM_LENGTH As Global.System.Data.DataColumn
        
        Private columnCHARACTER_OCTET_LENGTH As Global.System.Data.DataColumn
        
        Private columnCOLLATION_CATALOG As Global.System.Data.DataColumn
        
        Private columnCOLLATION_SCHEMA As Global.System.Data.DataColumn
        
        Private columnCOLLATION_NAME As Global.System.Data.DataColumn
        
        Private columnCHARACTER_SET_CATALOG As Global.System.Data.DataColumn
        
        Private columnCHARACTER_SET_SCHEMA As Global.System.Data.DataColumn
        
        Private columnCHARACTER_SET_NAME As Global.System.Data.DataColumn
        
        Private columnNUMERIC_PRECISION As Global.System.Data.DataColumn
        
        Private columnNUMERIC_PRECISION_RADIX As Global.System.Data.DataColumn
        
        Private columnNUMERIC_SCALE As Global.System.Data.DataColumn
        
        Private columnDATETIME_PRECISION As Global.System.Data.DataColumn
        
        Private columnINTERVAL_TYPE As Global.System.Data.DataColumn
        
        Private columnINTERVAL_PRECISION As Global.System.Data.DataColumn
        
        Private columnUSER_DEFINED_TYPE_CATALOG As Global.System.Data.DataColumn
        
        Private columnUSER_DEFINED_TYPE_SCHEMA As Global.System.Data.DataColumn
        
        Private columnUSER_DEFINED_TYPE_NAME As Global.System.Data.DataColumn
        
        Private columnSCOPE_CATALOG As Global.System.Data.DataColumn
        
        Private columnSCOPE_SCHEMA As Global.System.Data.DataColumn
        
        Private columnSCOPE_NAME As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "proc_TSQL_Parameters"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPECIFIC_CATALOGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPECIFIC_CATALOG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPECIFIC_SCHEMAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPECIFIC_SCHEMA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPECIFIC_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPECIFIC_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ORDINAL_POSITIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORDINAL_POSITION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PARAMETER_MODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPARAMETER_MODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IS_RESULTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIS_RESULT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AS_LOCATORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAS_LOCATOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PARAMETER_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPARAMETER_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATA_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATA_TYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CHARACTER_MAXIMUM_LENGTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCHARACTER_MAXIMUM_LENGTH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CHARACTER_OCTET_LENGTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCHARACTER_OCTET_LENGTH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COLLATION_CATALOGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOLLATION_CATALOG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COLLATION_SCHEMAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOLLATION_SCHEMA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COLLATION_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOLLATION_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CHARACTER_SET_CATALOGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCHARACTER_SET_CATALOG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CHARACTER_SET_SCHEMAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCHARACTER_SET_SCHEMA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CHARACTER_SET_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCHARACTER_SET_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMERIC_PRECISIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMERIC_PRECISION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMERIC_PRECISION_RADIXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMERIC_PRECISION_RADIX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMERIC_SCALEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMERIC_SCALE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATETIME_PRECISIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATETIME_PRECISION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INTERVAL_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINTERVAL_TYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INTERVAL_PRECISIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINTERVAL_PRECISION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property USER_DEFINED_TYPE_CATALOGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSER_DEFINED_TYPE_CATALOG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property USER_DEFINED_TYPE_SCHEMAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSER_DEFINED_TYPE_SCHEMA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property USER_DEFINED_TYPE_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSER_DEFINED_TYPE_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SCOPE_CATALOGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCOPE_CATALOG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SCOPE_SCHEMAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCOPE_SCHEMA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SCOPE_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCOPE_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As proc_TSQL_ParametersRow
            Get
                Return CType(Me.Rows(index),proc_TSQL_ParametersRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_TSQL_ParametersRowChanging As proc_TSQL_ParametersRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_TSQL_ParametersRowChanged As proc_TSQL_ParametersRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_TSQL_ParametersRowDeleting As proc_TSQL_ParametersRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_TSQL_ParametersRowDeleted As proc_TSQL_ParametersRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addproc_TSQL_ParametersRow(ByVal row As proc_TSQL_ParametersRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addproc_TSQL_ParametersRow( _
                    ByVal SPECIFIC_CATALOG As String,  _
                    ByVal SPECIFIC_SCHEMA As String,  _
                    ByVal SPECIFIC_NAME As String,  _
                    ByVal ORDINAL_POSITION As Integer,  _
                    ByVal PARAMETER_MODE As String,  _
                    ByVal IS_RESULT As String,  _
                    ByVal AS_LOCATOR As String,  _
                    ByVal PARAMETER_NAME As String,  _
                    ByVal DATA_TYPE As String,  _
                    ByVal CHARACTER_MAXIMUM_LENGTH As Integer,  _
                    ByVal CHARACTER_OCTET_LENGTH As Integer,  _
                    ByVal COLLATION_CATALOG As String,  _
                    ByVal COLLATION_SCHEMA As String,  _
                    ByVal COLLATION_NAME As String,  _
                    ByVal CHARACTER_SET_CATALOG As String,  _
                    ByVal CHARACTER_SET_SCHEMA As String,  _
                    ByVal CHARACTER_SET_NAME As String,  _
                    ByVal NUMERIC_PRECISION As Byte,  _
                    ByVal NUMERIC_PRECISION_RADIX As Short,  _
                    ByVal NUMERIC_SCALE As Integer,  _
                    ByVal DATETIME_PRECISION As Short,  _
                    ByVal INTERVAL_TYPE As String,  _
                    ByVal INTERVAL_PRECISION As Short,  _
                    ByVal USER_DEFINED_TYPE_CATALOG As String,  _
                    ByVal USER_DEFINED_TYPE_SCHEMA As String,  _
                    ByVal USER_DEFINED_TYPE_NAME As String,  _
                    ByVal SCOPE_CATALOG As String,  _
                    ByVal SCOPE_SCHEMA As String,  _
                    ByVal SCOPE_NAME As String) As proc_TSQL_ParametersRow
            Dim rowproc_TSQL_ParametersRow As proc_TSQL_ParametersRow = CType(Me.NewRow,proc_TSQL_ParametersRow)
            Dim columnValuesArray() As Object = New Object() {SPECIFIC_CATALOG, SPECIFIC_SCHEMA, SPECIFIC_NAME, ORDINAL_POSITION, PARAMETER_MODE, IS_RESULT, AS_LOCATOR, PARAMETER_NAME, DATA_TYPE, CHARACTER_MAXIMUM_LENGTH, CHARACTER_OCTET_LENGTH, COLLATION_CATALOG, COLLATION_SCHEMA, COLLATION_NAME, CHARACTER_SET_CATALOG, CHARACTER_SET_SCHEMA, CHARACTER_SET_NAME, NUMERIC_PRECISION, NUMERIC_PRECISION_RADIX, NUMERIC_SCALE, DATETIME_PRECISION, INTERVAL_TYPE, INTERVAL_PRECISION, USER_DEFINED_TYPE_CATALOG, USER_DEFINED_TYPE_SCHEMA, USER_DEFINED_TYPE_NAME, SCOPE_CATALOG, SCOPE_SCHEMA, SCOPE_NAME}
            rowproc_TSQL_ParametersRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowproc_TSQL_ParametersRow)
            Return rowproc_TSQL_ParametersRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As proc_TSQL_ParametersDataTable = CType(MyBase.Clone,proc_TSQL_ParametersDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New proc_TSQL_ParametersDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSPECIFIC_CATALOG = MyBase.Columns("SPECIFIC_CATALOG")
            Me.columnSPECIFIC_SCHEMA = MyBase.Columns("SPECIFIC_SCHEMA")
            Me.columnSPECIFIC_NAME = MyBase.Columns("SPECIFIC_NAME")
            Me.columnORDINAL_POSITION = MyBase.Columns("ORDINAL_POSITION")
            Me.columnPARAMETER_MODE = MyBase.Columns("PARAMETER_MODE")
            Me.columnIS_RESULT = MyBase.Columns("IS_RESULT")
            Me.columnAS_LOCATOR = MyBase.Columns("AS_LOCATOR")
            Me.columnPARAMETER_NAME = MyBase.Columns("PARAMETER_NAME")
            Me.columnDATA_TYPE = MyBase.Columns("DATA_TYPE")
            Me.columnCHARACTER_MAXIMUM_LENGTH = MyBase.Columns("CHARACTER_MAXIMUM_LENGTH")
            Me.columnCHARACTER_OCTET_LENGTH = MyBase.Columns("CHARACTER_OCTET_LENGTH")
            Me.columnCOLLATION_CATALOG = MyBase.Columns("COLLATION_CATALOG")
            Me.columnCOLLATION_SCHEMA = MyBase.Columns("COLLATION_SCHEMA")
            Me.columnCOLLATION_NAME = MyBase.Columns("COLLATION_NAME")
            Me.columnCHARACTER_SET_CATALOG = MyBase.Columns("CHARACTER_SET_CATALOG")
            Me.columnCHARACTER_SET_SCHEMA = MyBase.Columns("CHARACTER_SET_SCHEMA")
            Me.columnCHARACTER_SET_NAME = MyBase.Columns("CHARACTER_SET_NAME")
            Me.columnNUMERIC_PRECISION = MyBase.Columns("NUMERIC_PRECISION")
            Me.columnNUMERIC_PRECISION_RADIX = MyBase.Columns("NUMERIC_PRECISION_RADIX")
            Me.columnNUMERIC_SCALE = MyBase.Columns("NUMERIC_SCALE")
            Me.columnDATETIME_PRECISION = MyBase.Columns("DATETIME_PRECISION")
            Me.columnINTERVAL_TYPE = MyBase.Columns("INTERVAL_TYPE")
            Me.columnINTERVAL_PRECISION = MyBase.Columns("INTERVAL_PRECISION")
            Me.columnUSER_DEFINED_TYPE_CATALOG = MyBase.Columns("USER_DEFINED_TYPE_CATALOG")
            Me.columnUSER_DEFINED_TYPE_SCHEMA = MyBase.Columns("USER_DEFINED_TYPE_SCHEMA")
            Me.columnUSER_DEFINED_TYPE_NAME = MyBase.Columns("USER_DEFINED_TYPE_NAME")
            Me.columnSCOPE_CATALOG = MyBase.Columns("SCOPE_CATALOG")
            Me.columnSCOPE_SCHEMA = MyBase.Columns("SCOPE_SCHEMA")
            Me.columnSCOPE_NAME = MyBase.Columns("SCOPE_NAME")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSPECIFIC_CATALOG = New Global.System.Data.DataColumn("SPECIFIC_CATALOG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPECIFIC_CATALOG)
            Me.columnSPECIFIC_SCHEMA = New Global.System.Data.DataColumn("SPECIFIC_SCHEMA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPECIFIC_SCHEMA)
            Me.columnSPECIFIC_NAME = New Global.System.Data.DataColumn("SPECIFIC_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPECIFIC_NAME)
            Me.columnORDINAL_POSITION = New Global.System.Data.DataColumn("ORDINAL_POSITION", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORDINAL_POSITION)
            Me.columnPARAMETER_MODE = New Global.System.Data.DataColumn("PARAMETER_MODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPARAMETER_MODE)
            Me.columnIS_RESULT = New Global.System.Data.DataColumn("IS_RESULT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIS_RESULT)
            Me.columnAS_LOCATOR = New Global.System.Data.DataColumn("AS_LOCATOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAS_LOCATOR)
            Me.columnPARAMETER_NAME = New Global.System.Data.DataColumn("PARAMETER_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPARAMETER_NAME)
            Me.columnDATA_TYPE = New Global.System.Data.DataColumn("DATA_TYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATA_TYPE)
            Me.columnCHARACTER_MAXIMUM_LENGTH = New Global.System.Data.DataColumn("CHARACTER_MAXIMUM_LENGTH", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHARACTER_MAXIMUM_LENGTH)
            Me.columnCHARACTER_OCTET_LENGTH = New Global.System.Data.DataColumn("CHARACTER_OCTET_LENGTH", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHARACTER_OCTET_LENGTH)
            Me.columnCOLLATION_CATALOG = New Global.System.Data.DataColumn("COLLATION_CATALOG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOLLATION_CATALOG)
            Me.columnCOLLATION_SCHEMA = New Global.System.Data.DataColumn("COLLATION_SCHEMA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOLLATION_SCHEMA)
            Me.columnCOLLATION_NAME = New Global.System.Data.DataColumn("COLLATION_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOLLATION_NAME)
            Me.columnCHARACTER_SET_CATALOG = New Global.System.Data.DataColumn("CHARACTER_SET_CATALOG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHARACTER_SET_CATALOG)
            Me.columnCHARACTER_SET_SCHEMA = New Global.System.Data.DataColumn("CHARACTER_SET_SCHEMA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHARACTER_SET_SCHEMA)
            Me.columnCHARACTER_SET_NAME = New Global.System.Data.DataColumn("CHARACTER_SET_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHARACTER_SET_NAME)
            Me.columnNUMERIC_PRECISION = New Global.System.Data.DataColumn("NUMERIC_PRECISION", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMERIC_PRECISION)
            Me.columnNUMERIC_PRECISION_RADIX = New Global.System.Data.DataColumn("NUMERIC_PRECISION_RADIX", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMERIC_PRECISION_RADIX)
            Me.columnNUMERIC_SCALE = New Global.System.Data.DataColumn("NUMERIC_SCALE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMERIC_SCALE)
            Me.columnDATETIME_PRECISION = New Global.System.Data.DataColumn("DATETIME_PRECISION", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATETIME_PRECISION)
            Me.columnINTERVAL_TYPE = New Global.System.Data.DataColumn("INTERVAL_TYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINTERVAL_TYPE)
            Me.columnINTERVAL_PRECISION = New Global.System.Data.DataColumn("INTERVAL_PRECISION", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINTERVAL_PRECISION)
            Me.columnUSER_DEFINED_TYPE_CATALOG = New Global.System.Data.DataColumn("USER_DEFINED_TYPE_CATALOG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSER_DEFINED_TYPE_CATALOG)
            Me.columnUSER_DEFINED_TYPE_SCHEMA = New Global.System.Data.DataColumn("USER_DEFINED_TYPE_SCHEMA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSER_DEFINED_TYPE_SCHEMA)
            Me.columnUSER_DEFINED_TYPE_NAME = New Global.System.Data.DataColumn("USER_DEFINED_TYPE_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSER_DEFINED_TYPE_NAME)
            Me.columnSCOPE_CATALOG = New Global.System.Data.DataColumn("SCOPE_CATALOG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCOPE_CATALOG)
            Me.columnSCOPE_SCHEMA = New Global.System.Data.DataColumn("SCOPE_SCHEMA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCOPE_SCHEMA)
            Me.columnSCOPE_NAME = New Global.System.Data.DataColumn("SCOPE_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCOPE_NAME)
            Me.columnSPECIFIC_CATALOG.ReadOnly = true
            Me.columnSPECIFIC_CATALOG.MaxLength = 128
            Me.columnSPECIFIC_SCHEMA.ReadOnly = true
            Me.columnSPECIFIC_SCHEMA.MaxLength = 128
            Me.columnSPECIFIC_NAME.AllowDBNull = false
            Me.columnSPECIFIC_NAME.MaxLength = 128
            Me.columnORDINAL_POSITION.AllowDBNull = false
            Me.columnPARAMETER_MODE.ReadOnly = true
            Me.columnPARAMETER_MODE.MaxLength = 10
            Me.columnIS_RESULT.ReadOnly = true
            Me.columnIS_RESULT.MaxLength = 10
            Me.columnAS_LOCATOR.ReadOnly = true
            Me.columnAS_LOCATOR.MaxLength = 10
            Me.columnPARAMETER_NAME.MaxLength = 128
            Me.columnDATA_TYPE.ReadOnly = true
            Me.columnDATA_TYPE.MaxLength = 128
            Me.columnCHARACTER_MAXIMUM_LENGTH.ReadOnly = true
            Me.columnCHARACTER_OCTET_LENGTH.ReadOnly = true
            Me.columnCOLLATION_CATALOG.ReadOnly = true
            Me.columnCOLLATION_CATALOG.MaxLength = 128
            Me.columnCOLLATION_SCHEMA.ReadOnly = true
            Me.columnCOLLATION_SCHEMA.MaxLength = 128
            Me.columnCOLLATION_NAME.ReadOnly = true
            Me.columnCOLLATION_NAME.MaxLength = 128
            Me.columnCHARACTER_SET_CATALOG.ReadOnly = true
            Me.columnCHARACTER_SET_CATALOG.MaxLength = 128
            Me.columnCHARACTER_SET_SCHEMA.ReadOnly = true
            Me.columnCHARACTER_SET_SCHEMA.MaxLength = 128
            Me.columnCHARACTER_SET_NAME.ReadOnly = true
            Me.columnCHARACTER_SET_NAME.MaxLength = 128
            Me.columnNUMERIC_PRECISION.ReadOnly = true
            Me.columnNUMERIC_PRECISION_RADIX.ReadOnly = true
            Me.columnNUMERIC_SCALE.ReadOnly = true
            Me.columnDATETIME_PRECISION.ReadOnly = true
            Me.columnINTERVAL_TYPE.ReadOnly = true
            Me.columnINTERVAL_TYPE.MaxLength = 30
            Me.columnINTERVAL_PRECISION.ReadOnly = true
            Me.columnUSER_DEFINED_TYPE_CATALOG.ReadOnly = true
            Me.columnUSER_DEFINED_TYPE_CATALOG.MaxLength = 128
            Me.columnUSER_DEFINED_TYPE_SCHEMA.ReadOnly = true
            Me.columnUSER_DEFINED_TYPE_SCHEMA.MaxLength = 128
            Me.columnUSER_DEFINED_TYPE_NAME.ReadOnly = true
            Me.columnUSER_DEFINED_TYPE_NAME.MaxLength = 128
            Me.columnSCOPE_CATALOG.ReadOnly = true
            Me.columnSCOPE_CATALOG.MaxLength = 128
            Me.columnSCOPE_SCHEMA.ReadOnly = true
            Me.columnSCOPE_SCHEMA.MaxLength = 128
            Me.columnSCOPE_NAME.ReadOnly = true
            Me.columnSCOPE_NAME.MaxLength = 128
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newproc_TSQL_ParametersRow() As proc_TSQL_ParametersRow
            Return CType(Me.NewRow,proc_TSQL_ParametersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New proc_TSQL_ParametersRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(proc_TSQL_ParametersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.proc_TSQL_ParametersRowChangedEvent) Is Nothing) Then
                RaiseEvent proc_TSQL_ParametersRowChanged(Me, New proc_TSQL_ParametersRowChangeEvent(CType(e.Row,proc_TSQL_ParametersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.proc_TSQL_ParametersRowChangingEvent) Is Nothing) Then
                RaiseEvent proc_TSQL_ParametersRowChanging(Me, New proc_TSQL_ParametersRowChangeEvent(CType(e.Row,proc_TSQL_ParametersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.proc_TSQL_ParametersRowDeletedEvent) Is Nothing) Then
                RaiseEvent proc_TSQL_ParametersRowDeleted(Me, New proc_TSQL_ParametersRowChangeEvent(CType(e.Row,proc_TSQL_ParametersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.proc_TSQL_ParametersRowDeletingEvent) Is Nothing) Then
                RaiseEvent proc_TSQL_ParametersRowDeleting(Me, New proc_TSQL_ParametersRowChangeEvent(CType(e.Row,proc_TSQL_ParametersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removeproc_TSQL_ParametersRow(ByVal row As proc_TSQL_ParametersRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ds_TemplateView = New ds_TemplateView()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "proc_TSQL_ParametersDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class proc_TSQL_SynonymsDataTable
        Inherits Global.System.Data.TypedTableBase(Of proc_TSQL_SynonymsRow)
        
        Private columnname As Global.System.Data.DataColumn
        
        Private columnobject_id As Global.System.Data.DataColumn
        
        Private columnprincipal_id As Global.System.Data.DataColumn
        
        Private columnschema_id As Global.System.Data.DataColumn
        
        Private columnparent_object_id As Global.System.Data.DataColumn
        
        Private columntype As Global.System.Data.DataColumn
        
        Private columntype_desc As Global.System.Data.DataColumn
        
        Private columncreate_date As Global.System.Data.DataColumn
        
        Private columnmodify_date As Global.System.Data.DataColumn
        
        Private columnis_ms_shipped As Global.System.Data.DataColumn
        
        Private columnis_published As Global.System.Data.DataColumn
        
        Private columnis_schema_published As Global.System.Data.DataColumn
        
        Private columnbase_object_name As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "proc_TSQL_Synonyms"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property object_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnobject_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property principal_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprincipal_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property schema_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnschema_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property parent_object_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnparent_object_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntype
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property type_descColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntype_desc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property create_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreate_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property modify_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmodify_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property is_ms_shippedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnis_ms_shipped
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property is_publishedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnis_published
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property is_schema_publishedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnis_schema_published
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property base_object_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbase_object_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As proc_TSQL_SynonymsRow
            Get
                Return CType(Me.Rows(index),proc_TSQL_SynonymsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_TSQL_SynonymsRowChanging As proc_TSQL_SynonymsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_TSQL_SynonymsRowChanged As proc_TSQL_SynonymsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_TSQL_SynonymsRowDeleting As proc_TSQL_SynonymsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_TSQL_SynonymsRowDeleted As proc_TSQL_SynonymsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addproc_TSQL_SynonymsRow(ByVal row As proc_TSQL_SynonymsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addproc_TSQL_SynonymsRow(ByVal name As String, ByVal object_id As Integer, ByVal principal_id As Integer, ByVal schema_id As Integer, ByVal parent_object_id As Integer, ByVal type As String, ByVal type_desc As String, ByVal create_date As Date, ByVal modify_date As Date, ByVal is_ms_shipped As Boolean, ByVal is_published As Boolean, ByVal is_schema_published As Boolean, ByVal base_object_name As String) As proc_TSQL_SynonymsRow
            Dim rowproc_TSQL_SynonymsRow As proc_TSQL_SynonymsRow = CType(Me.NewRow,proc_TSQL_SynonymsRow)
            Dim columnValuesArray() As Object = New Object() {name, object_id, principal_id, schema_id, parent_object_id, type, type_desc, create_date, modify_date, is_ms_shipped, is_published, is_schema_published, base_object_name}
            rowproc_TSQL_SynonymsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowproc_TSQL_SynonymsRow)
            Return rowproc_TSQL_SynonymsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByobject_id(ByVal object_id As Integer) As proc_TSQL_SynonymsRow
            Return CType(Me.Rows.Find(New Object() {object_id}),proc_TSQL_SynonymsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As proc_TSQL_SynonymsDataTable = CType(MyBase.Clone,proc_TSQL_SynonymsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New proc_TSQL_SynonymsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnname = MyBase.Columns("name")
            Me.columnobject_id = MyBase.Columns("object_id")
            Me.columnprincipal_id = MyBase.Columns("principal_id")
            Me.columnschema_id = MyBase.Columns("schema_id")
            Me.columnparent_object_id = MyBase.Columns("parent_object_id")
            Me.columntype = MyBase.Columns("type")
            Me.columntype_desc = MyBase.Columns("type_desc")
            Me.columncreate_date = MyBase.Columns("create_date")
            Me.columnmodify_date = MyBase.Columns("modify_date")
            Me.columnis_ms_shipped = MyBase.Columns("is_ms_shipped")
            Me.columnis_published = MyBase.Columns("is_published")
            Me.columnis_schema_published = MyBase.Columns("is_schema_published")
            Me.columnbase_object_name = MyBase.Columns("base_object_name")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnname = New Global.System.Data.DataColumn("name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnname)
            Me.columnobject_id = New Global.System.Data.DataColumn("object_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobject_id)
            Me.columnprincipal_id = New Global.System.Data.DataColumn("principal_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprincipal_id)
            Me.columnschema_id = New Global.System.Data.DataColumn("schema_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnschema_id)
            Me.columnparent_object_id = New Global.System.Data.DataColumn("parent_object_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnparent_object_id)
            Me.columntype = New Global.System.Data.DataColumn("type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntype)
            Me.columntype_desc = New Global.System.Data.DataColumn("type_desc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntype_desc)
            Me.columncreate_date = New Global.System.Data.DataColumn("create_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreate_date)
            Me.columnmodify_date = New Global.System.Data.DataColumn("modify_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmodify_date)
            Me.columnis_ms_shipped = New Global.System.Data.DataColumn("is_ms_shipped", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnis_ms_shipped)
            Me.columnis_published = New Global.System.Data.DataColumn("is_published", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnis_published)
            Me.columnis_schema_published = New Global.System.Data.DataColumn("is_schema_published", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnis_schema_published)
            Me.columnbase_object_name = New Global.System.Data.DataColumn("base_object_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbase_object_name)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnobject_id}, true))
            Me.columnname.AllowDBNull = false
            Me.columnname.MaxLength = 128
            Me.columnobject_id.AllowDBNull = false
            Me.columnobject_id.Unique = true
            Me.columnschema_id.AllowDBNull = false
            Me.columnparent_object_id.AllowDBNull = false
            Me.columntype.AllowDBNull = false
            Me.columntype.MaxLength = 2
            Me.columntype_desc.MaxLength = 60
            Me.columncreate_date.AllowDBNull = false
            Me.columnmodify_date.AllowDBNull = false
            Me.columnis_ms_shipped.ReadOnly = true
            Me.columnis_published.ReadOnly = true
            Me.columnis_schema_published.ReadOnly = true
            Me.columnbase_object_name.ReadOnly = true
            Me.columnbase_object_name.MaxLength = 1035
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newproc_TSQL_SynonymsRow() As proc_TSQL_SynonymsRow
            Return CType(Me.NewRow,proc_TSQL_SynonymsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New proc_TSQL_SynonymsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(proc_TSQL_SynonymsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.proc_TSQL_SynonymsRowChangedEvent) Is Nothing) Then
                RaiseEvent proc_TSQL_SynonymsRowChanged(Me, New proc_TSQL_SynonymsRowChangeEvent(CType(e.Row,proc_TSQL_SynonymsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.proc_TSQL_SynonymsRowChangingEvent) Is Nothing) Then
                RaiseEvent proc_TSQL_SynonymsRowChanging(Me, New proc_TSQL_SynonymsRowChangeEvent(CType(e.Row,proc_TSQL_SynonymsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.proc_TSQL_SynonymsRowDeletedEvent) Is Nothing) Then
                RaiseEvent proc_TSQL_SynonymsRowDeleted(Me, New proc_TSQL_SynonymsRowChangeEvent(CType(e.Row,proc_TSQL_SynonymsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.proc_TSQL_SynonymsRowDeletingEvent) Is Nothing) Then
                RaiseEvent proc_TSQL_SynonymsRowDeleting(Me, New proc_TSQL_SynonymsRowChangeEvent(CType(e.Row,proc_TSQL_SynonymsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removeproc_TSQL_SynonymsRow(ByVal row As proc_TSQL_SynonymsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ds_TemplateView = New ds_TemplateView()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "proc_TSQL_SynonymsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class proc_TSQL_ViewsDataTable
        Inherits Global.System.Data.TypedTableBase(Of proc_TSQL_ViewsRow)
        
        Private columnname As Global.System.Data.DataColumn
        
        Private columnobject_id As Global.System.Data.DataColumn
        
        Private columnprincipal_id As Global.System.Data.DataColumn
        
        Private columnschema_id As Global.System.Data.DataColumn
        
        Private columnparent_object_id As Global.System.Data.DataColumn
        
        Private columntype As Global.System.Data.DataColumn
        
        Private columntype_desc As Global.System.Data.DataColumn
        
        Private columncreate_date As Global.System.Data.DataColumn
        
        Private columnmodify_date As Global.System.Data.DataColumn
        
        Private columnis_ms_shipped As Global.System.Data.DataColumn
        
        Private columnis_published As Global.System.Data.DataColumn
        
        Private columnis_schema_published As Global.System.Data.DataColumn
        
        Private columnis_replicated As Global.System.Data.DataColumn
        
        Private columnhas_replication_filter As Global.System.Data.DataColumn
        
        Private columnhas_opaque_metadata As Global.System.Data.DataColumn
        
        Private columnhas_unchecked_assembly_data As Global.System.Data.DataColumn
        
        Private columnwith_check_option As Global.System.Data.DataColumn
        
        Private columnis_date_correlation_view As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "proc_TSQL_Views"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property object_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnobject_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property principal_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprincipal_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property schema_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnschema_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property parent_object_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnparent_object_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntype
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property type_descColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntype_desc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property create_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreate_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property modify_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmodify_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property is_ms_shippedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnis_ms_shipped
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property is_publishedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnis_published
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property is_schema_publishedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnis_schema_published
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property is_replicatedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnis_replicated
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property has_replication_filterColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhas_replication_filter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property has_opaque_metadataColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhas_opaque_metadata
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property has_unchecked_assembly_dataColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhas_unchecked_assembly_data
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property with_check_optionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnwith_check_option
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property is_date_correlation_viewColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnis_date_correlation_view
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As proc_TSQL_ViewsRow
            Get
                Return CType(Me.Rows(index),proc_TSQL_ViewsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_TSQL_ViewsRowChanging As proc_TSQL_ViewsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_TSQL_ViewsRowChanged As proc_TSQL_ViewsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_TSQL_ViewsRowDeleting As proc_TSQL_ViewsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_TSQL_ViewsRowDeleted As proc_TSQL_ViewsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addproc_TSQL_ViewsRow(ByVal row As proc_TSQL_ViewsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addproc_TSQL_ViewsRow( _
                    ByVal name As String,  _
                    ByVal object_id As Integer,  _
                    ByVal principal_id As Integer,  _
                    ByVal schema_id As Integer,  _
                    ByVal parent_object_id As Integer,  _
                    ByVal type As String,  _
                    ByVal type_desc As String,  _
                    ByVal create_date As Date,  _
                    ByVal modify_date As Date,  _
                    ByVal is_ms_shipped As Boolean,  _
                    ByVal is_published As Boolean,  _
                    ByVal is_schema_published As Boolean,  _
                    ByVal is_replicated As Boolean,  _
                    ByVal has_replication_filter As Boolean,  _
                    ByVal has_opaque_metadata As Boolean,  _
                    ByVal has_unchecked_assembly_data As Boolean,  _
                    ByVal with_check_option As Boolean,  _
                    ByVal is_date_correlation_view As Boolean) As proc_TSQL_ViewsRow
            Dim rowproc_TSQL_ViewsRow As proc_TSQL_ViewsRow = CType(Me.NewRow,proc_TSQL_ViewsRow)
            Dim columnValuesArray() As Object = New Object() {name, object_id, principal_id, schema_id, parent_object_id, type, type_desc, create_date, modify_date, is_ms_shipped, is_published, is_schema_published, is_replicated, has_replication_filter, has_opaque_metadata, has_unchecked_assembly_data, with_check_option, is_date_correlation_view}
            rowproc_TSQL_ViewsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowproc_TSQL_ViewsRow)
            Return rowproc_TSQL_ViewsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByobject_id(ByVal object_id As Integer) As proc_TSQL_ViewsRow
            Return CType(Me.Rows.Find(New Object() {object_id}),proc_TSQL_ViewsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As proc_TSQL_ViewsDataTable = CType(MyBase.Clone,proc_TSQL_ViewsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New proc_TSQL_ViewsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnname = MyBase.Columns("name")
            Me.columnobject_id = MyBase.Columns("object_id")
            Me.columnprincipal_id = MyBase.Columns("principal_id")
            Me.columnschema_id = MyBase.Columns("schema_id")
            Me.columnparent_object_id = MyBase.Columns("parent_object_id")
            Me.columntype = MyBase.Columns("type")
            Me.columntype_desc = MyBase.Columns("type_desc")
            Me.columncreate_date = MyBase.Columns("create_date")
            Me.columnmodify_date = MyBase.Columns("modify_date")
            Me.columnis_ms_shipped = MyBase.Columns("is_ms_shipped")
            Me.columnis_published = MyBase.Columns("is_published")
            Me.columnis_schema_published = MyBase.Columns("is_schema_published")
            Me.columnis_replicated = MyBase.Columns("is_replicated")
            Me.columnhas_replication_filter = MyBase.Columns("has_replication_filter")
            Me.columnhas_opaque_metadata = MyBase.Columns("has_opaque_metadata")
            Me.columnhas_unchecked_assembly_data = MyBase.Columns("has_unchecked_assembly_data")
            Me.columnwith_check_option = MyBase.Columns("with_check_option")
            Me.columnis_date_correlation_view = MyBase.Columns("is_date_correlation_view")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnname = New Global.System.Data.DataColumn("name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnname)
            Me.columnobject_id = New Global.System.Data.DataColumn("object_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobject_id)
            Me.columnprincipal_id = New Global.System.Data.DataColumn("principal_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprincipal_id)
            Me.columnschema_id = New Global.System.Data.DataColumn("schema_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnschema_id)
            Me.columnparent_object_id = New Global.System.Data.DataColumn("parent_object_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnparent_object_id)
            Me.columntype = New Global.System.Data.DataColumn("type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntype)
            Me.columntype_desc = New Global.System.Data.DataColumn("type_desc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntype_desc)
            Me.columncreate_date = New Global.System.Data.DataColumn("create_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreate_date)
            Me.columnmodify_date = New Global.System.Data.DataColumn("modify_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmodify_date)
            Me.columnis_ms_shipped = New Global.System.Data.DataColumn("is_ms_shipped", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnis_ms_shipped)
            Me.columnis_published = New Global.System.Data.DataColumn("is_published", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnis_published)
            Me.columnis_schema_published = New Global.System.Data.DataColumn("is_schema_published", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnis_schema_published)
            Me.columnis_replicated = New Global.System.Data.DataColumn("is_replicated", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnis_replicated)
            Me.columnhas_replication_filter = New Global.System.Data.DataColumn("has_replication_filter", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhas_replication_filter)
            Me.columnhas_opaque_metadata = New Global.System.Data.DataColumn("has_opaque_metadata", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhas_opaque_metadata)
            Me.columnhas_unchecked_assembly_data = New Global.System.Data.DataColumn("has_unchecked_assembly_data", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhas_unchecked_assembly_data)
            Me.columnwith_check_option = New Global.System.Data.DataColumn("with_check_option", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwith_check_option)
            Me.columnis_date_correlation_view = New Global.System.Data.DataColumn("is_date_correlation_view", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnis_date_correlation_view)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnobject_id}, true))
            Me.columnname.AllowDBNull = false
            Me.columnname.MaxLength = 128
            Me.columnobject_id.AllowDBNull = false
            Me.columnobject_id.Unique = true
            Me.columnschema_id.AllowDBNull = false
            Me.columnparent_object_id.AllowDBNull = false
            Me.columntype.AllowDBNull = false
            Me.columntype.MaxLength = 2
            Me.columntype_desc.MaxLength = 60
            Me.columncreate_date.AllowDBNull = false
            Me.columnmodify_date.AllowDBNull = false
            Me.columnis_ms_shipped.ReadOnly = true
            Me.columnis_published.ReadOnly = true
            Me.columnis_schema_published.ReadOnly = true
            Me.columnis_replicated.ReadOnly = true
            Me.columnhas_replication_filter.ReadOnly = true
            Me.columnhas_opaque_metadata.ReadOnly = true
            Me.columnhas_unchecked_assembly_data.ReadOnly = true
            Me.columnwith_check_option.ReadOnly = true
            Me.columnis_date_correlation_view.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newproc_TSQL_ViewsRow() As proc_TSQL_ViewsRow
            Return CType(Me.NewRow,proc_TSQL_ViewsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New proc_TSQL_ViewsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(proc_TSQL_ViewsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.proc_TSQL_ViewsRowChangedEvent) Is Nothing) Then
                RaiseEvent proc_TSQL_ViewsRowChanged(Me, New proc_TSQL_ViewsRowChangeEvent(CType(e.Row,proc_TSQL_ViewsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.proc_TSQL_ViewsRowChangingEvent) Is Nothing) Then
                RaiseEvent proc_TSQL_ViewsRowChanging(Me, New proc_TSQL_ViewsRowChangeEvent(CType(e.Row,proc_TSQL_ViewsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.proc_TSQL_ViewsRowDeletedEvent) Is Nothing) Then
                RaiseEvent proc_TSQL_ViewsRowDeleted(Me, New proc_TSQL_ViewsRowChangeEvent(CType(e.Row,proc_TSQL_ViewsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.proc_TSQL_ViewsRowDeletingEvent) Is Nothing) Then
                RaiseEvent proc_TSQL_ViewsRowDeleting(Me, New proc_TSQL_ViewsRowChangeEvent(CType(e.Row,proc_TSQL_ViewsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removeproc_TSQL_ViewsRow(ByVal row As proc_TSQL_ViewsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ds_TemplateView = New ds_TemplateView()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "proc_TSQL_ViewsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class proc_TSQL_TablesDataTable
        Inherits Global.System.Data.TypedTableBase(Of proc_TSQL_TablesRow)
        
        Private columnname As Global.System.Data.DataColumn
        
        Private columnobject_id As Global.System.Data.DataColumn
        
        Private columnprincipal_id As Global.System.Data.DataColumn
        
        Private columnschema_id As Global.System.Data.DataColumn
        
        Private columnparent_object_id As Global.System.Data.DataColumn
        
        Private columntype As Global.System.Data.DataColumn
        
        Private columntype_desc As Global.System.Data.DataColumn
        
        Private columncreate_date As Global.System.Data.DataColumn
        
        Private columnmodify_date As Global.System.Data.DataColumn
        
        Private columnis_ms_shipped As Global.System.Data.DataColumn
        
        Private columnis_published As Global.System.Data.DataColumn
        
        Private columnis_schema_published As Global.System.Data.DataColumn
        
        Private columnlob_data_space_id As Global.System.Data.DataColumn
        
        Private columnfilestream_data_space_id As Global.System.Data.DataColumn
        
        Private columnmax_column_id_used As Global.System.Data.DataColumn
        
        Private columnlock_on_bulk_load As Global.System.Data.DataColumn
        
        Private columnuses_ansi_nulls As Global.System.Data.DataColumn
        
        Private columnis_replicated As Global.System.Data.DataColumn
        
        Private columnhas_replication_filter As Global.System.Data.DataColumn
        
        Private columnis_merge_published As Global.System.Data.DataColumn
        
        Private columnis_sync_tran_subscribed As Global.System.Data.DataColumn
        
        Private columnhas_unchecked_assembly_data As Global.System.Data.DataColumn
        
        Private columntext_in_row_limit As Global.System.Data.DataColumn
        
        Private columnlarge_value_types_out_of_row As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "proc_TSQL_Tables"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property object_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnobject_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property principal_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprincipal_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property schema_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnschema_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property parent_object_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnparent_object_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntype
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property type_descColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntype_desc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property create_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreate_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property modify_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmodify_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property is_ms_shippedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnis_ms_shipped
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property is_publishedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnis_published
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property is_schema_publishedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnis_schema_published
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property lob_data_space_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlob_data_space_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property filestream_data_space_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfilestream_data_space_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property max_column_id_usedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmax_column_id_used
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property lock_on_bulk_loadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlock_on_bulk_load
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property uses_ansi_nullsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnuses_ansi_nulls
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property is_replicatedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnis_replicated
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property has_replication_filterColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhas_replication_filter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property is_merge_publishedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnis_merge_published
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property is_sync_tran_subscribedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnis_sync_tran_subscribed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property has_unchecked_assembly_dataColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhas_unchecked_assembly_data
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property text_in_row_limitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntext_in_row_limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property large_value_types_out_of_rowColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlarge_value_types_out_of_row
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As proc_TSQL_TablesRow
            Get
                Return CType(Me.Rows(index),proc_TSQL_TablesRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_TSQL_TablesRowChanging As proc_TSQL_TablesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_TSQL_TablesRowChanged As proc_TSQL_TablesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_TSQL_TablesRowDeleting As proc_TSQL_TablesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_TSQL_TablesRowDeleted As proc_TSQL_TablesRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addproc_TSQL_TablesRow(ByVal row As proc_TSQL_TablesRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addproc_TSQL_TablesRow( _
                    ByVal name As String,  _
                    ByVal object_id As Integer,  _
                    ByVal principal_id As Integer,  _
                    ByVal schema_id As Integer,  _
                    ByVal parent_object_id As Integer,  _
                    ByVal type As String,  _
                    ByVal type_desc As String,  _
                    ByVal create_date As Date,  _
                    ByVal modify_date As Date,  _
                    ByVal is_ms_shipped As Boolean,  _
                    ByVal is_published As Boolean,  _
                    ByVal is_schema_published As Boolean,  _
                    ByVal lob_data_space_id As Integer,  _
                    ByVal filestream_data_space_id As Integer,  _
                    ByVal max_column_id_used As Integer,  _
                    ByVal lock_on_bulk_load As Boolean,  _
                    ByVal uses_ansi_nulls As Boolean,  _
                    ByVal is_replicated As Boolean,  _
                    ByVal has_replication_filter As Boolean,  _
                    ByVal is_merge_published As Boolean,  _
                    ByVal is_sync_tran_subscribed As Boolean,  _
                    ByVal has_unchecked_assembly_data As Boolean,  _
                    ByVal text_in_row_limit As Integer,  _
                    ByVal large_value_types_out_of_row As Boolean) As proc_TSQL_TablesRow
            Dim rowproc_TSQL_TablesRow As proc_TSQL_TablesRow = CType(Me.NewRow,proc_TSQL_TablesRow)
            Dim columnValuesArray() As Object = New Object() {name, object_id, principal_id, schema_id, parent_object_id, type, type_desc, create_date, modify_date, is_ms_shipped, is_published, is_schema_published, lob_data_space_id, filestream_data_space_id, max_column_id_used, lock_on_bulk_load, uses_ansi_nulls, is_replicated, has_replication_filter, is_merge_published, is_sync_tran_subscribed, has_unchecked_assembly_data, text_in_row_limit, large_value_types_out_of_row}
            rowproc_TSQL_TablesRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowproc_TSQL_TablesRow)
            Return rowproc_TSQL_TablesRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByobject_id(ByVal object_id As Integer) As proc_TSQL_TablesRow
            Return CType(Me.Rows.Find(New Object() {object_id}),proc_TSQL_TablesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As proc_TSQL_TablesDataTable = CType(MyBase.Clone,proc_TSQL_TablesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New proc_TSQL_TablesDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnname = MyBase.Columns("name")
            Me.columnobject_id = MyBase.Columns("object_id")
            Me.columnprincipal_id = MyBase.Columns("principal_id")
            Me.columnschema_id = MyBase.Columns("schema_id")
            Me.columnparent_object_id = MyBase.Columns("parent_object_id")
            Me.columntype = MyBase.Columns("type")
            Me.columntype_desc = MyBase.Columns("type_desc")
            Me.columncreate_date = MyBase.Columns("create_date")
            Me.columnmodify_date = MyBase.Columns("modify_date")
            Me.columnis_ms_shipped = MyBase.Columns("is_ms_shipped")
            Me.columnis_published = MyBase.Columns("is_published")
            Me.columnis_schema_published = MyBase.Columns("is_schema_published")
            Me.columnlob_data_space_id = MyBase.Columns("lob_data_space_id")
            Me.columnfilestream_data_space_id = MyBase.Columns("filestream_data_space_id")
            Me.columnmax_column_id_used = MyBase.Columns("max_column_id_used")
            Me.columnlock_on_bulk_load = MyBase.Columns("lock_on_bulk_load")
            Me.columnuses_ansi_nulls = MyBase.Columns("uses_ansi_nulls")
            Me.columnis_replicated = MyBase.Columns("is_replicated")
            Me.columnhas_replication_filter = MyBase.Columns("has_replication_filter")
            Me.columnis_merge_published = MyBase.Columns("is_merge_published")
            Me.columnis_sync_tran_subscribed = MyBase.Columns("is_sync_tran_subscribed")
            Me.columnhas_unchecked_assembly_data = MyBase.Columns("has_unchecked_assembly_data")
            Me.columntext_in_row_limit = MyBase.Columns("text_in_row_limit")
            Me.columnlarge_value_types_out_of_row = MyBase.Columns("large_value_types_out_of_row")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnname = New Global.System.Data.DataColumn("name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnname)
            Me.columnobject_id = New Global.System.Data.DataColumn("object_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobject_id)
            Me.columnprincipal_id = New Global.System.Data.DataColumn("principal_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprincipal_id)
            Me.columnschema_id = New Global.System.Data.DataColumn("schema_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnschema_id)
            Me.columnparent_object_id = New Global.System.Data.DataColumn("parent_object_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnparent_object_id)
            Me.columntype = New Global.System.Data.DataColumn("type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntype)
            Me.columntype_desc = New Global.System.Data.DataColumn("type_desc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntype_desc)
            Me.columncreate_date = New Global.System.Data.DataColumn("create_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreate_date)
            Me.columnmodify_date = New Global.System.Data.DataColumn("modify_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmodify_date)
            Me.columnis_ms_shipped = New Global.System.Data.DataColumn("is_ms_shipped", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnis_ms_shipped)
            Me.columnis_published = New Global.System.Data.DataColumn("is_published", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnis_published)
            Me.columnis_schema_published = New Global.System.Data.DataColumn("is_schema_published", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnis_schema_published)
            Me.columnlob_data_space_id = New Global.System.Data.DataColumn("lob_data_space_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlob_data_space_id)
            Me.columnfilestream_data_space_id = New Global.System.Data.DataColumn("filestream_data_space_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfilestream_data_space_id)
            Me.columnmax_column_id_used = New Global.System.Data.DataColumn("max_column_id_used", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmax_column_id_used)
            Me.columnlock_on_bulk_load = New Global.System.Data.DataColumn("lock_on_bulk_load", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlock_on_bulk_load)
            Me.columnuses_ansi_nulls = New Global.System.Data.DataColumn("uses_ansi_nulls", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnuses_ansi_nulls)
            Me.columnis_replicated = New Global.System.Data.DataColumn("is_replicated", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnis_replicated)
            Me.columnhas_replication_filter = New Global.System.Data.DataColumn("has_replication_filter", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhas_replication_filter)
            Me.columnis_merge_published = New Global.System.Data.DataColumn("is_merge_published", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnis_merge_published)
            Me.columnis_sync_tran_subscribed = New Global.System.Data.DataColumn("is_sync_tran_subscribed", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnis_sync_tran_subscribed)
            Me.columnhas_unchecked_assembly_data = New Global.System.Data.DataColumn("has_unchecked_assembly_data", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhas_unchecked_assembly_data)
            Me.columntext_in_row_limit = New Global.System.Data.DataColumn("text_in_row_limit", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntext_in_row_limit)
            Me.columnlarge_value_types_out_of_row = New Global.System.Data.DataColumn("large_value_types_out_of_row", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlarge_value_types_out_of_row)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnobject_id}, true))
            Me.columnname.AllowDBNull = false
            Me.columnname.MaxLength = 128
            Me.columnobject_id.AllowDBNull = false
            Me.columnobject_id.Unique = true
            Me.columnschema_id.AllowDBNull = false
            Me.columnparent_object_id.AllowDBNull = false
            Me.columntype.AllowDBNull = false
            Me.columntype.MaxLength = 2
            Me.columntype_desc.MaxLength = 60
            Me.columncreate_date.AllowDBNull = false
            Me.columnmodify_date.AllowDBNull = false
            Me.columnis_ms_shipped.ReadOnly = true
            Me.columnis_published.ReadOnly = true
            Me.columnis_schema_published.ReadOnly = true
            Me.columnmax_column_id_used.AllowDBNull = false
            Me.columnlock_on_bulk_load.ReadOnly = true
            Me.columnuses_ansi_nulls.ReadOnly = true
            Me.columnis_replicated.ReadOnly = true
            Me.columnhas_replication_filter.ReadOnly = true
            Me.columnis_merge_published.ReadOnly = true
            Me.columnis_sync_tran_subscribed.ReadOnly = true
            Me.columnhas_unchecked_assembly_data.ReadOnly = true
            Me.columnlarge_value_types_out_of_row.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newproc_TSQL_TablesRow() As proc_TSQL_TablesRow
            Return CType(Me.NewRow,proc_TSQL_TablesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New proc_TSQL_TablesRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(proc_TSQL_TablesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.proc_TSQL_TablesRowChangedEvent) Is Nothing) Then
                RaiseEvent proc_TSQL_TablesRowChanged(Me, New proc_TSQL_TablesRowChangeEvent(CType(e.Row,proc_TSQL_TablesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.proc_TSQL_TablesRowChangingEvent) Is Nothing) Then
                RaiseEvent proc_TSQL_TablesRowChanging(Me, New proc_TSQL_TablesRowChangeEvent(CType(e.Row,proc_TSQL_TablesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.proc_TSQL_TablesRowDeletedEvent) Is Nothing) Then
                RaiseEvent proc_TSQL_TablesRowDeleted(Me, New proc_TSQL_TablesRowChangeEvent(CType(e.Row,proc_TSQL_TablesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.proc_TSQL_TablesRowDeletingEvent) Is Nothing) Then
                RaiseEvent proc_TSQL_TablesRowDeleting(Me, New proc_TSQL_TablesRowChangeEvent(CType(e.Row,proc_TSQL_TablesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removeproc_TSQL_TablesRow(ByVal row As proc_TSQL_TablesRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ds_TemplateView = New ds_TemplateView()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "proc_TSQL_TablesDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class proc_TSQL_ObjectDefinitionDataTable
        Inherits Global.System.Data.TypedTableBase(Of proc_TSQL_ObjectDefinitionRow)
        
        Private columnObjectDefinition As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "proc_TSQL_ObjectDefinition"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ObjectDefinitionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnObjectDefinition
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As proc_TSQL_ObjectDefinitionRow
            Get
                Return CType(Me.Rows(index),proc_TSQL_ObjectDefinitionRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_TSQL_ObjectDefinitionRowChanging As proc_TSQL_ObjectDefinitionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_TSQL_ObjectDefinitionRowChanged As proc_TSQL_ObjectDefinitionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_TSQL_ObjectDefinitionRowDeleting As proc_TSQL_ObjectDefinitionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_TSQL_ObjectDefinitionRowDeleted As proc_TSQL_ObjectDefinitionRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addproc_TSQL_ObjectDefinitionRow(ByVal row As proc_TSQL_ObjectDefinitionRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addproc_TSQL_ObjectDefinitionRow(ByVal ObjectDefinition As String) As proc_TSQL_ObjectDefinitionRow
            Dim rowproc_TSQL_ObjectDefinitionRow As proc_TSQL_ObjectDefinitionRow = CType(Me.NewRow,proc_TSQL_ObjectDefinitionRow)
            Dim columnValuesArray() As Object = New Object() {ObjectDefinition}
            rowproc_TSQL_ObjectDefinitionRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowproc_TSQL_ObjectDefinitionRow)
            Return rowproc_TSQL_ObjectDefinitionRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As proc_TSQL_ObjectDefinitionDataTable = CType(MyBase.Clone,proc_TSQL_ObjectDefinitionDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New proc_TSQL_ObjectDefinitionDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnObjectDefinition = MyBase.Columns("ObjectDefinition")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnObjectDefinition = New Global.System.Data.DataColumn("ObjectDefinition", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnObjectDefinition)
            Me.columnObjectDefinition.ReadOnly = true
            Me.columnObjectDefinition.MaxLength = 2147483647
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newproc_TSQL_ObjectDefinitionRow() As proc_TSQL_ObjectDefinitionRow
            Return CType(Me.NewRow,proc_TSQL_ObjectDefinitionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New proc_TSQL_ObjectDefinitionRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(proc_TSQL_ObjectDefinitionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.proc_TSQL_ObjectDefinitionRowChangedEvent) Is Nothing) Then
                RaiseEvent proc_TSQL_ObjectDefinitionRowChanged(Me, New proc_TSQL_ObjectDefinitionRowChangeEvent(CType(e.Row,proc_TSQL_ObjectDefinitionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.proc_TSQL_ObjectDefinitionRowChangingEvent) Is Nothing) Then
                RaiseEvent proc_TSQL_ObjectDefinitionRowChanging(Me, New proc_TSQL_ObjectDefinitionRowChangeEvent(CType(e.Row,proc_TSQL_ObjectDefinitionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.proc_TSQL_ObjectDefinitionRowDeletedEvent) Is Nothing) Then
                RaiseEvent proc_TSQL_ObjectDefinitionRowDeleted(Me, New proc_TSQL_ObjectDefinitionRowChangeEvent(CType(e.Row,proc_TSQL_ObjectDefinitionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.proc_TSQL_ObjectDefinitionRowDeletingEvent) Is Nothing) Then
                RaiseEvent proc_TSQL_ObjectDefinitionRowDeleting(Me, New proc_TSQL_ObjectDefinitionRowChangeEvent(CType(e.Row,proc_TSQL_ObjectDefinitionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removeproc_TSQL_ObjectDefinitionRow(ByVal row As proc_TSQL_ObjectDefinitionRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ds_TemplateView = New ds_TemplateView()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "proc_TSQL_ObjectDefinitionDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dtblTablesDataTable
        Inherits Global.System.Data.TypedTableBase(Of dtblTablesRow)
        
        Private columnimport As Global.System.Data.DataColumn
        
        Private columnTable As Global.System.Data.DataColumn
        
        Private columnGUID_TableSem As Global.System.Data.DataColumn
        
        Private columnName_TableSem As Global.System.Data.DataColumn
        
        Private columnCreationDate As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dtblTables"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property importColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimport
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTable
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_TableSemColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_TableSem
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_TableSemColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_TableSem
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CreationDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCreationDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dtblTablesRow
            Get
                Return CType(Me.Rows(index),dtblTablesRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event dtblTablesRowChanging As dtblTablesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event dtblTablesRowChanged As dtblTablesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event dtblTablesRowDeleting As dtblTablesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event dtblTablesRowDeleted As dtblTablesRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AdddtblTablesRow(ByVal row As dtblTablesRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AdddtblTablesRow(ByVal import As Boolean, ByVal _Table As String, ByVal GUID_TableSem As System.Guid, ByVal Name_TableSem As String, ByVal CreationDate As Date) As dtblTablesRow
            Dim rowdtblTablesRow As dtblTablesRow = CType(Me.NewRow,dtblTablesRow)
            Dim columnValuesArray() As Object = New Object() {import, _Table, GUID_TableSem, Name_TableSem, CreationDate}
            rowdtblTablesRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdtblTablesRow)
            Return rowdtblTablesRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dtblTablesDataTable = CType(MyBase.Clone,dtblTablesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dtblTablesDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnimport = MyBase.Columns("import")
            Me.columnTable = MyBase.Columns("Table")
            Me.columnGUID_TableSem = MyBase.Columns("GUID_TableSem")
            Me.columnName_TableSem = MyBase.Columns("Name_TableSem")
            Me.columnCreationDate = MyBase.Columns("CreationDate")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnimport = New Global.System.Data.DataColumn("import", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimport)
            Me.columnTable = New Global.System.Data.DataColumn("Table", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columnTable.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "TableColumn")
            Me.columnTable.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnTable")
            Me.columnTable.ExtendedProperties.Add("Generator_UserColumnName", "Table")
            MyBase.Columns.Add(Me.columnTable)
            Me.columnGUID_TableSem = New Global.System.Data.DataColumn("GUID_TableSem", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_TableSem)
            Me.columnName_TableSem = New Global.System.Data.DataColumn("Name_TableSem", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_TableSem)
            Me.columnCreationDate = New Global.System.Data.DataColumn("CreationDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCreationDate)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewdtblTablesRow() As dtblTablesRow
            Return CType(Me.NewRow,dtblTablesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dtblTablesRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dtblTablesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dtblTablesRowChangedEvent) Is Nothing) Then
                RaiseEvent dtblTablesRowChanged(Me, New dtblTablesRowChangeEvent(CType(e.Row,dtblTablesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dtblTablesRowChangingEvent) Is Nothing) Then
                RaiseEvent dtblTablesRowChanging(Me, New dtblTablesRowChangeEvent(CType(e.Row,dtblTablesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dtblTablesRowDeletedEvent) Is Nothing) Then
                RaiseEvent dtblTablesRowDeleted(Me, New dtblTablesRowChangeEvent(CType(e.Row,dtblTablesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dtblTablesRowDeletingEvent) Is Nothing) Then
                RaiseEvent dtblTablesRowDeleting(Me, New dtblTablesRowChangeEvent(CType(e.Row,dtblTablesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovedtblTablesRow(ByVal row As dtblTablesRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ds_TemplateView = New ds_TemplateView()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dtblTablesDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dtblProceduresDataTable
        Inherits Global.System.Data.TypedTableBase(Of dtblProceduresRow)
        
        Private columnImport As Global.System.Data.DataColumn
        
        Private columnProcedure As Global.System.Data.DataColumn
        
        Private columnScript As Global.System.Data.DataColumn
        
        Private columnParameters As Global.System.Data.DataColumn
        
        Private columnGUID_Procedure As Global.System.Data.DataColumn
        
        Private columnName_Procedure As Global.System.Data.DataColumn
        
        Private columnCreationDate As Global.System.Data.DataColumn
        
        Private columnAlterDate As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dtblProcedures"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ImportColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImport
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProcedureColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProcedure
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ScriptColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnScript
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ParametersColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnParameters
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_ProcedureColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Procedure
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_ProcedureColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Procedure
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CreationDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCreationDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AlterDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAlterDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dtblProceduresRow
            Get
                Return CType(Me.Rows(index),dtblProceduresRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event dtblProceduresRowChanging As dtblProceduresRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event dtblProceduresRowChanged As dtblProceduresRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event dtblProceduresRowDeleting As dtblProceduresRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event dtblProceduresRowDeleted As dtblProceduresRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AdddtblProceduresRow(ByVal row As dtblProceduresRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AdddtblProceduresRow(ByVal Import As Boolean, ByVal Procedure As String, ByVal Script As String, ByVal Parameters As String, ByVal GUID_Procedure As System.Guid, ByVal Name_Procedure As String, ByVal CreationDate As Date, ByVal AlterDate As Date) As dtblProceduresRow
            Dim rowdtblProceduresRow As dtblProceduresRow = CType(Me.NewRow,dtblProceduresRow)
            Dim columnValuesArray() As Object = New Object() {Import, Procedure, Script, Parameters, GUID_Procedure, Name_Procedure, CreationDate, AlterDate}
            rowdtblProceduresRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdtblProceduresRow)
            Return rowdtblProceduresRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dtblProceduresDataTable = CType(MyBase.Clone,dtblProceduresDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dtblProceduresDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnImport = MyBase.Columns("Import")
            Me.columnProcedure = MyBase.Columns("Procedure")
            Me.columnScript = MyBase.Columns("Script")
            Me.columnParameters = MyBase.Columns("Parameters")
            Me.columnGUID_Procedure = MyBase.Columns("GUID_Procedure")
            Me.columnName_Procedure = MyBase.Columns("Name_Procedure")
            Me.columnCreationDate = MyBase.Columns("CreationDate")
            Me.columnAlterDate = MyBase.Columns("AlterDate")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnImport = New Global.System.Data.DataColumn("Import", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImport)
            Me.columnProcedure = New Global.System.Data.DataColumn("Procedure", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProcedure)
            Me.columnScript = New Global.System.Data.DataColumn("Script", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScript)
            Me.columnParameters = New Global.System.Data.DataColumn("Parameters", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnParameters)
            Me.columnGUID_Procedure = New Global.System.Data.DataColumn("GUID_Procedure", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Procedure)
            Me.columnName_Procedure = New Global.System.Data.DataColumn("Name_Procedure", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Procedure)
            Me.columnCreationDate = New Global.System.Data.DataColumn("CreationDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCreationDate)
            Me.columnAlterDate = New Global.System.Data.DataColumn("AlterDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAlterDate)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewdtblProceduresRow() As dtblProceduresRow
            Return CType(Me.NewRow,dtblProceduresRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dtblProceduresRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dtblProceduresRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dtblProceduresRowChangedEvent) Is Nothing) Then
                RaiseEvent dtblProceduresRowChanged(Me, New dtblProceduresRowChangeEvent(CType(e.Row,dtblProceduresRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dtblProceduresRowChangingEvent) Is Nothing) Then
                RaiseEvent dtblProceduresRowChanging(Me, New dtblProceduresRowChangeEvent(CType(e.Row,dtblProceduresRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dtblProceduresRowDeletedEvent) Is Nothing) Then
                RaiseEvent dtblProceduresRowDeleted(Me, New dtblProceduresRowChangeEvent(CType(e.Row,dtblProceduresRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dtblProceduresRowDeletingEvent) Is Nothing) Then
                RaiseEvent dtblProceduresRowDeleting(Me, New dtblProceduresRowChangeEvent(CType(e.Row,dtblProceduresRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovedtblProceduresRow(ByVal row As dtblProceduresRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ds_TemplateView = New ds_TemplateView()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dtblProceduresDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dtblFunctionsDataTable
        Inherits Global.System.Data.TypedTableBase(Of dtblFunctionsRow)
        
        Private columnImport As Global.System.Data.DataColumn
        
        Private columnFunction As Global.System.Data.DataColumn
        
        Private columnScript As Global.System.Data.DataColumn
        
        Private columnParameters As Global.System.Data.DataColumn
        
        Private columnGUID_Function As Global.System.Data.DataColumn
        
        Private columnName_Function As Global.System.Data.DataColumn
        
        Private columnCreationDate As Global.System.Data.DataColumn
        
        Private columnAlterDate As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dtblFunctions"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ImportColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImport
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FunctionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFunction
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ScriptColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnScript
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ParametersColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnParameters
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_FunctionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Function
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_FunctionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Function
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CreationDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCreationDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AlterDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAlterDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dtblFunctionsRow
            Get
                Return CType(Me.Rows(index),dtblFunctionsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event dtblFunctionsRowChanging As dtblFunctionsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event dtblFunctionsRowChanged As dtblFunctionsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event dtblFunctionsRowDeleting As dtblFunctionsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event dtblFunctionsRowDeleted As dtblFunctionsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AdddtblFunctionsRow(ByVal row As dtblFunctionsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AdddtblFunctionsRow(ByVal Import As Boolean, ByVal _Function As String, ByVal Script As String, ByVal Parameters As String, ByVal GUID_Function As System.Guid, ByVal Name_Function As String, ByVal CreationDate As Date, ByVal AlterDate As Date) As dtblFunctionsRow
            Dim rowdtblFunctionsRow As dtblFunctionsRow = CType(Me.NewRow,dtblFunctionsRow)
            Dim columnValuesArray() As Object = New Object() {Import, _Function, Script, Parameters, GUID_Function, Name_Function, CreationDate, AlterDate}
            rowdtblFunctionsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdtblFunctionsRow)
            Return rowdtblFunctionsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dtblFunctionsDataTable = CType(MyBase.Clone,dtblFunctionsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dtblFunctionsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnImport = MyBase.Columns("Import")
            Me.columnFunction = MyBase.Columns("Function")
            Me.columnScript = MyBase.Columns("Script")
            Me.columnParameters = MyBase.Columns("Parameters")
            Me.columnGUID_Function = MyBase.Columns("GUID_Function")
            Me.columnName_Function = MyBase.Columns("Name_Function")
            Me.columnCreationDate = MyBase.Columns("CreationDate")
            Me.columnAlterDate = MyBase.Columns("AlterDate")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnImport = New Global.System.Data.DataColumn("Import", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImport)
            Me.columnFunction = New Global.System.Data.DataColumn("Function", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columnFunction.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "FunctionColumn")
            Me.columnFunction.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnFunction")
            Me.columnFunction.ExtendedProperties.Add("Generator_UserColumnName", "Function")
            MyBase.Columns.Add(Me.columnFunction)
            Me.columnScript = New Global.System.Data.DataColumn("Script", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScript)
            Me.columnParameters = New Global.System.Data.DataColumn("Parameters", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnParameters)
            Me.columnGUID_Function = New Global.System.Data.DataColumn("GUID_Function", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Function)
            Me.columnName_Function = New Global.System.Data.DataColumn("Name_Function", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Function)
            Me.columnCreationDate = New Global.System.Data.DataColumn("CreationDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCreationDate)
            Me.columnAlterDate = New Global.System.Data.DataColumn("AlterDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAlterDate)
            Me.columnFunction.Caption = "Procedure"
            Me.columnGUID_Function.Caption = "GUID_Procedure"
            Me.columnName_Function.Caption = "Name_Procedure"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewdtblFunctionsRow() As dtblFunctionsRow
            Return CType(Me.NewRow,dtblFunctionsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dtblFunctionsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dtblFunctionsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dtblFunctionsRowChangedEvent) Is Nothing) Then
                RaiseEvent dtblFunctionsRowChanged(Me, New dtblFunctionsRowChangeEvent(CType(e.Row,dtblFunctionsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dtblFunctionsRowChangingEvent) Is Nothing) Then
                RaiseEvent dtblFunctionsRowChanging(Me, New dtblFunctionsRowChangeEvent(CType(e.Row,dtblFunctionsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dtblFunctionsRowDeletedEvent) Is Nothing) Then
                RaiseEvent dtblFunctionsRowDeleted(Me, New dtblFunctionsRowChangeEvent(CType(e.Row,dtblFunctionsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dtblFunctionsRowDeletingEvent) Is Nothing) Then
                RaiseEvent dtblFunctionsRowDeleting(Me, New dtblFunctionsRowChangeEvent(CType(e.Row,dtblFunctionsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovedtblFunctionsRow(ByVal row As dtblFunctionsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ds_TemplateView = New ds_TemplateView()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dtblFunctionsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dtblSynonymsDataTable
        Inherits Global.System.Data.TypedTableBase(Of dtblSynonymsRow)
        
        Private columnImport As Global.System.Data.DataColumn
        
        Private columnSynonym As Global.System.Data.DataColumn
        
        Private columnGUID_Synonym As Global.System.Data.DataColumn
        
        Private columnName_Synonym As Global.System.Data.DataColumn
        
        Private columnCreationDate As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dtblSynonyms"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ImportColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImport
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SynonymColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSynonym
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_SynonymColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Synonym
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_SynonymColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Synonym
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CreationDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCreationDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dtblSynonymsRow
            Get
                Return CType(Me.Rows(index),dtblSynonymsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event dtblSynonymsRowChanging As dtblSynonymsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event dtblSynonymsRowChanged As dtblSynonymsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event dtblSynonymsRowDeleting As dtblSynonymsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event dtblSynonymsRowDeleted As dtblSynonymsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AdddtblSynonymsRow(ByVal row As dtblSynonymsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AdddtblSynonymsRow(ByVal Import As Boolean, ByVal Synonym As String, ByVal GUID_Synonym As System.Guid, ByVal Name_Synonym As String, ByVal CreationDate As Date) As dtblSynonymsRow
            Dim rowdtblSynonymsRow As dtblSynonymsRow = CType(Me.NewRow,dtblSynonymsRow)
            Dim columnValuesArray() As Object = New Object() {Import, Synonym, GUID_Synonym, Name_Synonym, CreationDate}
            rowdtblSynonymsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdtblSynonymsRow)
            Return rowdtblSynonymsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dtblSynonymsDataTable = CType(MyBase.Clone,dtblSynonymsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dtblSynonymsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnImport = MyBase.Columns("Import")
            Me.columnSynonym = MyBase.Columns("Synonym")
            Me.columnGUID_Synonym = MyBase.Columns("GUID_Synonym")
            Me.columnName_Synonym = MyBase.Columns("Name_Synonym")
            Me.columnCreationDate = MyBase.Columns("CreationDate")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnImport = New Global.System.Data.DataColumn("Import", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImport)
            Me.columnSynonym = New Global.System.Data.DataColumn("Synonym", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSynonym)
            Me.columnGUID_Synonym = New Global.System.Data.DataColumn("GUID_Synonym", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Synonym)
            Me.columnName_Synonym = New Global.System.Data.DataColumn("Name_Synonym", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Synonym)
            Me.columnCreationDate = New Global.System.Data.DataColumn("CreationDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCreationDate)
            Me.columnSynonym.Caption = "Procedure"
            Me.columnGUID_Synonym.Caption = "GUID_Procedure"
            Me.columnName_Synonym.Caption = "Name_Procedure"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewdtblSynonymsRow() As dtblSynonymsRow
            Return CType(Me.NewRow,dtblSynonymsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dtblSynonymsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dtblSynonymsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dtblSynonymsRowChangedEvent) Is Nothing) Then
                RaiseEvent dtblSynonymsRowChanged(Me, New dtblSynonymsRowChangeEvent(CType(e.Row,dtblSynonymsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dtblSynonymsRowChangingEvent) Is Nothing) Then
                RaiseEvent dtblSynonymsRowChanging(Me, New dtblSynonymsRowChangeEvent(CType(e.Row,dtblSynonymsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dtblSynonymsRowDeletedEvent) Is Nothing) Then
                RaiseEvent dtblSynonymsRowDeleted(Me, New dtblSynonymsRowChangeEvent(CType(e.Row,dtblSynonymsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dtblSynonymsRowDeletingEvent) Is Nothing) Then
                RaiseEvent dtblSynonymsRowDeleting(Me, New dtblSynonymsRowChangeEvent(CType(e.Row,dtblSynonymsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovedtblSynonymsRow(ByVal row As dtblSynonymsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ds_TemplateView = New ds_TemplateView()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dtblSynonymsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dtblTriggersDataTable
        Inherits Global.System.Data.TypedTableBase(Of dtblTriggersRow)
        
        Private columnImport As Global.System.Data.DataColumn
        
        Private columnTrigger As Global.System.Data.DataColumn
        
        Private columnScript As Global.System.Data.DataColumn
        
        Private columnGUID_Trigger As Global.System.Data.DataColumn
        
        Private columnName_Trigger As Global.System.Data.DataColumn
        
        Private columnCreationDate As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dtblTriggers"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ImportColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImport
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TriggerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTrigger
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ScriptColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnScript
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_TriggerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Trigger
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_TriggerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Trigger
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CreationDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCreationDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dtblTriggersRow
            Get
                Return CType(Me.Rows(index),dtblTriggersRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event dtblTriggersRowChanging As dtblTriggersRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event dtblTriggersRowChanged As dtblTriggersRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event dtblTriggersRowDeleting As dtblTriggersRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event dtblTriggersRowDeleted As dtblTriggersRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AdddtblTriggersRow(ByVal row As dtblTriggersRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AdddtblTriggersRow(ByVal Import As Boolean, ByVal Trigger As String, ByVal Script As String, ByVal GUID_Trigger As System.Guid, ByVal Name_Trigger As String, ByVal CreationDate As Date) As dtblTriggersRow
            Dim rowdtblTriggersRow As dtblTriggersRow = CType(Me.NewRow,dtblTriggersRow)
            Dim columnValuesArray() As Object = New Object() {Import, Trigger, Script, GUID_Trigger, Name_Trigger, CreationDate}
            rowdtblTriggersRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdtblTriggersRow)
            Return rowdtblTriggersRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dtblTriggersDataTable = CType(MyBase.Clone,dtblTriggersDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dtblTriggersDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnImport = MyBase.Columns("Import")
            Me.columnTrigger = MyBase.Columns("Trigger")
            Me.columnScript = MyBase.Columns("Script")
            Me.columnGUID_Trigger = MyBase.Columns("GUID_Trigger")
            Me.columnName_Trigger = MyBase.Columns("Name_Trigger")
            Me.columnCreationDate = MyBase.Columns("CreationDate")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnImport = New Global.System.Data.DataColumn("Import", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImport)
            Me.columnTrigger = New Global.System.Data.DataColumn("Trigger", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTrigger)
            Me.columnScript = New Global.System.Data.DataColumn("Script", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScript)
            Me.columnGUID_Trigger = New Global.System.Data.DataColumn("GUID_Trigger", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Trigger)
            Me.columnName_Trigger = New Global.System.Data.DataColumn("Name_Trigger", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Trigger)
            Me.columnCreationDate = New Global.System.Data.DataColumn("CreationDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCreationDate)
            Me.columnTrigger.Caption = "Procedure"
            Me.columnGUID_Trigger.Caption = "GUID_Procedure"
            Me.columnName_Trigger.Caption = "Name_Procedure"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewdtblTriggersRow() As dtblTriggersRow
            Return CType(Me.NewRow,dtblTriggersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dtblTriggersRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dtblTriggersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dtblTriggersRowChangedEvent) Is Nothing) Then
                RaiseEvent dtblTriggersRowChanged(Me, New dtblTriggersRowChangeEvent(CType(e.Row,dtblTriggersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dtblTriggersRowChangingEvent) Is Nothing) Then
                RaiseEvent dtblTriggersRowChanging(Me, New dtblTriggersRowChangeEvent(CType(e.Row,dtblTriggersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dtblTriggersRowDeletedEvent) Is Nothing) Then
                RaiseEvent dtblTriggersRowDeleted(Me, New dtblTriggersRowChangeEvent(CType(e.Row,dtblTriggersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dtblTriggersRowDeletingEvent) Is Nothing) Then
                RaiseEvent dtblTriggersRowDeleting(Me, New dtblTriggersRowChangeEvent(CType(e.Row,dtblTriggersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovedtblTriggersRow(ByVal row As dtblTriggersRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ds_TemplateView = New ds_TemplateView()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dtblTriggersDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dtblViewsDataTable
        Inherits Global.System.Data.TypedTableBase(Of dtblViewsRow)
        
        Private columnImport As Global.System.Data.DataColumn
        
        Private columnView As Global.System.Data.DataColumn
        
        Private columnScript As Global.System.Data.DataColumn
        
        Private columnGUID_View As Global.System.Data.DataColumn
        
        Private columnName_View As Global.System.Data.DataColumn
        
        Private columnCreationDate As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dtblViews"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ImportColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImport
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ViewColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnView
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ScriptColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnScript
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_ViewColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_View
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_ViewColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_View
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CreationDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCreationDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dtblViewsRow
            Get
                Return CType(Me.Rows(index),dtblViewsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event dtblViewsRowChanging As dtblViewsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event dtblViewsRowChanged As dtblViewsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event dtblViewsRowDeleting As dtblViewsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event dtblViewsRowDeleted As dtblViewsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AdddtblViewsRow(ByVal row As dtblViewsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AdddtblViewsRow(ByVal Import As Boolean, ByVal View As String, ByVal Script As String, ByVal GUID_View As System.Guid, ByVal Name_View As String, ByVal CreationDate As Date) As dtblViewsRow
            Dim rowdtblViewsRow As dtblViewsRow = CType(Me.NewRow,dtblViewsRow)
            Dim columnValuesArray() As Object = New Object() {Import, View, Script, GUID_View, Name_View, CreationDate}
            rowdtblViewsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdtblViewsRow)
            Return rowdtblViewsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dtblViewsDataTable = CType(MyBase.Clone,dtblViewsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dtblViewsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnImport = MyBase.Columns("Import")
            Me.columnView = MyBase.Columns("View")
            Me.columnScript = MyBase.Columns("Script")
            Me.columnGUID_View = MyBase.Columns("GUID_View")
            Me.columnName_View = MyBase.Columns("Name_View")
            Me.columnCreationDate = MyBase.Columns("CreationDate")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnImport = New Global.System.Data.DataColumn("Import", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImport)
            Me.columnView = New Global.System.Data.DataColumn("View", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnView)
            Me.columnScript = New Global.System.Data.DataColumn("Script", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScript)
            Me.columnGUID_View = New Global.System.Data.DataColumn("GUID_View", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_View)
            Me.columnName_View = New Global.System.Data.DataColumn("Name_View", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_View)
            Me.columnCreationDate = New Global.System.Data.DataColumn("CreationDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCreationDate)
            Me.columnView.Caption = "Procedure"
            Me.columnGUID_View.Caption = "GUID_Procedure"
            Me.columnName_View.Caption = "Name_Procedure"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewdtblViewsRow() As dtblViewsRow
            Return CType(Me.NewRow,dtblViewsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dtblViewsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dtblViewsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dtblViewsRowChangedEvent) Is Nothing) Then
                RaiseEvent dtblViewsRowChanged(Me, New dtblViewsRowChangeEvent(CType(e.Row,dtblViewsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dtblViewsRowChangingEvent) Is Nothing) Then
                RaiseEvent dtblViewsRowChanging(Me, New dtblViewsRowChangeEvent(CType(e.Row,dtblViewsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dtblViewsRowDeletedEvent) Is Nothing) Then
                RaiseEvent dtblViewsRowDeleted(Me, New dtblViewsRowChangeEvent(CType(e.Row,dtblViewsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dtblViewsRowDeletingEvent) Is Nothing) Then
                RaiseEvent dtblViewsRowDeleting(Me, New dtblViewsRowChangeEvent(CType(e.Row,dtblViewsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovedtblViewsRow(ByVal row As dtblViewsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ds_TemplateView = New ds_TemplateView()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dtblViewsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class proc_TSQL_FunctionsRow
        Inherits Global.System.Data.DataRow
        
        Private tableproc_TSQL_Functions As proc_TSQL_FunctionsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableproc_TSQL_Functions = CType(Me.Table,proc_TSQL_FunctionsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPECIFIC_CATALOG() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.SPECIFIC_CATALOGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte SPECIFIC_CATALOG in Tabelle proc_TSQL_Functions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.SPECIFIC_CATALOGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPECIFIC_SCHEMA() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.SPECIFIC_SCHEMAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte SPECIFIC_SCHEMA in Tabelle proc_TSQL_Functions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.SPECIFIC_SCHEMAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPECIFIC_NAME() As String
            Get
                Return CType(Me(Me.tableproc_TSQL_Functions.SPECIFIC_NAMEColumn),String)
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.SPECIFIC_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ROUTINE_CATALOG() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.ROUTINE_CATALOGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte ROUTINE_CATALOG in Tabelle proc_TSQL_Functions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.ROUTINE_CATALOGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ROUTINE_SCHEMA() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.ROUTINE_SCHEMAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte ROUTINE_SCHEMA in Tabelle proc_TSQL_Functions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.ROUTINE_SCHEMAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ROUTINE_NAME() As String
            Get
                Return CType(Me(Me.tableproc_TSQL_Functions.ROUTINE_NAMEColumn),String)
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.ROUTINE_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ROUTINE_TYPE() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.ROUTINE_TYPEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte ROUTINE_TYPE in Tabelle proc_TSQL_Functions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.ROUTINE_TYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODULE_CATALOG() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.MODULE_CATALOGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte MODULE_CATALOG in Tabelle proc_TSQL_Functions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.MODULE_CATALOGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODULE_SCHEMA() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.MODULE_SCHEMAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte MODULE_SCHEMA in Tabelle proc_TSQL_Functions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.MODULE_SCHEMAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODULE_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.MODULE_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte MODULE_NAME in Tabelle proc_TSQL_Functions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.MODULE_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UDT_CATALOG() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.UDT_CATALOGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte UDT_CATALOG in Tabelle proc_TSQL_Functions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.UDT_CATALOGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UDT_SCHEMA() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.UDT_SCHEMAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte UDT_SCHEMA in Tabelle proc_TSQL_Functions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.UDT_SCHEMAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UDT_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.UDT_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte UDT_NAME in Tabelle proc_TSQL_Functions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.UDT_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DATA_TYPE() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.DATA_TYPEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte DATA_TYPE in Tabelle proc_TSQL_Functions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.DATA_TYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CHARACTER_MAXIMUM_LENGTH() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.CHARACTER_MAXIMUM_LENGTHColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte CHARACTER_MAXIMUM_LENGTH in Tabelle proc_TSQL_Functions ist D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.CHARACTER_MAXIMUM_LENGTHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CHARACTER_OCTET_LENGTH() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.CHARACTER_OCTET_LENGTHColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte CHARACTER_OCTET_LENGTH in Tabelle proc_TSQL_Functions ist DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.CHARACTER_OCTET_LENGTHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COLLATION_CATALOG() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.COLLATION_CATALOGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte COLLATION_CATALOG in Tabelle proc_TSQL_Functions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.COLLATION_CATALOGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COLLATION_SCHEMA() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.COLLATION_SCHEMAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte COLLATION_SCHEMA in Tabelle proc_TSQL_Functions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.COLLATION_SCHEMAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COLLATION_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.COLLATION_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte COLLATION_NAME in Tabelle proc_TSQL_Functions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.COLLATION_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CHARACTER_SET_CATALOG() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.CHARACTER_SET_CATALOGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte CHARACTER_SET_CATALOG in Tabelle proc_TSQL_Functions ist DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.CHARACTER_SET_CATALOGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CHARACTER_SET_SCHEMA() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.CHARACTER_SET_SCHEMAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte CHARACTER_SET_SCHEMA in Tabelle proc_TSQL_Functions ist DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.CHARACTER_SET_SCHEMAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CHARACTER_SET_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.CHARACTER_SET_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte CHARACTER_SET_NAME in Tabelle proc_TSQL_Functions ist DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.CHARACTER_SET_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMERIC_PRECISION() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.NUMERIC_PRECISIONColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte NUMERIC_PRECISION in Tabelle proc_TSQL_Functions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.NUMERIC_PRECISIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMERIC_PRECISION_RADIX() As Short
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.NUMERIC_PRECISION_RADIXColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte NUMERIC_PRECISION_RADIX in Tabelle proc_TSQL_Functions ist DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.NUMERIC_PRECISION_RADIXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMERIC_SCALE() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.NUMERIC_SCALEColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte NUMERIC_SCALE in Tabelle proc_TSQL_Functions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.NUMERIC_SCALEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DATETIME_PRECISION() As Short
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.DATETIME_PRECISIONColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte DATETIME_PRECISION in Tabelle proc_TSQL_Functions ist DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.DATETIME_PRECISIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INTERVAL_TYPE() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.INTERVAL_TYPEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte INTERVAL_TYPE in Tabelle proc_TSQL_Functions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.INTERVAL_TYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INTERVAL_PRECISION() As Short
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.INTERVAL_PRECISIONColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte INTERVAL_PRECISION in Tabelle proc_TSQL_Functions ist DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.INTERVAL_PRECISIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TYPE_UDT_CATALOG() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.TYPE_UDT_CATALOGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte TYPE_UDT_CATALOG in Tabelle proc_TSQL_Functions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.TYPE_UDT_CATALOGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TYPE_UDT_SCHEMA() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.TYPE_UDT_SCHEMAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte TYPE_UDT_SCHEMA in Tabelle proc_TSQL_Functions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.TYPE_UDT_SCHEMAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TYPE_UDT_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.TYPE_UDT_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte TYPE_UDT_NAME in Tabelle proc_TSQL_Functions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.TYPE_UDT_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SCOPE_CATALOG() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.SCOPE_CATALOGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte SCOPE_CATALOG in Tabelle proc_TSQL_Functions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.SCOPE_CATALOGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SCOPE_SCHEMA() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.SCOPE_SCHEMAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte SCOPE_SCHEMA in Tabelle proc_TSQL_Functions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.SCOPE_SCHEMAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SCOPE_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.SCOPE_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte SCOPE_NAME in Tabelle proc_TSQL_Functions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.SCOPE_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MAXIMUM_CARDINALITY() As Long
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.MAXIMUM_CARDINALITYColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte MAXIMUM_CARDINALITY in Tabelle proc_TSQL_Functions ist DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.MAXIMUM_CARDINALITYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DTD_IDENTIFIER() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.DTD_IDENTIFIERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte DTD_IDENTIFIER in Tabelle proc_TSQL_Functions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.DTD_IDENTIFIERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ROUTINE_BODY() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.ROUTINE_BODYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte ROUTINE_BODY in Tabelle proc_TSQL_Functions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.ROUTINE_BODYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ROUTINE_DEFINITION() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.ROUTINE_DEFINITIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte ROUTINE_DEFINITION in Tabelle proc_TSQL_Functions ist DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.ROUTINE_DEFINITIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXTERNAL_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.EXTERNAL_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte EXTERNAL_NAME in Tabelle proc_TSQL_Functions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.EXTERNAL_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXTERNAL_LANGUAGE() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.EXTERNAL_LANGUAGEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte EXTERNAL_LANGUAGE in Tabelle proc_TSQL_Functions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.EXTERNAL_LANGUAGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PARAMETER_STYLE() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.PARAMETER_STYLEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte PARAMETER_STYLE in Tabelle proc_TSQL_Functions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.PARAMETER_STYLEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IS_DETERMINISTIC() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.IS_DETERMINISTICColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte IS_DETERMINISTIC in Tabelle proc_TSQL_Functions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.IS_DETERMINISTICColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SQL_DATA_ACCESS() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.SQL_DATA_ACCESSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte SQL_DATA_ACCESS in Tabelle proc_TSQL_Functions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.SQL_DATA_ACCESSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IS_NULL_CALL() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.IS_NULL_CALLColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte IS_NULL_CALL in Tabelle proc_TSQL_Functions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.IS_NULL_CALLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SQL_PATH() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.SQL_PATHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte SQL_PATH in Tabelle proc_TSQL_Functions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.SQL_PATHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SCHEMA_LEVEL_ROUTINE() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.SCHEMA_LEVEL_ROUTINEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte SCHEMA_LEVEL_ROUTINE in Tabelle proc_TSQL_Functions ist DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.SCHEMA_LEVEL_ROUTINEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MAX_DYNAMIC_RESULT_SETS() As Short
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.MAX_DYNAMIC_RESULT_SETSColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte MAX_DYNAMIC_RESULT_SETS in Tabelle proc_TSQL_Functions ist DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.MAX_DYNAMIC_RESULT_SETSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IS_USER_DEFINED_CAST() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.IS_USER_DEFINED_CASTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte IS_USER_DEFINED_CAST in Tabelle proc_TSQL_Functions ist DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.IS_USER_DEFINED_CASTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IS_IMPLICITLY_INVOCABLE() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Functions.IS_IMPLICITLY_INVOCABLEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte IS_IMPLICITLY_INVOCABLE in Tabelle proc_TSQL_Functions ist DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.IS_IMPLICITLY_INVOCABLEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATED() As Date
            Get
                Return CType(Me(Me.tableproc_TSQL_Functions.CREATEDColumn),Date)
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.CREATEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LAST_ALTERED() As Date
            Get
                Return CType(Me(Me.tableproc_TSQL_Functions.LAST_ALTEREDColumn),Date)
            End Get
            Set
                Me(Me.tableproc_TSQL_Functions.LAST_ALTEREDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSPECIFIC_CATALOGNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.SPECIFIC_CATALOGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSPECIFIC_CATALOGNull()
            Me(Me.tableproc_TSQL_Functions.SPECIFIC_CATALOGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSPECIFIC_SCHEMANull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.SPECIFIC_SCHEMAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSPECIFIC_SCHEMANull()
            Me(Me.tableproc_TSQL_Functions.SPECIFIC_SCHEMAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsROUTINE_CATALOGNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.ROUTINE_CATALOGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetROUTINE_CATALOGNull()
            Me(Me.tableproc_TSQL_Functions.ROUTINE_CATALOGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsROUTINE_SCHEMANull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.ROUTINE_SCHEMAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetROUTINE_SCHEMANull()
            Me(Me.tableproc_TSQL_Functions.ROUTINE_SCHEMAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsROUTINE_TYPENull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.ROUTINE_TYPEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetROUTINE_TYPENull()
            Me(Me.tableproc_TSQL_Functions.ROUTINE_TYPEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMODULE_CATALOGNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.MODULE_CATALOGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMODULE_CATALOGNull()
            Me(Me.tableproc_TSQL_Functions.MODULE_CATALOGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMODULE_SCHEMANull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.MODULE_SCHEMAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMODULE_SCHEMANull()
            Me(Me.tableproc_TSQL_Functions.MODULE_SCHEMAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMODULE_NAMENull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.MODULE_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMODULE_NAMENull()
            Me(Me.tableproc_TSQL_Functions.MODULE_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUDT_CATALOGNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.UDT_CATALOGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUDT_CATALOGNull()
            Me(Me.tableproc_TSQL_Functions.UDT_CATALOGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUDT_SCHEMANull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.UDT_SCHEMAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUDT_SCHEMANull()
            Me(Me.tableproc_TSQL_Functions.UDT_SCHEMAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUDT_NAMENull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.UDT_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUDT_NAMENull()
            Me(Me.tableproc_TSQL_Functions.UDT_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDATA_TYPENull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.DATA_TYPEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDATA_TYPENull()
            Me(Me.tableproc_TSQL_Functions.DATA_TYPEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCHARACTER_MAXIMUM_LENGTHNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.CHARACTER_MAXIMUM_LENGTHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCHARACTER_MAXIMUM_LENGTHNull()
            Me(Me.tableproc_TSQL_Functions.CHARACTER_MAXIMUM_LENGTHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCHARACTER_OCTET_LENGTHNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.CHARACTER_OCTET_LENGTHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCHARACTER_OCTET_LENGTHNull()
            Me(Me.tableproc_TSQL_Functions.CHARACTER_OCTET_LENGTHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOLLATION_CATALOGNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.COLLATION_CATALOGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOLLATION_CATALOGNull()
            Me(Me.tableproc_TSQL_Functions.COLLATION_CATALOGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOLLATION_SCHEMANull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.COLLATION_SCHEMAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOLLATION_SCHEMANull()
            Me(Me.tableproc_TSQL_Functions.COLLATION_SCHEMAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOLLATION_NAMENull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.COLLATION_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOLLATION_NAMENull()
            Me(Me.tableproc_TSQL_Functions.COLLATION_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCHARACTER_SET_CATALOGNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.CHARACTER_SET_CATALOGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCHARACTER_SET_CATALOGNull()
            Me(Me.tableproc_TSQL_Functions.CHARACTER_SET_CATALOGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCHARACTER_SET_SCHEMANull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.CHARACTER_SET_SCHEMAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCHARACTER_SET_SCHEMANull()
            Me(Me.tableproc_TSQL_Functions.CHARACTER_SET_SCHEMAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCHARACTER_SET_NAMENull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.CHARACTER_SET_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCHARACTER_SET_NAMENull()
            Me(Me.tableproc_TSQL_Functions.CHARACTER_SET_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMERIC_PRECISIONNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.NUMERIC_PRECISIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMERIC_PRECISIONNull()
            Me(Me.tableproc_TSQL_Functions.NUMERIC_PRECISIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMERIC_PRECISION_RADIXNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.NUMERIC_PRECISION_RADIXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMERIC_PRECISION_RADIXNull()
            Me(Me.tableproc_TSQL_Functions.NUMERIC_PRECISION_RADIXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMERIC_SCALENull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.NUMERIC_SCALEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMERIC_SCALENull()
            Me(Me.tableproc_TSQL_Functions.NUMERIC_SCALEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDATETIME_PRECISIONNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.DATETIME_PRECISIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDATETIME_PRECISIONNull()
            Me(Me.tableproc_TSQL_Functions.DATETIME_PRECISIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINTERVAL_TYPENull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.INTERVAL_TYPEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINTERVAL_TYPENull()
            Me(Me.tableproc_TSQL_Functions.INTERVAL_TYPEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINTERVAL_PRECISIONNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.INTERVAL_PRECISIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINTERVAL_PRECISIONNull()
            Me(Me.tableproc_TSQL_Functions.INTERVAL_PRECISIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTYPE_UDT_CATALOGNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.TYPE_UDT_CATALOGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTYPE_UDT_CATALOGNull()
            Me(Me.tableproc_TSQL_Functions.TYPE_UDT_CATALOGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTYPE_UDT_SCHEMANull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.TYPE_UDT_SCHEMAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTYPE_UDT_SCHEMANull()
            Me(Me.tableproc_TSQL_Functions.TYPE_UDT_SCHEMAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTYPE_UDT_NAMENull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.TYPE_UDT_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTYPE_UDT_NAMENull()
            Me(Me.tableproc_TSQL_Functions.TYPE_UDT_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSCOPE_CATALOGNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.SCOPE_CATALOGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSCOPE_CATALOGNull()
            Me(Me.tableproc_TSQL_Functions.SCOPE_CATALOGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSCOPE_SCHEMANull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.SCOPE_SCHEMAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSCOPE_SCHEMANull()
            Me(Me.tableproc_TSQL_Functions.SCOPE_SCHEMAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSCOPE_NAMENull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.SCOPE_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSCOPE_NAMENull()
            Me(Me.tableproc_TSQL_Functions.SCOPE_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMAXIMUM_CARDINALITYNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.MAXIMUM_CARDINALITYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMAXIMUM_CARDINALITYNull()
            Me(Me.tableproc_TSQL_Functions.MAXIMUM_CARDINALITYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDTD_IDENTIFIERNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.DTD_IDENTIFIERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDTD_IDENTIFIERNull()
            Me(Me.tableproc_TSQL_Functions.DTD_IDENTIFIERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsROUTINE_BODYNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.ROUTINE_BODYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetROUTINE_BODYNull()
            Me(Me.tableproc_TSQL_Functions.ROUTINE_BODYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsROUTINE_DEFINITIONNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.ROUTINE_DEFINITIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetROUTINE_DEFINITIONNull()
            Me(Me.tableproc_TSQL_Functions.ROUTINE_DEFINITIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXTERNAL_NAMENull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.EXTERNAL_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXTERNAL_NAMENull()
            Me(Me.tableproc_TSQL_Functions.EXTERNAL_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXTERNAL_LANGUAGENull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.EXTERNAL_LANGUAGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXTERNAL_LANGUAGENull()
            Me(Me.tableproc_TSQL_Functions.EXTERNAL_LANGUAGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPARAMETER_STYLENull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.PARAMETER_STYLEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPARAMETER_STYLENull()
            Me(Me.tableproc_TSQL_Functions.PARAMETER_STYLEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIS_DETERMINISTICNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.IS_DETERMINISTICColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIS_DETERMINISTICNull()
            Me(Me.tableproc_TSQL_Functions.IS_DETERMINISTICColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSQL_DATA_ACCESSNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.SQL_DATA_ACCESSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSQL_DATA_ACCESSNull()
            Me(Me.tableproc_TSQL_Functions.SQL_DATA_ACCESSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIS_NULL_CALLNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.IS_NULL_CALLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIS_NULL_CALLNull()
            Me(Me.tableproc_TSQL_Functions.IS_NULL_CALLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSQL_PATHNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.SQL_PATHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSQL_PATHNull()
            Me(Me.tableproc_TSQL_Functions.SQL_PATHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSCHEMA_LEVEL_ROUTINENull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.SCHEMA_LEVEL_ROUTINEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSCHEMA_LEVEL_ROUTINENull()
            Me(Me.tableproc_TSQL_Functions.SCHEMA_LEVEL_ROUTINEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMAX_DYNAMIC_RESULT_SETSNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.MAX_DYNAMIC_RESULT_SETSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMAX_DYNAMIC_RESULT_SETSNull()
            Me(Me.tableproc_TSQL_Functions.MAX_DYNAMIC_RESULT_SETSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIS_USER_DEFINED_CASTNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.IS_USER_DEFINED_CASTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIS_USER_DEFINED_CASTNull()
            Me(Me.tableproc_TSQL_Functions.IS_USER_DEFINED_CASTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIS_IMPLICITLY_INVOCABLENull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Functions.IS_IMPLICITLY_INVOCABLEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIS_IMPLICITLY_INVOCABLENull()
            Me(Me.tableproc_TSQL_Functions.IS_IMPLICITLY_INVOCABLEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class proc_TSQL_ProceduresRow
        Inherits Global.System.Data.DataRow
        
        Private tableproc_TSQL_Procedures As proc_TSQL_ProceduresDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableproc_TSQL_Procedures = CType(Me.Table,proc_TSQL_ProceduresDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property name() As String
            Get
                Return CType(Me(Me.tableproc_TSQL_Procedures.nameColumn),String)
            End Get
            Set
                Me(Me.tableproc_TSQL_Procedures.nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property object_id() As Integer
            Get
                Return CType(Me(Me.tableproc_TSQL_Procedures.object_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproc_TSQL_Procedures.object_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property principal_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Procedures.principal_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte principal_id in Tabelle proc_TSQL_Procedures ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Procedures.principal_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property schema_id() As Integer
            Get
                Return CType(Me(Me.tableproc_TSQL_Procedures.schema_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproc_TSQL_Procedures.schema_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property parent_object_id() As Integer
            Get
                Return CType(Me(Me.tableproc_TSQL_Procedures.parent_object_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproc_TSQL_Procedures.parent_object_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property type() As String
            Get
                Return CType(Me(Me.tableproc_TSQL_Procedures.typeColumn),String)
            End Get
            Set
                Me(Me.tableproc_TSQL_Procedures.typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property type_desc() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Procedures.type_descColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte type_desc in Tabelle proc_TSQL_Procedures ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Procedures.type_descColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property create_date() As Date
            Get
                Return CType(Me(Me.tableproc_TSQL_Procedures.create_dateColumn),Date)
            End Get
            Set
                Me(Me.tableproc_TSQL_Procedures.create_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property modify_date() As Date
            Get
                Return CType(Me(Me.tableproc_TSQL_Procedures.modify_dateColumn),Date)
            End Get
            Set
                Me(Me.tableproc_TSQL_Procedures.modify_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property is_ms_shipped() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Procedures.is_ms_shippedColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte is_ms_shipped in Tabelle proc_TSQL_Procedures ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Procedures.is_ms_shippedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property is_published() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Procedures.is_publishedColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte is_published in Tabelle proc_TSQL_Procedures ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Procedures.is_publishedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property is_schema_published() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Procedures.is_schema_publishedColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte is_schema_published in Tabelle proc_TSQL_Procedures ist DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Procedures.is_schema_publishedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property is_auto_executed() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Procedures.is_auto_executedColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte is_auto_executed in Tabelle proc_TSQL_Procedures ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Procedures.is_auto_executedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property is_execution_replicated() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Procedures.is_execution_replicatedColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte is_execution_replicated in Tabelle proc_TSQL_Procedures ist D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Procedures.is_execution_replicatedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property is_repl_serializable_only() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Procedures.is_repl_serializable_onlyColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte is_repl_serializable_only in Tabelle proc_TSQL_Procedures ist"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Procedures.is_repl_serializable_onlyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property skips_repl_constraints() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Procedures.skips_repl_constraintsColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte skips_repl_constraints in Tabelle proc_TSQL_Procedures ist DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Procedures.skips_repl_constraintsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isprincipal_idNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Procedures.principal_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setprincipal_idNull()
            Me(Me.tableproc_TSQL_Procedures.principal_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Istype_descNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Procedures.type_descColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Settype_descNull()
            Me(Me.tableproc_TSQL_Procedures.type_descColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isis_ms_shippedNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Procedures.is_ms_shippedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setis_ms_shippedNull()
            Me(Me.tableproc_TSQL_Procedures.is_ms_shippedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isis_publishedNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Procedures.is_publishedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setis_publishedNull()
            Me(Me.tableproc_TSQL_Procedures.is_publishedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isis_schema_publishedNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Procedures.is_schema_publishedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setis_schema_publishedNull()
            Me(Me.tableproc_TSQL_Procedures.is_schema_publishedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isis_auto_executedNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Procedures.is_auto_executedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setis_auto_executedNull()
            Me(Me.tableproc_TSQL_Procedures.is_auto_executedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isis_execution_replicatedNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Procedures.is_execution_replicatedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setis_execution_replicatedNull()
            Me(Me.tableproc_TSQL_Procedures.is_execution_replicatedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isis_repl_serializable_onlyNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Procedures.is_repl_serializable_onlyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setis_repl_serializable_onlyNull()
            Me(Me.tableproc_TSQL_Procedures.is_repl_serializable_onlyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isskips_repl_constraintsNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Procedures.skips_repl_constraintsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setskips_repl_constraintsNull()
            Me(Me.tableproc_TSQL_Procedures.skips_repl_constraintsColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class proc_TSQL_TriggersRow
        Inherits Global.System.Data.DataRow
        
        Private tableproc_TSQL_Triggers As proc_TSQL_TriggersDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableproc_TSQL_Triggers = CType(Me.Table,proc_TSQL_TriggersDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property name() As String
            Get
                Return CType(Me(Me.tableproc_TSQL_Triggers.nameColumn),String)
            End Get
            Set
                Me(Me.tableproc_TSQL_Triggers.nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property object_id() As Integer
            Get
                Return CType(Me(Me.tableproc_TSQL_Triggers.object_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproc_TSQL_Triggers.object_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property parent_class() As Byte
            Get
                Return CType(Me(Me.tableproc_TSQL_Triggers.parent_classColumn),Byte)
            End Get
            Set
                Me(Me.tableproc_TSQL_Triggers.parent_classColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property parent_class_desc() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Triggers.parent_class_descColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte parent_class_desc in Tabelle proc_TSQL_Triggers ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Triggers.parent_class_descColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property parent_id() As Integer
            Get
                Return CType(Me(Me.tableproc_TSQL_Triggers.parent_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproc_TSQL_Triggers.parent_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property type() As String
            Get
                Return CType(Me(Me.tableproc_TSQL_Triggers.typeColumn),String)
            End Get
            Set
                Me(Me.tableproc_TSQL_Triggers.typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property type_desc() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Triggers.type_descColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte type_desc in Tabelle proc_TSQL_Triggers ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Triggers.type_descColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property create_date() As Date
            Get
                Return CType(Me(Me.tableproc_TSQL_Triggers.create_dateColumn),Date)
            End Get
            Set
                Me(Me.tableproc_TSQL_Triggers.create_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property modify_date() As Date
            Get
                Return CType(Me(Me.tableproc_TSQL_Triggers.modify_dateColumn),Date)
            End Get
            Set
                Me(Me.tableproc_TSQL_Triggers.modify_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property is_ms_shipped() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Triggers.is_ms_shippedColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte is_ms_shipped in Tabelle proc_TSQL_Triggers ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Triggers.is_ms_shippedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property is_disabled() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Triggers.is_disabledColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte is_disabled in Tabelle proc_TSQL_Triggers ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Triggers.is_disabledColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property is_not_for_replication() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Triggers.is_not_for_replicationColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte is_not_for_replication in Tabelle proc_TSQL_Triggers ist DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Triggers.is_not_for_replicationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property is_instead_of_trigger() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Triggers.is_instead_of_triggerColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte is_instead_of_trigger in Tabelle proc_TSQL_Triggers ist DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Triggers.is_instead_of_triggerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isparent_class_descNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Triggers.parent_class_descColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setparent_class_descNull()
            Me(Me.tableproc_TSQL_Triggers.parent_class_descColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Istype_descNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Triggers.type_descColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Settype_descNull()
            Me(Me.tableproc_TSQL_Triggers.type_descColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isis_ms_shippedNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Triggers.is_ms_shippedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setis_ms_shippedNull()
            Me(Me.tableproc_TSQL_Triggers.is_ms_shippedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isis_disabledNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Triggers.is_disabledColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setis_disabledNull()
            Me(Me.tableproc_TSQL_Triggers.is_disabledColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isis_not_for_replicationNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Triggers.is_not_for_replicationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setis_not_for_replicationNull()
            Me(Me.tableproc_TSQL_Triggers.is_not_for_replicationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isis_instead_of_triggerNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Triggers.is_instead_of_triggerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setis_instead_of_triggerNull()
            Me(Me.tableproc_TSQL_Triggers.is_instead_of_triggerColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class proc_TSQL_ParametersRow
        Inherits Global.System.Data.DataRow
        
        Private tableproc_TSQL_Parameters As proc_TSQL_ParametersDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableproc_TSQL_Parameters = CType(Me.Table,proc_TSQL_ParametersDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPECIFIC_CATALOG() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Parameters.SPECIFIC_CATALOGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte SPECIFIC_CATALOG in Tabelle proc_TSQL_Parameters ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Parameters.SPECIFIC_CATALOGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPECIFIC_SCHEMA() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Parameters.SPECIFIC_SCHEMAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte SPECIFIC_SCHEMA in Tabelle proc_TSQL_Parameters ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Parameters.SPECIFIC_SCHEMAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPECIFIC_NAME() As String
            Get
                Return CType(Me(Me.tableproc_TSQL_Parameters.SPECIFIC_NAMEColumn),String)
            End Get
            Set
                Me(Me.tableproc_TSQL_Parameters.SPECIFIC_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ORDINAL_POSITION() As Integer
            Get
                Return CType(Me(Me.tableproc_TSQL_Parameters.ORDINAL_POSITIONColumn),Integer)
            End Get
            Set
                Me(Me.tableproc_TSQL_Parameters.ORDINAL_POSITIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PARAMETER_MODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Parameters.PARAMETER_MODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte PARAMETER_MODE in Tabelle proc_TSQL_Parameters ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Parameters.PARAMETER_MODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IS_RESULT() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Parameters.IS_RESULTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte IS_RESULT in Tabelle proc_TSQL_Parameters ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Parameters.IS_RESULTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AS_LOCATOR() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Parameters.AS_LOCATORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte AS_LOCATOR in Tabelle proc_TSQL_Parameters ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Parameters.AS_LOCATORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PARAMETER_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Parameters.PARAMETER_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte PARAMETER_NAME in Tabelle proc_TSQL_Parameters ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Parameters.PARAMETER_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DATA_TYPE() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Parameters.DATA_TYPEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte DATA_TYPE in Tabelle proc_TSQL_Parameters ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Parameters.DATA_TYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CHARACTER_MAXIMUM_LENGTH() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Parameters.CHARACTER_MAXIMUM_LENGTHColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte CHARACTER_MAXIMUM_LENGTH in Tabelle proc_TSQL_Parameters ist "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Parameters.CHARACTER_MAXIMUM_LENGTHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CHARACTER_OCTET_LENGTH() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Parameters.CHARACTER_OCTET_LENGTHColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte CHARACTER_OCTET_LENGTH in Tabelle proc_TSQL_Parameters ist DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Parameters.CHARACTER_OCTET_LENGTHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COLLATION_CATALOG() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Parameters.COLLATION_CATALOGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte COLLATION_CATALOG in Tabelle proc_TSQL_Parameters ist DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Parameters.COLLATION_CATALOGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COLLATION_SCHEMA() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Parameters.COLLATION_SCHEMAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte COLLATION_SCHEMA in Tabelle proc_TSQL_Parameters ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Parameters.COLLATION_SCHEMAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COLLATION_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Parameters.COLLATION_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte COLLATION_NAME in Tabelle proc_TSQL_Parameters ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Parameters.COLLATION_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CHARACTER_SET_CATALOG() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Parameters.CHARACTER_SET_CATALOGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte CHARACTER_SET_CATALOG in Tabelle proc_TSQL_Parameters ist DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Parameters.CHARACTER_SET_CATALOGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CHARACTER_SET_SCHEMA() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Parameters.CHARACTER_SET_SCHEMAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte CHARACTER_SET_SCHEMA in Tabelle proc_TSQL_Parameters ist DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Parameters.CHARACTER_SET_SCHEMAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CHARACTER_SET_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Parameters.CHARACTER_SET_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte CHARACTER_SET_NAME in Tabelle proc_TSQL_Parameters ist DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Parameters.CHARACTER_SET_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMERIC_PRECISION() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Parameters.NUMERIC_PRECISIONColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte NUMERIC_PRECISION in Tabelle proc_TSQL_Parameters ist DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Parameters.NUMERIC_PRECISIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMERIC_PRECISION_RADIX() As Short
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Parameters.NUMERIC_PRECISION_RADIXColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte NUMERIC_PRECISION_RADIX in Tabelle proc_TSQL_Parameters ist D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Parameters.NUMERIC_PRECISION_RADIXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMERIC_SCALE() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Parameters.NUMERIC_SCALEColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte NUMERIC_SCALE in Tabelle proc_TSQL_Parameters ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Parameters.NUMERIC_SCALEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DATETIME_PRECISION() As Short
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Parameters.DATETIME_PRECISIONColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte DATETIME_PRECISION in Tabelle proc_TSQL_Parameters ist DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Parameters.DATETIME_PRECISIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INTERVAL_TYPE() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Parameters.INTERVAL_TYPEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte INTERVAL_TYPE in Tabelle proc_TSQL_Parameters ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Parameters.INTERVAL_TYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INTERVAL_PRECISION() As Short
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Parameters.INTERVAL_PRECISIONColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte INTERVAL_PRECISION in Tabelle proc_TSQL_Parameters ist DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Parameters.INTERVAL_PRECISIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property USER_DEFINED_TYPE_CATALOG() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Parameters.USER_DEFINED_TYPE_CATALOGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte USER_DEFINED_TYPE_CATALOG in Tabelle proc_TSQL_Parameters ist"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Parameters.USER_DEFINED_TYPE_CATALOGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property USER_DEFINED_TYPE_SCHEMA() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Parameters.USER_DEFINED_TYPE_SCHEMAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte USER_DEFINED_TYPE_SCHEMA in Tabelle proc_TSQL_Parameters ist "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Parameters.USER_DEFINED_TYPE_SCHEMAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property USER_DEFINED_TYPE_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Parameters.USER_DEFINED_TYPE_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte USER_DEFINED_TYPE_NAME in Tabelle proc_TSQL_Parameters ist DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Parameters.USER_DEFINED_TYPE_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SCOPE_CATALOG() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Parameters.SCOPE_CATALOGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte SCOPE_CATALOG in Tabelle proc_TSQL_Parameters ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Parameters.SCOPE_CATALOGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SCOPE_SCHEMA() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Parameters.SCOPE_SCHEMAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte SCOPE_SCHEMA in Tabelle proc_TSQL_Parameters ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Parameters.SCOPE_SCHEMAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SCOPE_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Parameters.SCOPE_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte SCOPE_NAME in Tabelle proc_TSQL_Parameters ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Parameters.SCOPE_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSPECIFIC_CATALOGNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Parameters.SPECIFIC_CATALOGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSPECIFIC_CATALOGNull()
            Me(Me.tableproc_TSQL_Parameters.SPECIFIC_CATALOGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSPECIFIC_SCHEMANull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Parameters.SPECIFIC_SCHEMAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSPECIFIC_SCHEMANull()
            Me(Me.tableproc_TSQL_Parameters.SPECIFIC_SCHEMAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPARAMETER_MODENull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Parameters.PARAMETER_MODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPARAMETER_MODENull()
            Me(Me.tableproc_TSQL_Parameters.PARAMETER_MODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIS_RESULTNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Parameters.IS_RESULTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIS_RESULTNull()
            Me(Me.tableproc_TSQL_Parameters.IS_RESULTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAS_LOCATORNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Parameters.AS_LOCATORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAS_LOCATORNull()
            Me(Me.tableproc_TSQL_Parameters.AS_LOCATORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPARAMETER_NAMENull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Parameters.PARAMETER_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPARAMETER_NAMENull()
            Me(Me.tableproc_TSQL_Parameters.PARAMETER_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDATA_TYPENull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Parameters.DATA_TYPEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDATA_TYPENull()
            Me(Me.tableproc_TSQL_Parameters.DATA_TYPEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCHARACTER_MAXIMUM_LENGTHNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Parameters.CHARACTER_MAXIMUM_LENGTHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCHARACTER_MAXIMUM_LENGTHNull()
            Me(Me.tableproc_TSQL_Parameters.CHARACTER_MAXIMUM_LENGTHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCHARACTER_OCTET_LENGTHNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Parameters.CHARACTER_OCTET_LENGTHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCHARACTER_OCTET_LENGTHNull()
            Me(Me.tableproc_TSQL_Parameters.CHARACTER_OCTET_LENGTHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOLLATION_CATALOGNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Parameters.COLLATION_CATALOGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOLLATION_CATALOGNull()
            Me(Me.tableproc_TSQL_Parameters.COLLATION_CATALOGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOLLATION_SCHEMANull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Parameters.COLLATION_SCHEMAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOLLATION_SCHEMANull()
            Me(Me.tableproc_TSQL_Parameters.COLLATION_SCHEMAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOLLATION_NAMENull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Parameters.COLLATION_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOLLATION_NAMENull()
            Me(Me.tableproc_TSQL_Parameters.COLLATION_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCHARACTER_SET_CATALOGNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Parameters.CHARACTER_SET_CATALOGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCHARACTER_SET_CATALOGNull()
            Me(Me.tableproc_TSQL_Parameters.CHARACTER_SET_CATALOGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCHARACTER_SET_SCHEMANull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Parameters.CHARACTER_SET_SCHEMAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCHARACTER_SET_SCHEMANull()
            Me(Me.tableproc_TSQL_Parameters.CHARACTER_SET_SCHEMAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCHARACTER_SET_NAMENull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Parameters.CHARACTER_SET_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCHARACTER_SET_NAMENull()
            Me(Me.tableproc_TSQL_Parameters.CHARACTER_SET_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMERIC_PRECISIONNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Parameters.NUMERIC_PRECISIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMERIC_PRECISIONNull()
            Me(Me.tableproc_TSQL_Parameters.NUMERIC_PRECISIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMERIC_PRECISION_RADIXNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Parameters.NUMERIC_PRECISION_RADIXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMERIC_PRECISION_RADIXNull()
            Me(Me.tableproc_TSQL_Parameters.NUMERIC_PRECISION_RADIXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMERIC_SCALENull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Parameters.NUMERIC_SCALEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMERIC_SCALENull()
            Me(Me.tableproc_TSQL_Parameters.NUMERIC_SCALEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDATETIME_PRECISIONNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Parameters.DATETIME_PRECISIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDATETIME_PRECISIONNull()
            Me(Me.tableproc_TSQL_Parameters.DATETIME_PRECISIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINTERVAL_TYPENull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Parameters.INTERVAL_TYPEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINTERVAL_TYPENull()
            Me(Me.tableproc_TSQL_Parameters.INTERVAL_TYPEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINTERVAL_PRECISIONNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Parameters.INTERVAL_PRECISIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINTERVAL_PRECISIONNull()
            Me(Me.tableproc_TSQL_Parameters.INTERVAL_PRECISIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUSER_DEFINED_TYPE_CATALOGNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Parameters.USER_DEFINED_TYPE_CATALOGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUSER_DEFINED_TYPE_CATALOGNull()
            Me(Me.tableproc_TSQL_Parameters.USER_DEFINED_TYPE_CATALOGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUSER_DEFINED_TYPE_SCHEMANull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Parameters.USER_DEFINED_TYPE_SCHEMAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUSER_DEFINED_TYPE_SCHEMANull()
            Me(Me.tableproc_TSQL_Parameters.USER_DEFINED_TYPE_SCHEMAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUSER_DEFINED_TYPE_NAMENull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Parameters.USER_DEFINED_TYPE_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUSER_DEFINED_TYPE_NAMENull()
            Me(Me.tableproc_TSQL_Parameters.USER_DEFINED_TYPE_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSCOPE_CATALOGNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Parameters.SCOPE_CATALOGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSCOPE_CATALOGNull()
            Me(Me.tableproc_TSQL_Parameters.SCOPE_CATALOGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSCOPE_SCHEMANull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Parameters.SCOPE_SCHEMAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSCOPE_SCHEMANull()
            Me(Me.tableproc_TSQL_Parameters.SCOPE_SCHEMAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSCOPE_NAMENull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Parameters.SCOPE_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSCOPE_NAMENull()
            Me(Me.tableproc_TSQL_Parameters.SCOPE_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class proc_TSQL_SynonymsRow
        Inherits Global.System.Data.DataRow
        
        Private tableproc_TSQL_Synonyms As proc_TSQL_SynonymsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableproc_TSQL_Synonyms = CType(Me.Table,proc_TSQL_SynonymsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property name() As String
            Get
                Return CType(Me(Me.tableproc_TSQL_Synonyms.nameColumn),String)
            End Get
            Set
                Me(Me.tableproc_TSQL_Synonyms.nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property object_id() As Integer
            Get
                Return CType(Me(Me.tableproc_TSQL_Synonyms.object_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproc_TSQL_Synonyms.object_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property principal_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Synonyms.principal_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte principal_id in Tabelle proc_TSQL_Synonyms ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Synonyms.principal_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property schema_id() As Integer
            Get
                Return CType(Me(Me.tableproc_TSQL_Synonyms.schema_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproc_TSQL_Synonyms.schema_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property parent_object_id() As Integer
            Get
                Return CType(Me(Me.tableproc_TSQL_Synonyms.parent_object_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproc_TSQL_Synonyms.parent_object_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property type() As String
            Get
                Return CType(Me(Me.tableproc_TSQL_Synonyms.typeColumn),String)
            End Get
            Set
                Me(Me.tableproc_TSQL_Synonyms.typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property type_desc() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Synonyms.type_descColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte type_desc in Tabelle proc_TSQL_Synonyms ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Synonyms.type_descColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property create_date() As Date
            Get
                Return CType(Me(Me.tableproc_TSQL_Synonyms.create_dateColumn),Date)
            End Get
            Set
                Me(Me.tableproc_TSQL_Synonyms.create_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property modify_date() As Date
            Get
                Return CType(Me(Me.tableproc_TSQL_Synonyms.modify_dateColumn),Date)
            End Get
            Set
                Me(Me.tableproc_TSQL_Synonyms.modify_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property is_ms_shipped() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Synonyms.is_ms_shippedColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte is_ms_shipped in Tabelle proc_TSQL_Synonyms ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Synonyms.is_ms_shippedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property is_published() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Synonyms.is_publishedColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte is_published in Tabelle proc_TSQL_Synonyms ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Synonyms.is_publishedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property is_schema_published() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Synonyms.is_schema_publishedColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte is_schema_published in Tabelle proc_TSQL_Synonyms ist DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Synonyms.is_schema_publishedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property base_object_name() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Synonyms.base_object_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte base_object_name in Tabelle proc_TSQL_Synonyms ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Synonyms.base_object_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isprincipal_idNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Synonyms.principal_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setprincipal_idNull()
            Me(Me.tableproc_TSQL_Synonyms.principal_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Istype_descNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Synonyms.type_descColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Settype_descNull()
            Me(Me.tableproc_TSQL_Synonyms.type_descColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isis_ms_shippedNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Synonyms.is_ms_shippedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setis_ms_shippedNull()
            Me(Me.tableproc_TSQL_Synonyms.is_ms_shippedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isis_publishedNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Synonyms.is_publishedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setis_publishedNull()
            Me(Me.tableproc_TSQL_Synonyms.is_publishedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isis_schema_publishedNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Synonyms.is_schema_publishedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setis_schema_publishedNull()
            Me(Me.tableproc_TSQL_Synonyms.is_schema_publishedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isbase_object_nameNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Synonyms.base_object_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setbase_object_nameNull()
            Me(Me.tableproc_TSQL_Synonyms.base_object_nameColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class proc_TSQL_ViewsRow
        Inherits Global.System.Data.DataRow
        
        Private tableproc_TSQL_Views As proc_TSQL_ViewsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableproc_TSQL_Views = CType(Me.Table,proc_TSQL_ViewsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property name() As String
            Get
                Return CType(Me(Me.tableproc_TSQL_Views.nameColumn),String)
            End Get
            Set
                Me(Me.tableproc_TSQL_Views.nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property object_id() As Integer
            Get
                Return CType(Me(Me.tableproc_TSQL_Views.object_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproc_TSQL_Views.object_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property principal_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Views.principal_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte principal_id in Tabelle proc_TSQL_Views ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Views.principal_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property schema_id() As Integer
            Get
                Return CType(Me(Me.tableproc_TSQL_Views.schema_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproc_TSQL_Views.schema_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property parent_object_id() As Integer
            Get
                Return CType(Me(Me.tableproc_TSQL_Views.parent_object_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproc_TSQL_Views.parent_object_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property type() As String
            Get
                Return CType(Me(Me.tableproc_TSQL_Views.typeColumn),String)
            End Get
            Set
                Me(Me.tableproc_TSQL_Views.typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property type_desc() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Views.type_descColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte type_desc in Tabelle proc_TSQL_Views ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Views.type_descColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property create_date() As Date
            Get
                Return CType(Me(Me.tableproc_TSQL_Views.create_dateColumn),Date)
            End Get
            Set
                Me(Me.tableproc_TSQL_Views.create_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property modify_date() As Date
            Get
                Return CType(Me(Me.tableproc_TSQL_Views.modify_dateColumn),Date)
            End Get
            Set
                Me(Me.tableproc_TSQL_Views.modify_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property is_ms_shipped() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Views.is_ms_shippedColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte is_ms_shipped in Tabelle proc_TSQL_Views ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Views.is_ms_shippedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property is_published() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Views.is_publishedColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte is_published in Tabelle proc_TSQL_Views ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Views.is_publishedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property is_schema_published() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Views.is_schema_publishedColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte is_schema_published in Tabelle proc_TSQL_Views ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Views.is_schema_publishedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property is_replicated() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Views.is_replicatedColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte is_replicated in Tabelle proc_TSQL_Views ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Views.is_replicatedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property has_replication_filter() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Views.has_replication_filterColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte has_replication_filter in Tabelle proc_TSQL_Views ist DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Views.has_replication_filterColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property has_opaque_metadata() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Views.has_opaque_metadataColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte has_opaque_metadata in Tabelle proc_TSQL_Views ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Views.has_opaque_metadataColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property has_unchecked_assembly_data() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Views.has_unchecked_assembly_dataColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte has_unchecked_assembly_data in Tabelle proc_TSQL_Views ist DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Views.has_unchecked_assembly_dataColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property with_check_option() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Views.with_check_optionColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte with_check_option in Tabelle proc_TSQL_Views ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Views.with_check_optionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property is_date_correlation_view() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Views.is_date_correlation_viewColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte is_date_correlation_view in Tabelle proc_TSQL_Views ist DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Views.is_date_correlation_viewColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isprincipal_idNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Views.principal_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setprincipal_idNull()
            Me(Me.tableproc_TSQL_Views.principal_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Istype_descNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Views.type_descColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Settype_descNull()
            Me(Me.tableproc_TSQL_Views.type_descColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isis_ms_shippedNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Views.is_ms_shippedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setis_ms_shippedNull()
            Me(Me.tableproc_TSQL_Views.is_ms_shippedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isis_publishedNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Views.is_publishedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setis_publishedNull()
            Me(Me.tableproc_TSQL_Views.is_publishedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isis_schema_publishedNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Views.is_schema_publishedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setis_schema_publishedNull()
            Me(Me.tableproc_TSQL_Views.is_schema_publishedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isis_replicatedNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Views.is_replicatedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setis_replicatedNull()
            Me(Me.tableproc_TSQL_Views.is_replicatedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ishas_replication_filterNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Views.has_replication_filterColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Sethas_replication_filterNull()
            Me(Me.tableproc_TSQL_Views.has_replication_filterColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ishas_opaque_metadataNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Views.has_opaque_metadataColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Sethas_opaque_metadataNull()
            Me(Me.tableproc_TSQL_Views.has_opaque_metadataColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ishas_unchecked_assembly_dataNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Views.has_unchecked_assembly_dataColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Sethas_unchecked_assembly_dataNull()
            Me(Me.tableproc_TSQL_Views.has_unchecked_assembly_dataColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Iswith_check_optionNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Views.with_check_optionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setwith_check_optionNull()
            Me(Me.tableproc_TSQL_Views.with_check_optionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isis_date_correlation_viewNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Views.is_date_correlation_viewColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setis_date_correlation_viewNull()
            Me(Me.tableproc_TSQL_Views.is_date_correlation_viewColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class proc_TSQL_TablesRow
        Inherits Global.System.Data.DataRow
        
        Private tableproc_TSQL_Tables As proc_TSQL_TablesDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableproc_TSQL_Tables = CType(Me.Table,proc_TSQL_TablesDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property name() As String
            Get
                Return CType(Me(Me.tableproc_TSQL_Tables.nameColumn),String)
            End Get
            Set
                Me(Me.tableproc_TSQL_Tables.nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property object_id() As Integer
            Get
                Return CType(Me(Me.tableproc_TSQL_Tables.object_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproc_TSQL_Tables.object_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property principal_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Tables.principal_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte principal_id in Tabelle proc_TSQL_Tables ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Tables.principal_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property schema_id() As Integer
            Get
                Return CType(Me(Me.tableproc_TSQL_Tables.schema_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproc_TSQL_Tables.schema_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property parent_object_id() As Integer
            Get
                Return CType(Me(Me.tableproc_TSQL_Tables.parent_object_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproc_TSQL_Tables.parent_object_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property type() As String
            Get
                Return CType(Me(Me.tableproc_TSQL_Tables.typeColumn),String)
            End Get
            Set
                Me(Me.tableproc_TSQL_Tables.typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property type_desc() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Tables.type_descColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte type_desc in Tabelle proc_TSQL_Tables ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Tables.type_descColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property create_date() As Date
            Get
                Return CType(Me(Me.tableproc_TSQL_Tables.create_dateColumn),Date)
            End Get
            Set
                Me(Me.tableproc_TSQL_Tables.create_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property modify_date() As Date
            Get
                Return CType(Me(Me.tableproc_TSQL_Tables.modify_dateColumn),Date)
            End Get
            Set
                Me(Me.tableproc_TSQL_Tables.modify_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property is_ms_shipped() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Tables.is_ms_shippedColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte is_ms_shipped in Tabelle proc_TSQL_Tables ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Tables.is_ms_shippedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property is_published() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Tables.is_publishedColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte is_published in Tabelle proc_TSQL_Tables ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Tables.is_publishedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property is_schema_published() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Tables.is_schema_publishedColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte is_schema_published in Tabelle proc_TSQL_Tables ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Tables.is_schema_publishedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property lob_data_space_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Tables.lob_data_space_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte lob_data_space_id in Tabelle proc_TSQL_Tables ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Tables.lob_data_space_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property filestream_data_space_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Tables.filestream_data_space_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte filestream_data_space_id in Tabelle proc_TSQL_Tables ist DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Tables.filestream_data_space_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property max_column_id_used() As Integer
            Get
                Return CType(Me(Me.tableproc_TSQL_Tables.max_column_id_usedColumn),Integer)
            End Get
            Set
                Me(Me.tableproc_TSQL_Tables.max_column_id_usedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property lock_on_bulk_load() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Tables.lock_on_bulk_loadColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte lock_on_bulk_load in Tabelle proc_TSQL_Tables ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Tables.lock_on_bulk_loadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property uses_ansi_nulls() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Tables.uses_ansi_nullsColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte uses_ansi_nulls in Tabelle proc_TSQL_Tables ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Tables.uses_ansi_nullsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property is_replicated() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Tables.is_replicatedColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte is_replicated in Tabelle proc_TSQL_Tables ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Tables.is_replicatedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property has_replication_filter() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Tables.has_replication_filterColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte has_replication_filter in Tabelle proc_TSQL_Tables ist DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Tables.has_replication_filterColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property is_merge_published() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Tables.is_merge_publishedColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte is_merge_published in Tabelle proc_TSQL_Tables ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Tables.is_merge_publishedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property is_sync_tran_subscribed() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Tables.is_sync_tran_subscribedColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte is_sync_tran_subscribed in Tabelle proc_TSQL_Tables ist DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Tables.is_sync_tran_subscribedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property has_unchecked_assembly_data() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Tables.has_unchecked_assembly_dataColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte has_unchecked_assembly_data in Tabelle proc_TSQL_Tables ist D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Tables.has_unchecked_assembly_dataColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property text_in_row_limit() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Tables.text_in_row_limitColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte text_in_row_limit in Tabelle proc_TSQL_Tables ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Tables.text_in_row_limitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property large_value_types_out_of_row() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_Tables.large_value_types_out_of_rowColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte large_value_types_out_of_row in Tabelle proc_TSQL_Tables ist "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_Tables.large_value_types_out_of_rowColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isprincipal_idNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Tables.principal_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setprincipal_idNull()
            Me(Me.tableproc_TSQL_Tables.principal_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Istype_descNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Tables.type_descColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Settype_descNull()
            Me(Me.tableproc_TSQL_Tables.type_descColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isis_ms_shippedNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Tables.is_ms_shippedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setis_ms_shippedNull()
            Me(Me.tableproc_TSQL_Tables.is_ms_shippedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isis_publishedNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Tables.is_publishedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setis_publishedNull()
            Me(Me.tableproc_TSQL_Tables.is_publishedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isis_schema_publishedNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Tables.is_schema_publishedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setis_schema_publishedNull()
            Me(Me.tableproc_TSQL_Tables.is_schema_publishedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Islob_data_space_idNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Tables.lob_data_space_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setlob_data_space_idNull()
            Me(Me.tableproc_TSQL_Tables.lob_data_space_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isfilestream_data_space_idNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Tables.filestream_data_space_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setfilestream_data_space_idNull()
            Me(Me.tableproc_TSQL_Tables.filestream_data_space_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Islock_on_bulk_loadNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Tables.lock_on_bulk_loadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setlock_on_bulk_loadNull()
            Me(Me.tableproc_TSQL_Tables.lock_on_bulk_loadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isuses_ansi_nullsNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Tables.uses_ansi_nullsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setuses_ansi_nullsNull()
            Me(Me.tableproc_TSQL_Tables.uses_ansi_nullsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isis_replicatedNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Tables.is_replicatedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setis_replicatedNull()
            Me(Me.tableproc_TSQL_Tables.is_replicatedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ishas_replication_filterNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Tables.has_replication_filterColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Sethas_replication_filterNull()
            Me(Me.tableproc_TSQL_Tables.has_replication_filterColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isis_merge_publishedNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Tables.is_merge_publishedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setis_merge_publishedNull()
            Me(Me.tableproc_TSQL_Tables.is_merge_publishedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isis_sync_tran_subscribedNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Tables.is_sync_tran_subscribedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setis_sync_tran_subscribedNull()
            Me(Me.tableproc_TSQL_Tables.is_sync_tran_subscribedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ishas_unchecked_assembly_dataNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Tables.has_unchecked_assembly_dataColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Sethas_unchecked_assembly_dataNull()
            Me(Me.tableproc_TSQL_Tables.has_unchecked_assembly_dataColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Istext_in_row_limitNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Tables.text_in_row_limitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Settext_in_row_limitNull()
            Me(Me.tableproc_TSQL_Tables.text_in_row_limitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Islarge_value_types_out_of_rowNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_Tables.large_value_types_out_of_rowColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setlarge_value_types_out_of_rowNull()
            Me(Me.tableproc_TSQL_Tables.large_value_types_out_of_rowColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class proc_TSQL_ObjectDefinitionRow
        Inherits Global.System.Data.DataRow
        
        Private tableproc_TSQL_ObjectDefinition As proc_TSQL_ObjectDefinitionDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableproc_TSQL_ObjectDefinition = CType(Me.Table,proc_TSQL_ObjectDefinitionDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ObjectDefinition() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_TSQL_ObjectDefinition.ObjectDefinitionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte ObjectDefinition in Tabelle proc_TSQL_ObjectDefinition ist DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_TSQL_ObjectDefinition.ObjectDefinitionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsObjectDefinitionNull() As Boolean
            Return Me.IsNull(Me.tableproc_TSQL_ObjectDefinition.ObjectDefinitionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetObjectDefinitionNull()
            Me(Me.tableproc_TSQL_ObjectDefinition.ObjectDefinitionColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class dtblTablesRow
        Inherits Global.System.Data.DataRow
        
        Private tabledtblTables As dtblTablesDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledtblTables = CType(Me.Table,dtblTablesDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property import() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabledtblTables.importColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte import in Tabelle dtblTables ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtblTables.importColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property _Table() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtblTables.TableColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Table in Tabelle dtblTables ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtblTables.TableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_TableSem() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tabledtblTables.GUID_TableSemColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte GUID_TableSem in Tabelle dtblTables ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtblTables.GUID_TableSemColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_TableSem() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtblTables.Name_TableSemColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Name_TableSem in Tabelle dtblTables ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtblTables.Name_TableSemColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CreationDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledtblTables.CreationDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte CreationDate in Tabelle dtblTables ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtblTables.CreationDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsimportNull() As Boolean
            Return Me.IsNull(Me.tabledtblTables.importColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetimportNull()
            Me(Me.tabledtblTables.importColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Is_TableNull() As Boolean
            Return Me.IsNull(Me.tabledtblTables.TableColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Set_TableNull()
            Me(Me.tabledtblTables.TableColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_TableSemNull() As Boolean
            Return Me.IsNull(Me.tabledtblTables.GUID_TableSemColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_TableSemNull()
            Me(Me.tabledtblTables.GUID_TableSemColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsName_TableSemNull() As Boolean
            Return Me.IsNull(Me.tabledtblTables.Name_TableSemColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetName_TableSemNull()
            Me(Me.tabledtblTables.Name_TableSemColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCreationDateNull() As Boolean
            Return Me.IsNull(Me.tabledtblTables.CreationDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCreationDateNull()
            Me(Me.tabledtblTables.CreationDateColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class dtblProceduresRow
        Inherits Global.System.Data.DataRow
        
        Private tabledtblProcedures As dtblProceduresDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledtblProcedures = CType(Me.Table,dtblProceduresDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Import() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabledtblProcedures.ImportColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Import in Tabelle dtblProcedures ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtblProcedures.ImportColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Procedure() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtblProcedures.ProcedureColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Procedure in Tabelle dtblProcedures ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtblProcedures.ProcedureColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Script() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtblProcedures.ScriptColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Script in Tabelle dtblProcedures ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtblProcedures.ScriptColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Parameters() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtblProcedures.ParametersColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Parameters in Tabelle dtblProcedures ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtblProcedures.ParametersColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Procedure() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tabledtblProcedures.GUID_ProcedureColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte GUID_Procedure in Tabelle dtblProcedures ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtblProcedures.GUID_ProcedureColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Procedure() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtblProcedures.Name_ProcedureColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Name_Procedure in Tabelle dtblProcedures ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtblProcedures.Name_ProcedureColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CreationDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledtblProcedures.CreationDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte CreationDate in Tabelle dtblProcedures ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtblProcedures.CreationDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AlterDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledtblProcedures.AlterDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte AlterDate in Tabelle dtblProcedures ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtblProcedures.AlterDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsImportNull() As Boolean
            Return Me.IsNull(Me.tabledtblProcedures.ImportColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetImportNull()
            Me(Me.tabledtblProcedures.ImportColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProcedureNull() As Boolean
            Return Me.IsNull(Me.tabledtblProcedures.ProcedureColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProcedureNull()
            Me(Me.tabledtblProcedures.ProcedureColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsScriptNull() As Boolean
            Return Me.IsNull(Me.tabledtblProcedures.ScriptColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetScriptNull()
            Me(Me.tabledtblProcedures.ScriptColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsParametersNull() As Boolean
            Return Me.IsNull(Me.tabledtblProcedures.ParametersColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetParametersNull()
            Me(Me.tabledtblProcedures.ParametersColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_ProcedureNull() As Boolean
            Return Me.IsNull(Me.tabledtblProcedures.GUID_ProcedureColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_ProcedureNull()
            Me(Me.tabledtblProcedures.GUID_ProcedureColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsName_ProcedureNull() As Boolean
            Return Me.IsNull(Me.tabledtblProcedures.Name_ProcedureColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetName_ProcedureNull()
            Me(Me.tabledtblProcedures.Name_ProcedureColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCreationDateNull() As Boolean
            Return Me.IsNull(Me.tabledtblProcedures.CreationDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCreationDateNull()
            Me(Me.tabledtblProcedures.CreationDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAlterDateNull() As Boolean
            Return Me.IsNull(Me.tabledtblProcedures.AlterDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAlterDateNull()
            Me(Me.tabledtblProcedures.AlterDateColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class dtblFunctionsRow
        Inherits Global.System.Data.DataRow
        
        Private tabledtblFunctions As dtblFunctionsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledtblFunctions = CType(Me.Table,dtblFunctionsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Import() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabledtblFunctions.ImportColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Import in Tabelle dtblFunctions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtblFunctions.ImportColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property _Function() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtblFunctions.FunctionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Function in Tabelle dtblFunctions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtblFunctions.FunctionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Script() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtblFunctions.ScriptColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Script in Tabelle dtblFunctions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtblFunctions.ScriptColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Parameters() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtblFunctions.ParametersColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Parameters in Tabelle dtblFunctions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtblFunctions.ParametersColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Function() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tabledtblFunctions.GUID_FunctionColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte GUID_Function in Tabelle dtblFunctions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtblFunctions.GUID_FunctionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Function() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtblFunctions.Name_FunctionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Name_Function in Tabelle dtblFunctions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtblFunctions.Name_FunctionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CreationDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledtblFunctions.CreationDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte CreationDate in Tabelle dtblFunctions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtblFunctions.CreationDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AlterDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledtblFunctions.AlterDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte AlterDate in Tabelle dtblFunctions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtblFunctions.AlterDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsImportNull() As Boolean
            Return Me.IsNull(Me.tabledtblFunctions.ImportColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetImportNull()
            Me(Me.tabledtblFunctions.ImportColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Is_FunctionNull() As Boolean
            Return Me.IsNull(Me.tabledtblFunctions.FunctionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Set_FunctionNull()
            Me(Me.tabledtblFunctions.FunctionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsScriptNull() As Boolean
            Return Me.IsNull(Me.tabledtblFunctions.ScriptColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetScriptNull()
            Me(Me.tabledtblFunctions.ScriptColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsParametersNull() As Boolean
            Return Me.IsNull(Me.tabledtblFunctions.ParametersColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetParametersNull()
            Me(Me.tabledtblFunctions.ParametersColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_FunctionNull() As Boolean
            Return Me.IsNull(Me.tabledtblFunctions.GUID_FunctionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_FunctionNull()
            Me(Me.tabledtblFunctions.GUID_FunctionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsName_FunctionNull() As Boolean
            Return Me.IsNull(Me.tabledtblFunctions.Name_FunctionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetName_FunctionNull()
            Me(Me.tabledtblFunctions.Name_FunctionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCreationDateNull() As Boolean
            Return Me.IsNull(Me.tabledtblFunctions.CreationDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCreationDateNull()
            Me(Me.tabledtblFunctions.CreationDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAlterDateNull() As Boolean
            Return Me.IsNull(Me.tabledtblFunctions.AlterDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAlterDateNull()
            Me(Me.tabledtblFunctions.AlterDateColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class dtblSynonymsRow
        Inherits Global.System.Data.DataRow
        
        Private tabledtblSynonyms As dtblSynonymsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledtblSynonyms = CType(Me.Table,dtblSynonymsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Import() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabledtblSynonyms.ImportColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Import in Tabelle dtblSynonyms ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtblSynonyms.ImportColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Synonym() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtblSynonyms.SynonymColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Synonym in Tabelle dtblSynonyms ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtblSynonyms.SynonymColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Synonym() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tabledtblSynonyms.GUID_SynonymColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte GUID_Synonym in Tabelle dtblSynonyms ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtblSynonyms.GUID_SynonymColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Synonym() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtblSynonyms.Name_SynonymColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Name_Synonym in Tabelle dtblSynonyms ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtblSynonyms.Name_SynonymColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CreationDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledtblSynonyms.CreationDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte CreationDate in Tabelle dtblSynonyms ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtblSynonyms.CreationDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsImportNull() As Boolean
            Return Me.IsNull(Me.tabledtblSynonyms.ImportColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetImportNull()
            Me(Me.tabledtblSynonyms.ImportColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSynonymNull() As Boolean
            Return Me.IsNull(Me.tabledtblSynonyms.SynonymColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSynonymNull()
            Me(Me.tabledtblSynonyms.SynonymColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_SynonymNull() As Boolean
            Return Me.IsNull(Me.tabledtblSynonyms.GUID_SynonymColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_SynonymNull()
            Me(Me.tabledtblSynonyms.GUID_SynonymColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsName_SynonymNull() As Boolean
            Return Me.IsNull(Me.tabledtblSynonyms.Name_SynonymColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetName_SynonymNull()
            Me(Me.tabledtblSynonyms.Name_SynonymColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCreationDateNull() As Boolean
            Return Me.IsNull(Me.tabledtblSynonyms.CreationDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCreationDateNull()
            Me(Me.tabledtblSynonyms.CreationDateColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class dtblTriggersRow
        Inherits Global.System.Data.DataRow
        
        Private tabledtblTriggers As dtblTriggersDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledtblTriggers = CType(Me.Table,dtblTriggersDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Import() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabledtblTriggers.ImportColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Import in Tabelle dtblTriggers ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtblTriggers.ImportColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Trigger() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtblTriggers.TriggerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Trigger in Tabelle dtblTriggers ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtblTriggers.TriggerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Script() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtblTriggers.ScriptColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Script in Tabelle dtblTriggers ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtblTriggers.ScriptColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Trigger() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tabledtblTriggers.GUID_TriggerColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte GUID_Trigger in Tabelle dtblTriggers ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtblTriggers.GUID_TriggerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Trigger() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtblTriggers.Name_TriggerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Name_Trigger in Tabelle dtblTriggers ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtblTriggers.Name_TriggerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CreationDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledtblTriggers.CreationDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte CreationDate in Tabelle dtblTriggers ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtblTriggers.CreationDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsImportNull() As Boolean
            Return Me.IsNull(Me.tabledtblTriggers.ImportColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetImportNull()
            Me(Me.tabledtblTriggers.ImportColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTriggerNull() As Boolean
            Return Me.IsNull(Me.tabledtblTriggers.TriggerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTriggerNull()
            Me(Me.tabledtblTriggers.TriggerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsScriptNull() As Boolean
            Return Me.IsNull(Me.tabledtblTriggers.ScriptColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetScriptNull()
            Me(Me.tabledtblTriggers.ScriptColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_TriggerNull() As Boolean
            Return Me.IsNull(Me.tabledtblTriggers.GUID_TriggerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_TriggerNull()
            Me(Me.tabledtblTriggers.GUID_TriggerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsName_TriggerNull() As Boolean
            Return Me.IsNull(Me.tabledtblTriggers.Name_TriggerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetName_TriggerNull()
            Me(Me.tabledtblTriggers.Name_TriggerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCreationDateNull() As Boolean
            Return Me.IsNull(Me.tabledtblTriggers.CreationDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCreationDateNull()
            Me(Me.tabledtblTriggers.CreationDateColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class dtblViewsRow
        Inherits Global.System.Data.DataRow
        
        Private tabledtblViews As dtblViewsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledtblViews = CType(Me.Table,dtblViewsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Import() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabledtblViews.ImportColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Import in Tabelle dtblViews ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtblViews.ImportColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property View() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtblViews.ViewColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte View in Tabelle dtblViews ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtblViews.ViewColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Script() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtblViews.ScriptColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Script in Tabelle dtblViews ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtblViews.ScriptColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_View() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tabledtblViews.GUID_ViewColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte GUID_View in Tabelle dtblViews ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtblViews.GUID_ViewColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_View() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtblViews.Name_ViewColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Name_View in Tabelle dtblViews ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtblViews.Name_ViewColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CreationDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledtblViews.CreationDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte CreationDate in Tabelle dtblViews ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtblViews.CreationDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsImportNull() As Boolean
            Return Me.IsNull(Me.tabledtblViews.ImportColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetImportNull()
            Me(Me.tabledtblViews.ImportColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsViewNull() As Boolean
            Return Me.IsNull(Me.tabledtblViews.ViewColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetViewNull()
            Me(Me.tabledtblViews.ViewColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsScriptNull() As Boolean
            Return Me.IsNull(Me.tabledtblViews.ScriptColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetScriptNull()
            Me(Me.tabledtblViews.ScriptColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_ViewNull() As Boolean
            Return Me.IsNull(Me.tabledtblViews.GUID_ViewColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_ViewNull()
            Me(Me.tabledtblViews.GUID_ViewColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsName_ViewNull() As Boolean
            Return Me.IsNull(Me.tabledtblViews.Name_ViewColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetName_ViewNull()
            Me(Me.tabledtblViews.Name_ViewColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCreationDateNull() As Boolean
            Return Me.IsNull(Me.tabledtblViews.CreationDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCreationDateNull()
            Me(Me.tabledtblViews.CreationDateColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class proc_TSQL_FunctionsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As proc_TSQL_FunctionsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As proc_TSQL_FunctionsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As proc_TSQL_FunctionsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class proc_TSQL_ProceduresRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As proc_TSQL_ProceduresRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As proc_TSQL_ProceduresRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As proc_TSQL_ProceduresRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class proc_TSQL_TriggersRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As proc_TSQL_TriggersRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As proc_TSQL_TriggersRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As proc_TSQL_TriggersRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class proc_TSQL_ParametersRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As proc_TSQL_ParametersRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As proc_TSQL_ParametersRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As proc_TSQL_ParametersRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class proc_TSQL_SynonymsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As proc_TSQL_SynonymsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As proc_TSQL_SynonymsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As proc_TSQL_SynonymsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class proc_TSQL_ViewsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As proc_TSQL_ViewsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As proc_TSQL_ViewsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As proc_TSQL_ViewsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class proc_TSQL_TablesRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As proc_TSQL_TablesRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As proc_TSQL_TablesRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As proc_TSQL_TablesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class proc_TSQL_ObjectDefinitionRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As proc_TSQL_ObjectDefinitionRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As proc_TSQL_ObjectDefinitionRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As proc_TSQL_ObjectDefinitionRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class dtblTablesRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dtblTablesRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As dtblTablesRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As dtblTablesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class dtblProceduresRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dtblProceduresRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As dtblProceduresRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As dtblProceduresRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class dtblFunctionsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dtblFunctionsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As dtblFunctionsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As dtblFunctionsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class dtblSynonymsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dtblSynonymsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As dtblSynonymsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As dtblSynonymsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class dtblTriggersRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dtblTriggersRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As dtblTriggersRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As dtblTriggersRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class dtblViewsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dtblViewsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As dtblViewsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As dtblViewsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace ds_TemplateViewTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class proc_TSQL_FunctionsTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "proc_TSQL_Functions"
            tableMapping.ColumnMappings.Add("SPECIFIC_CATALOG", "SPECIFIC_CATALOG")
            tableMapping.ColumnMappings.Add("SPECIFIC_SCHEMA", "SPECIFIC_SCHEMA")
            tableMapping.ColumnMappings.Add("SPECIFIC_NAME", "SPECIFIC_NAME")
            tableMapping.ColumnMappings.Add("ROUTINE_CATALOG", "ROUTINE_CATALOG")
            tableMapping.ColumnMappings.Add("ROUTINE_SCHEMA", "ROUTINE_SCHEMA")
            tableMapping.ColumnMappings.Add("ROUTINE_NAME", "ROUTINE_NAME")
            tableMapping.ColumnMappings.Add("ROUTINE_TYPE", "ROUTINE_TYPE")
            tableMapping.ColumnMappings.Add("MODULE_CATALOG", "MODULE_CATALOG")
            tableMapping.ColumnMappings.Add("MODULE_SCHEMA", "MODULE_SCHEMA")
            tableMapping.ColumnMappings.Add("MODULE_NAME", "MODULE_NAME")
            tableMapping.ColumnMappings.Add("UDT_CATALOG", "UDT_CATALOG")
            tableMapping.ColumnMappings.Add("UDT_SCHEMA", "UDT_SCHEMA")
            tableMapping.ColumnMappings.Add("UDT_NAME", "UDT_NAME")
            tableMapping.ColumnMappings.Add("DATA_TYPE", "DATA_TYPE")
            tableMapping.ColumnMappings.Add("CHARACTER_MAXIMUM_LENGTH", "CHARACTER_MAXIMUM_LENGTH")
            tableMapping.ColumnMappings.Add("CHARACTER_OCTET_LENGTH", "CHARACTER_OCTET_LENGTH")
            tableMapping.ColumnMappings.Add("COLLATION_CATALOG", "COLLATION_CATALOG")
            tableMapping.ColumnMappings.Add("COLLATION_SCHEMA", "COLLATION_SCHEMA")
            tableMapping.ColumnMappings.Add("COLLATION_NAME", "COLLATION_NAME")
            tableMapping.ColumnMappings.Add("CHARACTER_SET_CATALOG", "CHARACTER_SET_CATALOG")
            tableMapping.ColumnMappings.Add("CHARACTER_SET_SCHEMA", "CHARACTER_SET_SCHEMA")
            tableMapping.ColumnMappings.Add("CHARACTER_SET_NAME", "CHARACTER_SET_NAME")
            tableMapping.ColumnMappings.Add("NUMERIC_PRECISION", "NUMERIC_PRECISION")
            tableMapping.ColumnMappings.Add("NUMERIC_PRECISION_RADIX", "NUMERIC_PRECISION_RADIX")
            tableMapping.ColumnMappings.Add("NUMERIC_SCALE", "NUMERIC_SCALE")
            tableMapping.ColumnMappings.Add("DATETIME_PRECISION", "DATETIME_PRECISION")
            tableMapping.ColumnMappings.Add("INTERVAL_TYPE", "INTERVAL_TYPE")
            tableMapping.ColumnMappings.Add("INTERVAL_PRECISION", "INTERVAL_PRECISION")
            tableMapping.ColumnMappings.Add("TYPE_UDT_CATALOG", "TYPE_UDT_CATALOG")
            tableMapping.ColumnMappings.Add("TYPE_UDT_SCHEMA", "TYPE_UDT_SCHEMA")
            tableMapping.ColumnMappings.Add("TYPE_UDT_NAME", "TYPE_UDT_NAME")
            tableMapping.ColumnMappings.Add("SCOPE_CATALOG", "SCOPE_CATALOG")
            tableMapping.ColumnMappings.Add("SCOPE_SCHEMA", "SCOPE_SCHEMA")
            tableMapping.ColumnMappings.Add("SCOPE_NAME", "SCOPE_NAME")
            tableMapping.ColumnMappings.Add("MAXIMUM_CARDINALITY", "MAXIMUM_CARDINALITY")
            tableMapping.ColumnMappings.Add("DTD_IDENTIFIER", "DTD_IDENTIFIER")
            tableMapping.ColumnMappings.Add("ROUTINE_BODY", "ROUTINE_BODY")
            tableMapping.ColumnMappings.Add("ROUTINE_DEFINITION", "ROUTINE_DEFINITION")
            tableMapping.ColumnMappings.Add("EXTERNAL_NAME", "EXTERNAL_NAME")
            tableMapping.ColumnMappings.Add("EXTERNAL_LANGUAGE", "EXTERNAL_LANGUAGE")
            tableMapping.ColumnMappings.Add("PARAMETER_STYLE", "PARAMETER_STYLE")
            tableMapping.ColumnMappings.Add("IS_DETERMINISTIC", "IS_DETERMINISTIC")
            tableMapping.ColumnMappings.Add("SQL_DATA_ACCESS", "SQL_DATA_ACCESS")
            tableMapping.ColumnMappings.Add("IS_NULL_CALL", "IS_NULL_CALL")
            tableMapping.ColumnMappings.Add("SQL_PATH", "SQL_PATH")
            tableMapping.ColumnMappings.Add("SCHEMA_LEVEL_ROUTINE", "SCHEMA_LEVEL_ROUTINE")
            tableMapping.ColumnMappings.Add("MAX_DYNAMIC_RESULT_SETS", "MAX_DYNAMIC_RESULT_SETS")
            tableMapping.ColumnMappings.Add("IS_USER_DEFINED_CAST", "IS_USER_DEFINED_CAST")
            tableMapping.ColumnMappings.Add("IS_IMPLICITLY_INVOCABLE", "IS_IMPLICITLY_INVOCABLE")
            tableMapping.ColumnMappings.Add("CREATED", "CREATED")
            tableMapping.ColumnMappings.Add("LAST_ALTERED", "LAST_ALTERED")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Schema_Manager.My.MySettings.Default.sem_db_system_schema_managerConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.proc_TSQL_Functions"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ds_TemplateView.proc_TSQL_FunctionsDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ds_TemplateView.proc_TSQL_FunctionsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ds_TemplateView.proc_TSQL_FunctionsDataTable = New ds_TemplateView.proc_TSQL_FunctionsDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class proc_TSQL_ProceduresTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "proc_TSQL_Procedures"
            tableMapping.ColumnMappings.Add("name", "name")
            tableMapping.ColumnMappings.Add("object_id", "object_id")
            tableMapping.ColumnMappings.Add("principal_id", "principal_id")
            tableMapping.ColumnMappings.Add("schema_id", "schema_id")
            tableMapping.ColumnMappings.Add("parent_object_id", "parent_object_id")
            tableMapping.ColumnMappings.Add("type", "type")
            tableMapping.ColumnMappings.Add("type_desc", "type_desc")
            tableMapping.ColumnMappings.Add("create_date", "create_date")
            tableMapping.ColumnMappings.Add("modify_date", "modify_date")
            tableMapping.ColumnMappings.Add("is_ms_shipped", "is_ms_shipped")
            tableMapping.ColumnMappings.Add("is_published", "is_published")
            tableMapping.ColumnMappings.Add("is_schema_published", "is_schema_published")
            tableMapping.ColumnMappings.Add("is_auto_executed", "is_auto_executed")
            tableMapping.ColumnMappings.Add("is_execution_replicated", "is_execution_replicated")
            tableMapping.ColumnMappings.Add("is_repl_serializable_only", "is_repl_serializable_only")
            tableMapping.ColumnMappings.Add("skips_repl_constraints", "skips_repl_constraints")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Schema_Manager.My.MySettings.Default.sem_db_system_schema_managerConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.proc_TSQL_Procedures"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ds_TemplateView.proc_TSQL_ProceduresDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ds_TemplateView.proc_TSQL_ProceduresDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ds_TemplateView.proc_TSQL_ProceduresDataTable = New ds_TemplateView.proc_TSQL_ProceduresDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class proc_TSQL_TriggersTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "proc_TSQL_Triggers"
            tableMapping.ColumnMappings.Add("name", "name")
            tableMapping.ColumnMappings.Add("object_id", "object_id")
            tableMapping.ColumnMappings.Add("parent_class", "parent_class")
            tableMapping.ColumnMappings.Add("parent_class_desc", "parent_class_desc")
            tableMapping.ColumnMappings.Add("parent_id", "parent_id")
            tableMapping.ColumnMappings.Add("type", "type")
            tableMapping.ColumnMappings.Add("type_desc", "type_desc")
            tableMapping.ColumnMappings.Add("create_date", "create_date")
            tableMapping.ColumnMappings.Add("modify_date", "modify_date")
            tableMapping.ColumnMappings.Add("is_ms_shipped", "is_ms_shipped")
            tableMapping.ColumnMappings.Add("is_disabled", "is_disabled")
            tableMapping.ColumnMappings.Add("is_not_for_replication", "is_not_for_replication")
            tableMapping.ColumnMappings.Add("is_instead_of_trigger", "is_instead_of_trigger")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Schema_Manager.My.MySettings.Default.sem_db_system_schema_managerConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.proc_TSQL_Triggers"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ds_TemplateView.proc_TSQL_TriggersDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ds_TemplateView.proc_TSQL_TriggersDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ds_TemplateView.proc_TSQL_TriggersDataTable = New ds_TemplateView.proc_TSQL_TriggersDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class proc_TSQL_ParametersTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "proc_TSQL_Parameters"
            tableMapping.ColumnMappings.Add("SPECIFIC_CATALOG", "SPECIFIC_CATALOG")
            tableMapping.ColumnMappings.Add("SPECIFIC_SCHEMA", "SPECIFIC_SCHEMA")
            tableMapping.ColumnMappings.Add("SPECIFIC_NAME", "SPECIFIC_NAME")
            tableMapping.ColumnMappings.Add("ORDINAL_POSITION", "ORDINAL_POSITION")
            tableMapping.ColumnMappings.Add("PARAMETER_MODE", "PARAMETER_MODE")
            tableMapping.ColumnMappings.Add("IS_RESULT", "IS_RESULT")
            tableMapping.ColumnMappings.Add("AS_LOCATOR", "AS_LOCATOR")
            tableMapping.ColumnMappings.Add("PARAMETER_NAME", "PARAMETER_NAME")
            tableMapping.ColumnMappings.Add("DATA_TYPE", "DATA_TYPE")
            tableMapping.ColumnMappings.Add("CHARACTER_MAXIMUM_LENGTH", "CHARACTER_MAXIMUM_LENGTH")
            tableMapping.ColumnMappings.Add("CHARACTER_OCTET_LENGTH", "CHARACTER_OCTET_LENGTH")
            tableMapping.ColumnMappings.Add("COLLATION_CATALOG", "COLLATION_CATALOG")
            tableMapping.ColumnMappings.Add("COLLATION_SCHEMA", "COLLATION_SCHEMA")
            tableMapping.ColumnMappings.Add("COLLATION_NAME", "COLLATION_NAME")
            tableMapping.ColumnMappings.Add("CHARACTER_SET_CATALOG", "CHARACTER_SET_CATALOG")
            tableMapping.ColumnMappings.Add("CHARACTER_SET_SCHEMA", "CHARACTER_SET_SCHEMA")
            tableMapping.ColumnMappings.Add("CHARACTER_SET_NAME", "CHARACTER_SET_NAME")
            tableMapping.ColumnMappings.Add("NUMERIC_PRECISION", "NUMERIC_PRECISION")
            tableMapping.ColumnMappings.Add("NUMERIC_PRECISION_RADIX", "NUMERIC_PRECISION_RADIX")
            tableMapping.ColumnMappings.Add("NUMERIC_SCALE", "NUMERIC_SCALE")
            tableMapping.ColumnMappings.Add("DATETIME_PRECISION", "DATETIME_PRECISION")
            tableMapping.ColumnMappings.Add("INTERVAL_TYPE", "INTERVAL_TYPE")
            tableMapping.ColumnMappings.Add("INTERVAL_PRECISION", "INTERVAL_PRECISION")
            tableMapping.ColumnMappings.Add("USER_DEFINED_TYPE_CATALOG", "USER_DEFINED_TYPE_CATALOG")
            tableMapping.ColumnMappings.Add("USER_DEFINED_TYPE_SCHEMA", "USER_DEFINED_TYPE_SCHEMA")
            tableMapping.ColumnMappings.Add("USER_DEFINED_TYPE_NAME", "USER_DEFINED_TYPE_NAME")
            tableMapping.ColumnMappings.Add("SCOPE_CATALOG", "SCOPE_CATALOG")
            tableMapping.ColumnMappings.Add("SCOPE_SCHEMA", "SCOPE_SCHEMA")
            tableMapping.ColumnMappings.Add("SCOPE_NAME", "SCOPE_NAME")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Schema_Manager.My.MySettings.Default.sem_db_system_schema_managerConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.proc_TSQL_Parameters"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Name_DBItem", Global.System.Data.SqlDbType.VarChar, 255, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ds_TemplateView.proc_TSQL_ParametersDataTable, ByVal Name_DBItem As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Name_DBItem Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Name_DBItem,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Name_DBItem As String) As ds_TemplateView.proc_TSQL_ParametersDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Name_DBItem Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Name_DBItem,String)
            End If
            Dim dataTable As ds_TemplateView.proc_TSQL_ParametersDataTable = New ds_TemplateView.proc_TSQL_ParametersDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class proc_TSQL_SynonymsTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "proc_TSQL_Synonyms"
            tableMapping.ColumnMappings.Add("name", "name")
            tableMapping.ColumnMappings.Add("object_id", "object_id")
            tableMapping.ColumnMappings.Add("principal_id", "principal_id")
            tableMapping.ColumnMappings.Add("schema_id", "schema_id")
            tableMapping.ColumnMappings.Add("parent_object_id", "parent_object_id")
            tableMapping.ColumnMappings.Add("type", "type")
            tableMapping.ColumnMappings.Add("type_desc", "type_desc")
            tableMapping.ColumnMappings.Add("create_date", "create_date")
            tableMapping.ColumnMappings.Add("modify_date", "modify_date")
            tableMapping.ColumnMappings.Add("is_ms_shipped", "is_ms_shipped")
            tableMapping.ColumnMappings.Add("is_published", "is_published")
            tableMapping.ColumnMappings.Add("is_schema_published", "is_schema_published")
            tableMapping.ColumnMappings.Add("base_object_name", "base_object_name")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Schema_Manager.My.MySettings.Default.sem_db_system_schema_managerConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.proc_TSQL_Synonyms"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ds_TemplateView.proc_TSQL_SynonymsDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ds_TemplateView.proc_TSQL_SynonymsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ds_TemplateView.proc_TSQL_SynonymsDataTable = New ds_TemplateView.proc_TSQL_SynonymsDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class proc_TSQL_ViewsTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "proc_TSQL_Views"
            tableMapping.ColumnMappings.Add("name", "name")
            tableMapping.ColumnMappings.Add("object_id", "object_id")
            tableMapping.ColumnMappings.Add("principal_id", "principal_id")
            tableMapping.ColumnMappings.Add("schema_id", "schema_id")
            tableMapping.ColumnMappings.Add("parent_object_id", "parent_object_id")
            tableMapping.ColumnMappings.Add("type", "type")
            tableMapping.ColumnMappings.Add("type_desc", "type_desc")
            tableMapping.ColumnMappings.Add("create_date", "create_date")
            tableMapping.ColumnMappings.Add("modify_date", "modify_date")
            tableMapping.ColumnMappings.Add("is_ms_shipped", "is_ms_shipped")
            tableMapping.ColumnMappings.Add("is_published", "is_published")
            tableMapping.ColumnMappings.Add("is_schema_published", "is_schema_published")
            tableMapping.ColumnMappings.Add("is_replicated", "is_replicated")
            tableMapping.ColumnMappings.Add("has_replication_filter", "has_replication_filter")
            tableMapping.ColumnMappings.Add("has_opaque_metadata", "has_opaque_metadata")
            tableMapping.ColumnMappings.Add("has_unchecked_assembly_data", "has_unchecked_assembly_data")
            tableMapping.ColumnMappings.Add("with_check_option", "with_check_option")
            tableMapping.ColumnMappings.Add("is_date_correlation_view", "is_date_correlation_view")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Schema_Manager.My.MySettings.Default.sem_db_system_schema_managerConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.proc_TSQL_Views"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ds_TemplateView.proc_TSQL_ViewsDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ds_TemplateView.proc_TSQL_ViewsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ds_TemplateView.proc_TSQL_ViewsDataTable = New ds_TemplateView.proc_TSQL_ViewsDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class proc_TSQL_TablesTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "proc_TSQL_Tables"
            tableMapping.ColumnMappings.Add("name", "name")
            tableMapping.ColumnMappings.Add("object_id", "object_id")
            tableMapping.ColumnMappings.Add("principal_id", "principal_id")
            tableMapping.ColumnMappings.Add("schema_id", "schema_id")
            tableMapping.ColumnMappings.Add("parent_object_id", "parent_object_id")
            tableMapping.ColumnMappings.Add("type", "type")
            tableMapping.ColumnMappings.Add("type_desc", "type_desc")
            tableMapping.ColumnMappings.Add("create_date", "create_date")
            tableMapping.ColumnMappings.Add("modify_date", "modify_date")
            tableMapping.ColumnMappings.Add("is_ms_shipped", "is_ms_shipped")
            tableMapping.ColumnMappings.Add("is_published", "is_published")
            tableMapping.ColumnMappings.Add("is_schema_published", "is_schema_published")
            tableMapping.ColumnMappings.Add("lob_data_space_id", "lob_data_space_id")
            tableMapping.ColumnMappings.Add("filestream_data_space_id", "filestream_data_space_id")
            tableMapping.ColumnMappings.Add("max_column_id_used", "max_column_id_used")
            tableMapping.ColumnMappings.Add("lock_on_bulk_load", "lock_on_bulk_load")
            tableMapping.ColumnMappings.Add("uses_ansi_nulls", "uses_ansi_nulls")
            tableMapping.ColumnMappings.Add("is_replicated", "is_replicated")
            tableMapping.ColumnMappings.Add("has_replication_filter", "has_replication_filter")
            tableMapping.ColumnMappings.Add("is_merge_published", "is_merge_published")
            tableMapping.ColumnMappings.Add("is_sync_tran_subscribed", "is_sync_tran_subscribed")
            tableMapping.ColumnMappings.Add("has_unchecked_assembly_data", "has_unchecked_assembly_data")
            tableMapping.ColumnMappings.Add("text_in_row_limit", "text_in_row_limit")
            tableMapping.ColumnMappings.Add("large_value_types_out_of_row", "large_value_types_out_of_row")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Schema_Manager.My.MySettings.Default.sem_db_system_schema_managerConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.proc_TSQL_Tables"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ds_TemplateView.proc_TSQL_TablesDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ds_TemplateView.proc_TSQL_TablesDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ds_TemplateView.proc_TSQL_TablesDataTable = New ds_TemplateView.proc_TSQL_TablesDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class proc_TSQL_ObjectDefinitionTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "proc_TSQL_ObjectDefinition"
            tableMapping.ColumnMappings.Add("ObjectDefinition", "ObjectDefinition")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Schema_Manager.My.MySettings.Default.sem_db_system_schema_managerConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.proc_TSQL_ObjectDefinition"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Name_Object", Global.System.Data.SqlDbType.VarChar, 255, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ds_TemplateView.proc_TSQL_ObjectDefinitionDataTable, ByVal Name_Object As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Name_Object Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Name_Object,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Name_Object As String) As ds_TemplateView.proc_TSQL_ObjectDefinitionDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Name_Object Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Name_Object,String)
            End If
            Dim dataTable As ds_TemplateView.proc_TSQL_ObjectDefinitionDataTable = New ds_TemplateView.proc_TSQL_ObjectDefinitionDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As ds_TemplateView, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As ds_TemplateView, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As ds_TemplateView, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As ds_TemplateView) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager enthält keine Verbindungsinformationen. Legen Sie jede TableA"& _ 
                        "dapterManager TableAdapter-Eigenschaft auf eine gültige TableAdapter-Instanz fes"& _ 
                        "t.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("Die Transaktion kann nicht gestartet werden. Die aktuelle Datenverbindung unterst"& _ 
                        "ützt keine Transaktionen, oder der aktuelle Zustand lässt den Start der Transakt"& _ 
                        "ion nicht zu.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
