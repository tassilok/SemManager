'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18052
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("ds_Menge"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class ds_Menge
    Inherits Global.System.Data.DataSet
    
    Private tableproc_Menge_By_Val_Einheit As proc_Menge_By_Val_EinheitDataTable
    
    Private tableproc_Menge_By_GUID As proc_Menge_By_GUIDDataTable
    
    Private tableproc_Volumen_By_Mengen As proc_Volumen_By_MengenDataTable
    
    Private tableproc_Menge As proc_MengeDataTable
    
    Private tableproc_Flaechen As proc_FlaechenDataTable
    
    Private tableproc_Flaeche_By_Mengen As proc_Flaeche_By_MengenDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("proc_Menge_By_Val_Einheit")) Is Nothing) Then
                MyBase.Tables.Add(New proc_Menge_By_Val_EinheitDataTable(ds.Tables("proc_Menge_By_Val_Einheit")))
            End If
            If (Not (ds.Tables("proc_Menge_By_GUID")) Is Nothing) Then
                MyBase.Tables.Add(New proc_Menge_By_GUIDDataTable(ds.Tables("proc_Menge_By_GUID")))
            End If
            If (Not (ds.Tables("proc_Volumen_By_Mengen")) Is Nothing) Then
                MyBase.Tables.Add(New proc_Volumen_By_MengenDataTable(ds.Tables("proc_Volumen_By_Mengen")))
            End If
            If (Not (ds.Tables("proc_Menge")) Is Nothing) Then
                MyBase.Tables.Add(New proc_MengeDataTable(ds.Tables("proc_Menge")))
            End If
            If (Not (ds.Tables("proc_Flaechen")) Is Nothing) Then
                MyBase.Tables.Add(New proc_FlaechenDataTable(ds.Tables("proc_Flaechen")))
            End If
            If (Not (ds.Tables("proc_Flaeche_By_Mengen")) Is Nothing) Then
                MyBase.Tables.Add(New proc_Flaeche_By_MengenDataTable(ds.Tables("proc_Flaeche_By_Mengen")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property proc_Menge_By_Val_Einheit() As proc_Menge_By_Val_EinheitDataTable
        Get
            Return Me.tableproc_Menge_By_Val_Einheit
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property proc_Menge_By_GUID() As proc_Menge_By_GUIDDataTable
        Get
            Return Me.tableproc_Menge_By_GUID
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property proc_Volumen_By_Mengen() As proc_Volumen_By_MengenDataTable
        Get
            Return Me.tableproc_Volumen_By_Mengen
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property proc_Menge() As proc_MengeDataTable
        Get
            Return Me.tableproc_Menge
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property proc_Flaechen() As proc_FlaechenDataTable
        Get
            Return Me.tableproc_Flaechen
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property proc_Flaeche_By_Mengen() As proc_Flaeche_By_MengenDataTable
        Get
            Return Me.tableproc_Flaeche_By_Mengen
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As ds_Menge = CType(MyBase.Clone,ds_Menge)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("proc_Menge_By_Val_Einheit")) Is Nothing) Then
                MyBase.Tables.Add(New proc_Menge_By_Val_EinheitDataTable(ds.Tables("proc_Menge_By_Val_Einheit")))
            End If
            If (Not (ds.Tables("proc_Menge_By_GUID")) Is Nothing) Then
                MyBase.Tables.Add(New proc_Menge_By_GUIDDataTable(ds.Tables("proc_Menge_By_GUID")))
            End If
            If (Not (ds.Tables("proc_Volumen_By_Mengen")) Is Nothing) Then
                MyBase.Tables.Add(New proc_Volumen_By_MengenDataTable(ds.Tables("proc_Volumen_By_Mengen")))
            End If
            If (Not (ds.Tables("proc_Menge")) Is Nothing) Then
                MyBase.Tables.Add(New proc_MengeDataTable(ds.Tables("proc_Menge")))
            End If
            If (Not (ds.Tables("proc_Flaechen")) Is Nothing) Then
                MyBase.Tables.Add(New proc_FlaechenDataTable(ds.Tables("proc_Flaechen")))
            End If
            If (Not (ds.Tables("proc_Flaeche_By_Mengen")) Is Nothing) Then
                MyBase.Tables.Add(New proc_Flaeche_By_MengenDataTable(ds.Tables("proc_Flaeche_By_Mengen")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableproc_Menge_By_Val_Einheit = CType(MyBase.Tables("proc_Menge_By_Val_Einheit"),proc_Menge_By_Val_EinheitDataTable)
        If (initTable = true) Then
            If (Not (Me.tableproc_Menge_By_Val_Einheit) Is Nothing) Then
                Me.tableproc_Menge_By_Val_Einheit.InitVars
            End If
        End If
        Me.tableproc_Menge_By_GUID = CType(MyBase.Tables("proc_Menge_By_GUID"),proc_Menge_By_GUIDDataTable)
        If (initTable = true) Then
            If (Not (Me.tableproc_Menge_By_GUID) Is Nothing) Then
                Me.tableproc_Menge_By_GUID.InitVars
            End If
        End If
        Me.tableproc_Volumen_By_Mengen = CType(MyBase.Tables("proc_Volumen_By_Mengen"),proc_Volumen_By_MengenDataTable)
        If (initTable = true) Then
            If (Not (Me.tableproc_Volumen_By_Mengen) Is Nothing) Then
                Me.tableproc_Volumen_By_Mengen.InitVars
            End If
        End If
        Me.tableproc_Menge = CType(MyBase.Tables("proc_Menge"),proc_MengeDataTable)
        If (initTable = true) Then
            If (Not (Me.tableproc_Menge) Is Nothing) Then
                Me.tableproc_Menge.InitVars
            End If
        End If
        Me.tableproc_Flaechen = CType(MyBase.Tables("proc_Flaechen"),proc_FlaechenDataTable)
        If (initTable = true) Then
            If (Not (Me.tableproc_Flaechen) Is Nothing) Then
                Me.tableproc_Flaechen.InitVars
            End If
        End If
        Me.tableproc_Flaeche_By_Mengen = CType(MyBase.Tables("proc_Flaeche_By_Mengen"),proc_Flaeche_By_MengenDataTable)
        If (initTable = true) Then
            If (Not (Me.tableproc_Flaeche_By_Mengen) Is Nothing) Then
                Me.tableproc_Flaeche_By_Mengen.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "ds_Menge"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/ds_Menge.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableproc_Menge_By_Val_Einheit = New proc_Menge_By_Val_EinheitDataTable()
        MyBase.Tables.Add(Me.tableproc_Menge_By_Val_Einheit)
        Me.tableproc_Menge_By_GUID = New proc_Menge_By_GUIDDataTable()
        MyBase.Tables.Add(Me.tableproc_Menge_By_GUID)
        Me.tableproc_Volumen_By_Mengen = New proc_Volumen_By_MengenDataTable()
        MyBase.Tables.Add(Me.tableproc_Volumen_By_Mengen)
        Me.tableproc_Menge = New proc_MengeDataTable()
        MyBase.Tables.Add(Me.tableproc_Menge)
        Me.tableproc_Flaechen = New proc_FlaechenDataTable()
        MyBase.Tables.Add(Me.tableproc_Flaechen)
        Me.tableproc_Flaeche_By_Mengen = New proc_Flaeche_By_MengenDataTable()
        MyBase.Tables.Add(Me.tableproc_Flaeche_By_Mengen)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeproc_Menge_By_Val_Einheit() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeproc_Menge_By_GUID() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeproc_Volumen_By_Mengen() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeproc_Menge() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeproc_Flaechen() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeproc_Flaeche_By_Mengen() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As ds_Menge = New ds_Menge()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub proc_Menge_By_Val_EinheitRowChangeEventHandler(ByVal sender As Object, ByVal e As proc_Menge_By_Val_EinheitRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub proc_Menge_By_GUIDRowChangeEventHandler(ByVal sender As Object, ByVal e As proc_Menge_By_GUIDRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub proc_Volumen_By_MengenRowChangeEventHandler(ByVal sender As Object, ByVal e As proc_Volumen_By_MengenRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub proc_MengeRowChangeEventHandler(ByVal sender As Object, ByVal e As proc_MengeRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub proc_FlaechenRowChangeEventHandler(ByVal sender As Object, ByVal e As proc_FlaechenRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub proc_Flaeche_By_MengenRowChangeEventHandler(ByVal sender As Object, ByVal e As proc_Flaeche_By_MengenRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class proc_Menge_By_Val_EinheitDataTable
        Inherits Global.System.Data.TypedTableBase(Of proc_Menge_By_Val_EinheitRow)
        
        Private columnGUID_Menge As Global.System.Data.DataColumn
        
        Private columnName_Menge As Global.System.Data.DataColumn
        
        Private columnGUID_Type_Menge As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "proc_Menge_By_Val_Einheit"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_MengeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Menge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_MengeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Menge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Type_MengeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Type_Menge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As proc_Menge_By_Val_EinheitRow
            Get
                Return CType(Me.Rows(index),proc_Menge_By_Val_EinheitRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_Menge_By_Val_EinheitRowChanging As proc_Menge_By_Val_EinheitRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_Menge_By_Val_EinheitRowChanged As proc_Menge_By_Val_EinheitRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_Menge_By_Val_EinheitRowDeleting As proc_Menge_By_Val_EinheitRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_Menge_By_Val_EinheitRowDeleted As proc_Menge_By_Val_EinheitRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addproc_Menge_By_Val_EinheitRow(ByVal row As proc_Menge_By_Val_EinheitRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addproc_Menge_By_Val_EinheitRow(ByVal GUID_Menge As System.Guid, ByVal Name_Menge As String, ByVal GUID_Type_Menge As System.Guid) As proc_Menge_By_Val_EinheitRow
            Dim rowproc_Menge_By_Val_EinheitRow As proc_Menge_By_Val_EinheitRow = CType(Me.NewRow,proc_Menge_By_Val_EinheitRow)
            Dim columnValuesArray() As Object = New Object() {GUID_Menge, Name_Menge, GUID_Type_Menge}
            rowproc_Menge_By_Val_EinheitRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowproc_Menge_By_Val_EinheitRow)
            Return rowproc_Menge_By_Val_EinheitRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As proc_Menge_By_Val_EinheitDataTable = CType(MyBase.Clone,proc_Menge_By_Val_EinheitDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New proc_Menge_By_Val_EinheitDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnGUID_Menge = MyBase.Columns("GUID_Menge")
            Me.columnName_Menge = MyBase.Columns("Name_Menge")
            Me.columnGUID_Type_Menge = MyBase.Columns("GUID_Type_Menge")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnGUID_Menge = New Global.System.Data.DataColumn("GUID_Menge", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Menge)
            Me.columnName_Menge = New Global.System.Data.DataColumn("Name_Menge", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Menge)
            Me.columnGUID_Type_Menge = New Global.System.Data.DataColumn("GUID_Type_Menge", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Type_Menge)
            Me.columnGUID_Menge.AllowDBNull = false
            Me.columnName_Menge.AllowDBNull = false
            Me.columnName_Menge.MaxLength = 255
            Me.columnGUID_Type_Menge.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newproc_Menge_By_Val_EinheitRow() As proc_Menge_By_Val_EinheitRow
            Return CType(Me.NewRow,proc_Menge_By_Val_EinheitRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New proc_Menge_By_Val_EinheitRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(proc_Menge_By_Val_EinheitRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.proc_Menge_By_Val_EinheitRowChangedEvent) Is Nothing) Then
                RaiseEvent proc_Menge_By_Val_EinheitRowChanged(Me, New proc_Menge_By_Val_EinheitRowChangeEvent(CType(e.Row,proc_Menge_By_Val_EinheitRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.proc_Menge_By_Val_EinheitRowChangingEvent) Is Nothing) Then
                RaiseEvent proc_Menge_By_Val_EinheitRowChanging(Me, New proc_Menge_By_Val_EinheitRowChangeEvent(CType(e.Row,proc_Menge_By_Val_EinheitRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.proc_Menge_By_Val_EinheitRowDeletedEvent) Is Nothing) Then
                RaiseEvent proc_Menge_By_Val_EinheitRowDeleted(Me, New proc_Menge_By_Val_EinheitRowChangeEvent(CType(e.Row,proc_Menge_By_Val_EinheitRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.proc_Menge_By_Val_EinheitRowDeletingEvent) Is Nothing) Then
                RaiseEvent proc_Menge_By_Val_EinheitRowDeleting(Me, New proc_Menge_By_Val_EinheitRowChangeEvent(CType(e.Row,proc_Menge_By_Val_EinheitRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removeproc_Menge_By_Val_EinheitRow(ByVal row As proc_Menge_By_Val_EinheitRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ds_Menge = New ds_Menge()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "proc_Menge_By_Val_EinheitDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class proc_Menge_By_GUIDDataTable
        Inherits Global.System.Data.TypedTableBase(Of proc_Menge_By_GUIDRow)
        
        Private columnGUID_Menge As Global.System.Data.DataColumn
        
        Private columnName_Menge As Global.System.Data.DataColumn
        
        Private columnGUID_Type_Menge As Global.System.Data.DataColumn
        
        Private columnGUID_Einheit As Global.System.Data.DataColumn
        
        Private columnName_Einheit As Global.System.Data.DataColumn
        
        Private columnGUID_Type_Einheit As Global.System.Data.DataColumn
        
        Private columnGUID_TokenAttribute_Menge As Global.System.Data.DataColumn
        
        Private columnMenge As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "proc_Menge_By_GUID"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_MengeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Menge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_MengeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Menge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Type_MengeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Type_Menge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_EinheitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Einheit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_EinheitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Einheit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Type_EinheitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Type_Einheit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_TokenAttribute_MengeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_TokenAttribute_Menge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MengeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMenge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As proc_Menge_By_GUIDRow
            Get
                Return CType(Me.Rows(index),proc_Menge_By_GUIDRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_Menge_By_GUIDRowChanging As proc_Menge_By_GUIDRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_Menge_By_GUIDRowChanged As proc_Menge_By_GUIDRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_Menge_By_GUIDRowDeleting As proc_Menge_By_GUIDRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_Menge_By_GUIDRowDeleted As proc_Menge_By_GUIDRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addproc_Menge_By_GUIDRow(ByVal row As proc_Menge_By_GUIDRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addproc_Menge_By_GUIDRow(ByVal GUID_Menge As System.Guid, ByVal Name_Menge As String, ByVal GUID_Type_Menge As System.Guid, ByVal GUID_Einheit As System.Guid, ByVal Name_Einheit As String, ByVal GUID_Type_Einheit As System.Guid, ByVal GUID_TokenAttribute_Menge As System.Guid, ByVal Menge As Single) As proc_Menge_By_GUIDRow
            Dim rowproc_Menge_By_GUIDRow As proc_Menge_By_GUIDRow = CType(Me.NewRow,proc_Menge_By_GUIDRow)
            Dim columnValuesArray() As Object = New Object() {GUID_Menge, Name_Menge, GUID_Type_Menge, GUID_Einheit, Name_Einheit, GUID_Type_Einheit, GUID_TokenAttribute_Menge, Menge}
            rowproc_Menge_By_GUIDRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowproc_Menge_By_GUIDRow)
            Return rowproc_Menge_By_GUIDRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As proc_Menge_By_GUIDDataTable = CType(MyBase.Clone,proc_Menge_By_GUIDDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New proc_Menge_By_GUIDDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnGUID_Menge = MyBase.Columns("GUID_Menge")
            Me.columnName_Menge = MyBase.Columns("Name_Menge")
            Me.columnGUID_Type_Menge = MyBase.Columns("GUID_Type_Menge")
            Me.columnGUID_Einheit = MyBase.Columns("GUID_Einheit")
            Me.columnName_Einheit = MyBase.Columns("Name_Einheit")
            Me.columnGUID_Type_Einheit = MyBase.Columns("GUID_Type_Einheit")
            Me.columnGUID_TokenAttribute_Menge = MyBase.Columns("GUID_TokenAttribute_Menge")
            Me.columnMenge = MyBase.Columns("Menge")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnGUID_Menge = New Global.System.Data.DataColumn("GUID_Menge", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Menge)
            Me.columnName_Menge = New Global.System.Data.DataColumn("Name_Menge", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Menge)
            Me.columnGUID_Type_Menge = New Global.System.Data.DataColumn("GUID_Type_Menge", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Type_Menge)
            Me.columnGUID_Einheit = New Global.System.Data.DataColumn("GUID_Einheit", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Einheit)
            Me.columnName_Einheit = New Global.System.Data.DataColumn("Name_Einheit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Einheit)
            Me.columnGUID_Type_Einheit = New Global.System.Data.DataColumn("GUID_Type_Einheit", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Type_Einheit)
            Me.columnGUID_TokenAttribute_Menge = New Global.System.Data.DataColumn("GUID_TokenAttribute_Menge", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_TokenAttribute_Menge)
            Me.columnMenge = New Global.System.Data.DataColumn("Menge", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMenge)
            Me.columnGUID_Menge.AllowDBNull = false
            Me.columnName_Menge.AllowDBNull = false
            Me.columnName_Menge.MaxLength = 255
            Me.columnGUID_Type_Menge.AllowDBNull = false
            Me.columnGUID_Einheit.AllowDBNull = false
            Me.columnName_Einheit.AllowDBNull = false
            Me.columnName_Einheit.MaxLength = 255
            Me.columnGUID_Type_Einheit.AllowDBNull = false
            Me.columnGUID_TokenAttribute_Menge.AllowDBNull = false
            Me.columnMenge.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newproc_Menge_By_GUIDRow() As proc_Menge_By_GUIDRow
            Return CType(Me.NewRow,proc_Menge_By_GUIDRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New proc_Menge_By_GUIDRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(proc_Menge_By_GUIDRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.proc_Menge_By_GUIDRowChangedEvent) Is Nothing) Then
                RaiseEvent proc_Menge_By_GUIDRowChanged(Me, New proc_Menge_By_GUIDRowChangeEvent(CType(e.Row,proc_Menge_By_GUIDRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.proc_Menge_By_GUIDRowChangingEvent) Is Nothing) Then
                RaiseEvent proc_Menge_By_GUIDRowChanging(Me, New proc_Menge_By_GUIDRowChangeEvent(CType(e.Row,proc_Menge_By_GUIDRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.proc_Menge_By_GUIDRowDeletedEvent) Is Nothing) Then
                RaiseEvent proc_Menge_By_GUIDRowDeleted(Me, New proc_Menge_By_GUIDRowChangeEvent(CType(e.Row,proc_Menge_By_GUIDRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.proc_Menge_By_GUIDRowDeletingEvent) Is Nothing) Then
                RaiseEvent proc_Menge_By_GUIDRowDeleting(Me, New proc_Menge_By_GUIDRowChangeEvent(CType(e.Row,proc_Menge_By_GUIDRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removeproc_Menge_By_GUIDRow(ByVal row As proc_Menge_By_GUIDRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ds_Menge = New ds_Menge()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "proc_Menge_By_GUIDDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class proc_Volumen_By_MengenDataTable
        Inherits Global.System.Data.TypedTableBase(Of proc_Volumen_By_MengenRow)
        
        Private columnGUID_Menge_X As Global.System.Data.DataColumn
        
        Private columnName_Menge_X As Global.System.Data.DataColumn
        
        Private columnGUID_Type_Menge_X As Global.System.Data.DataColumn
        
        Private columnGUID_Einheit_X As Global.System.Data.DataColumn
        
        Private columnName_Einheit_X As Global.System.Data.DataColumn
        
        Private columnGUID_Type_Einheit_X As Global.System.Data.DataColumn
        
        Private columnGUID_TokenAttribute_Menge_X As Global.System.Data.DataColumn
        
        Private columnMenge_X As Global.System.Data.DataColumn
        
        Private columnGUID_Menge_Y As Global.System.Data.DataColumn
        
        Private columnName_Menge_Y As Global.System.Data.DataColumn
        
        Private columnGUID_Type_Menge_Y As Global.System.Data.DataColumn
        
        Private columnGUID_Einheit_Y As Global.System.Data.DataColumn
        
        Private columnName_Einheit_Y As Global.System.Data.DataColumn
        
        Private columnGUID_Type_Einheit_Y As Global.System.Data.DataColumn
        
        Private columnGUID_TokenAttribute_Menge_Y As Global.System.Data.DataColumn
        
        Private columnMenge_Y As Global.System.Data.DataColumn
        
        Private columnGUID_Menge_Z As Global.System.Data.DataColumn
        
        Private columnName_Menge_Z As Global.System.Data.DataColumn
        
        Private columnGUID_Type_Menge_Z As Global.System.Data.DataColumn
        
        Private columnGUID_Einheit_Z As Global.System.Data.DataColumn
        
        Private columnName_Einheit_Z As Global.System.Data.DataColumn
        
        Private columnGUID_Type_Einheit_Z As Global.System.Data.DataColumn
        
        Private columnGUID_TokenAttribute_Menge_Z As Global.System.Data.DataColumn
        
        Private columnMenge_Z As Global.System.Data.DataColumn
        
        Private columnGUID_Volumen As Global.System.Data.DataColumn
        
        Private columnName_Volumen As Global.System.Data.DataColumn
        
        Private columnGUID_Type_Volumen As Global.System.Data.DataColumn
        
        Private columnVolumen As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "proc_Volumen_By_Mengen"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Menge_XColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Menge_X
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_Menge_XColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Menge_X
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Type_Menge_XColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Type_Menge_X
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Einheit_XColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Einheit_X
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_Einheit_XColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Einheit_X
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Type_Einheit_XColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Type_Einheit_X
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_TokenAttribute_Menge_XColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_TokenAttribute_Menge_X
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Menge_XColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMenge_X
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Menge_YColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Menge_Y
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_Menge_YColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Menge_Y
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Type_Menge_YColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Type_Menge_Y
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Einheit_YColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Einheit_Y
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_Einheit_YColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Einheit_Y
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Type_Einheit_YColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Type_Einheit_Y
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_TokenAttribute_Menge_YColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_TokenAttribute_Menge_Y
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Menge_YColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMenge_Y
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Menge_ZColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Menge_Z
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_Menge_ZColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Menge_Z
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Type_Menge_ZColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Type_Menge_Z
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Einheit_ZColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Einheit_Z
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_Einheit_ZColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Einheit_Z
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Type_Einheit_ZColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Type_Einheit_Z
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_TokenAttribute_Menge_ZColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_TokenAttribute_Menge_Z
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Menge_ZColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMenge_Z
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_VolumenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Volumen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_VolumenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Volumen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Type_VolumenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Type_Volumen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VolumenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVolumen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As proc_Volumen_By_MengenRow
            Get
                Return CType(Me.Rows(index),proc_Volumen_By_MengenRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_Volumen_By_MengenRowChanging As proc_Volumen_By_MengenRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_Volumen_By_MengenRowChanged As proc_Volumen_By_MengenRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_Volumen_By_MengenRowDeleting As proc_Volumen_By_MengenRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_Volumen_By_MengenRowDeleted As proc_Volumen_By_MengenRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addproc_Volumen_By_MengenRow(ByVal row As proc_Volumen_By_MengenRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addproc_Volumen_By_MengenRow( _
                    ByVal GUID_Menge_X As System.Guid,  _
                    ByVal Name_Menge_X As String,  _
                    ByVal GUID_Type_Menge_X As System.Guid,  _
                    ByVal GUID_Einheit_X As System.Guid,  _
                    ByVal Name_Einheit_X As String,  _
                    ByVal GUID_Type_Einheit_X As System.Guid,  _
                    ByVal GUID_TokenAttribute_Menge_X As System.Guid,  _
                    ByVal Menge_X As Single,  _
                    ByVal GUID_Menge_Y As System.Guid,  _
                    ByVal Name_Menge_Y As String,  _
                    ByVal GUID_Type_Menge_Y As System.Guid,  _
                    ByVal GUID_Einheit_Y As System.Guid,  _
                    ByVal Name_Einheit_Y As String,  _
                    ByVal GUID_Type_Einheit_Y As System.Guid,  _
                    ByVal GUID_TokenAttribute_Menge_Y As System.Guid,  _
                    ByVal Menge_Y As Single,  _
                    ByVal GUID_Menge_Z As System.Guid,  _
                    ByVal Name_Menge_Z As String,  _
                    ByVal GUID_Type_Menge_Z As System.Guid,  _
                    ByVal GUID_Einheit_Z As System.Guid,  _
                    ByVal Name_Einheit_Z As String,  _
                    ByVal GUID_Type_Einheit_Z As System.Guid,  _
                    ByVal GUID_TokenAttribute_Menge_Z As System.Guid,  _
                    ByVal Menge_Z As Single,  _
                    ByVal GUID_Volumen As System.Guid,  _
                    ByVal Name_Volumen As String,  _
                    ByVal GUID_Type_Volumen As System.Guid,  _
                    ByVal Volumen As Single) As proc_Volumen_By_MengenRow
            Dim rowproc_Volumen_By_MengenRow As proc_Volumen_By_MengenRow = CType(Me.NewRow,proc_Volumen_By_MengenRow)
            Dim columnValuesArray() As Object = New Object() {GUID_Menge_X, Name_Menge_X, GUID_Type_Menge_X, GUID_Einheit_X, Name_Einheit_X, GUID_Type_Einheit_X, GUID_TokenAttribute_Menge_X, Menge_X, GUID_Menge_Y, Name_Menge_Y, GUID_Type_Menge_Y, GUID_Einheit_Y, Name_Einheit_Y, GUID_Type_Einheit_Y, GUID_TokenAttribute_Menge_Y, Menge_Y, GUID_Menge_Z, Name_Menge_Z, GUID_Type_Menge_Z, GUID_Einheit_Z, Name_Einheit_Z, GUID_Type_Einheit_Z, GUID_TokenAttribute_Menge_Z, Menge_Z, GUID_Volumen, Name_Volumen, GUID_Type_Volumen, Volumen}
            rowproc_Volumen_By_MengenRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowproc_Volumen_By_MengenRow)
            Return rowproc_Volumen_By_MengenRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As proc_Volumen_By_MengenDataTable = CType(MyBase.Clone,proc_Volumen_By_MengenDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New proc_Volumen_By_MengenDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnGUID_Menge_X = MyBase.Columns("GUID_Menge_X")
            Me.columnName_Menge_X = MyBase.Columns("Name_Menge_X")
            Me.columnGUID_Type_Menge_X = MyBase.Columns("GUID_Type_Menge_X")
            Me.columnGUID_Einheit_X = MyBase.Columns("GUID_Einheit_X")
            Me.columnName_Einheit_X = MyBase.Columns("Name_Einheit_X")
            Me.columnGUID_Type_Einheit_X = MyBase.Columns("GUID_Type_Einheit_X")
            Me.columnGUID_TokenAttribute_Menge_X = MyBase.Columns("GUID_TokenAttribute_Menge_X")
            Me.columnMenge_X = MyBase.Columns("Menge_X")
            Me.columnGUID_Menge_Y = MyBase.Columns("GUID_Menge_Y")
            Me.columnName_Menge_Y = MyBase.Columns("Name_Menge_Y")
            Me.columnGUID_Type_Menge_Y = MyBase.Columns("GUID_Type_Menge_Y")
            Me.columnGUID_Einheit_Y = MyBase.Columns("GUID_Einheit_Y")
            Me.columnName_Einheit_Y = MyBase.Columns("Name_Einheit_Y")
            Me.columnGUID_Type_Einheit_Y = MyBase.Columns("GUID_Type_Einheit_Y")
            Me.columnGUID_TokenAttribute_Menge_Y = MyBase.Columns("GUID_TokenAttribute_Menge_Y")
            Me.columnMenge_Y = MyBase.Columns("Menge_Y")
            Me.columnGUID_Menge_Z = MyBase.Columns("GUID_Menge_Z")
            Me.columnName_Menge_Z = MyBase.Columns("Name_Menge_Z")
            Me.columnGUID_Type_Menge_Z = MyBase.Columns("GUID_Type_Menge_Z")
            Me.columnGUID_Einheit_Z = MyBase.Columns("GUID_Einheit_Z")
            Me.columnName_Einheit_Z = MyBase.Columns("Name_Einheit_Z")
            Me.columnGUID_Type_Einheit_Z = MyBase.Columns("GUID_Type_Einheit_Z")
            Me.columnGUID_TokenAttribute_Menge_Z = MyBase.Columns("GUID_TokenAttribute_Menge_Z")
            Me.columnMenge_Z = MyBase.Columns("Menge_Z")
            Me.columnGUID_Volumen = MyBase.Columns("GUID_Volumen")
            Me.columnName_Volumen = MyBase.Columns("Name_Volumen")
            Me.columnGUID_Type_Volumen = MyBase.Columns("GUID_Type_Volumen")
            Me.columnVolumen = MyBase.Columns("Volumen")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnGUID_Menge_X = New Global.System.Data.DataColumn("GUID_Menge_X", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Menge_X)
            Me.columnName_Menge_X = New Global.System.Data.DataColumn("Name_Menge_X", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Menge_X)
            Me.columnGUID_Type_Menge_X = New Global.System.Data.DataColumn("GUID_Type_Menge_X", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Type_Menge_X)
            Me.columnGUID_Einheit_X = New Global.System.Data.DataColumn("GUID_Einheit_X", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Einheit_X)
            Me.columnName_Einheit_X = New Global.System.Data.DataColumn("Name_Einheit_X", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Einheit_X)
            Me.columnGUID_Type_Einheit_X = New Global.System.Data.DataColumn("GUID_Type_Einheit_X", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Type_Einheit_X)
            Me.columnGUID_TokenAttribute_Menge_X = New Global.System.Data.DataColumn("GUID_TokenAttribute_Menge_X", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_TokenAttribute_Menge_X)
            Me.columnMenge_X = New Global.System.Data.DataColumn("Menge_X", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMenge_X)
            Me.columnGUID_Menge_Y = New Global.System.Data.DataColumn("GUID_Menge_Y", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Menge_Y)
            Me.columnName_Menge_Y = New Global.System.Data.DataColumn("Name_Menge_Y", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Menge_Y)
            Me.columnGUID_Type_Menge_Y = New Global.System.Data.DataColumn("GUID_Type_Menge_Y", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Type_Menge_Y)
            Me.columnGUID_Einheit_Y = New Global.System.Data.DataColumn("GUID_Einheit_Y", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Einheit_Y)
            Me.columnName_Einheit_Y = New Global.System.Data.DataColumn("Name_Einheit_Y", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Einheit_Y)
            Me.columnGUID_Type_Einheit_Y = New Global.System.Data.DataColumn("GUID_Type_Einheit_Y", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Type_Einheit_Y)
            Me.columnGUID_TokenAttribute_Menge_Y = New Global.System.Data.DataColumn("GUID_TokenAttribute_Menge_Y", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_TokenAttribute_Menge_Y)
            Me.columnMenge_Y = New Global.System.Data.DataColumn("Menge_Y", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMenge_Y)
            Me.columnGUID_Menge_Z = New Global.System.Data.DataColumn("GUID_Menge_Z", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Menge_Z)
            Me.columnName_Menge_Z = New Global.System.Data.DataColumn("Name_Menge_Z", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Menge_Z)
            Me.columnGUID_Type_Menge_Z = New Global.System.Data.DataColumn("GUID_Type_Menge_Z", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Type_Menge_Z)
            Me.columnGUID_Einheit_Z = New Global.System.Data.DataColumn("GUID_Einheit_Z", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Einheit_Z)
            Me.columnName_Einheit_Z = New Global.System.Data.DataColumn("Name_Einheit_Z", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Einheit_Z)
            Me.columnGUID_Type_Einheit_Z = New Global.System.Data.DataColumn("GUID_Type_Einheit_Z", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Type_Einheit_Z)
            Me.columnGUID_TokenAttribute_Menge_Z = New Global.System.Data.DataColumn("GUID_TokenAttribute_Menge_Z", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_TokenAttribute_Menge_Z)
            Me.columnMenge_Z = New Global.System.Data.DataColumn("Menge_Z", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMenge_Z)
            Me.columnGUID_Volumen = New Global.System.Data.DataColumn("GUID_Volumen", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Volumen)
            Me.columnName_Volumen = New Global.System.Data.DataColumn("Name_Volumen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Volumen)
            Me.columnGUID_Type_Volumen = New Global.System.Data.DataColumn("GUID_Type_Volumen", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Type_Volumen)
            Me.columnVolumen = New Global.System.Data.DataColumn("Volumen", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVolumen)
            Me.columnGUID_Menge_X.AllowDBNull = false
            Me.columnName_Menge_X.AllowDBNull = false
            Me.columnName_Menge_X.MaxLength = 255
            Me.columnGUID_Type_Menge_X.AllowDBNull = false
            Me.columnGUID_Einheit_X.AllowDBNull = false
            Me.columnName_Einheit_X.AllowDBNull = false
            Me.columnName_Einheit_X.MaxLength = 255
            Me.columnGUID_Type_Einheit_X.AllowDBNull = false
            Me.columnGUID_TokenAttribute_Menge_X.AllowDBNull = false
            Me.columnMenge_X.AllowDBNull = false
            Me.columnGUID_Menge_Y.AllowDBNull = false
            Me.columnName_Menge_Y.AllowDBNull = false
            Me.columnName_Menge_Y.MaxLength = 255
            Me.columnGUID_Type_Menge_Y.AllowDBNull = false
            Me.columnGUID_Einheit_Y.AllowDBNull = false
            Me.columnName_Einheit_Y.AllowDBNull = false
            Me.columnName_Einheit_Y.MaxLength = 255
            Me.columnGUID_Type_Einheit_Y.AllowDBNull = false
            Me.columnGUID_TokenAttribute_Menge_Y.AllowDBNull = false
            Me.columnMenge_Y.AllowDBNull = false
            Me.columnGUID_Menge_Z.AllowDBNull = false
            Me.columnName_Menge_Z.AllowDBNull = false
            Me.columnName_Menge_Z.MaxLength = 255
            Me.columnGUID_Type_Menge_Z.AllowDBNull = false
            Me.columnGUID_Einheit_Z.AllowDBNull = false
            Me.columnName_Einheit_Z.AllowDBNull = false
            Me.columnName_Einheit_Z.MaxLength = 255
            Me.columnGUID_Type_Einheit_Z.AllowDBNull = false
            Me.columnGUID_TokenAttribute_Menge_Z.AllowDBNull = false
            Me.columnMenge_Z.AllowDBNull = false
            Me.columnGUID_Volumen.AllowDBNull = false
            Me.columnName_Volumen.AllowDBNull = false
            Me.columnName_Volumen.MaxLength = 255
            Me.columnGUID_Type_Volumen.AllowDBNull = false
            Me.columnVolumen.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newproc_Volumen_By_MengenRow() As proc_Volumen_By_MengenRow
            Return CType(Me.NewRow,proc_Volumen_By_MengenRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New proc_Volumen_By_MengenRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(proc_Volumen_By_MengenRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.proc_Volumen_By_MengenRowChangedEvent) Is Nothing) Then
                RaiseEvent proc_Volumen_By_MengenRowChanged(Me, New proc_Volumen_By_MengenRowChangeEvent(CType(e.Row,proc_Volumen_By_MengenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.proc_Volumen_By_MengenRowChangingEvent) Is Nothing) Then
                RaiseEvent proc_Volumen_By_MengenRowChanging(Me, New proc_Volumen_By_MengenRowChangeEvent(CType(e.Row,proc_Volumen_By_MengenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.proc_Volumen_By_MengenRowDeletedEvent) Is Nothing) Then
                RaiseEvent proc_Volumen_By_MengenRowDeleted(Me, New proc_Volumen_By_MengenRowChangeEvent(CType(e.Row,proc_Volumen_By_MengenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.proc_Volumen_By_MengenRowDeletingEvent) Is Nothing) Then
                RaiseEvent proc_Volumen_By_MengenRowDeleting(Me, New proc_Volumen_By_MengenRowChangeEvent(CType(e.Row,proc_Volumen_By_MengenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removeproc_Volumen_By_MengenRow(ByVal row As proc_Volumen_By_MengenRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ds_Menge = New ds_Menge()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "proc_Volumen_By_MengenDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class proc_MengeDataTable
        Inherits Global.System.Data.TypedTableBase(Of proc_MengeRow)
        
        Private columnGUID_Menge As Global.System.Data.DataColumn
        
        Private columnName_Menge As Global.System.Data.DataColumn
        
        Private columnGUID_Type_Menge As Global.System.Data.DataColumn
        
        Private columnGUID_Einheit As Global.System.Data.DataColumn
        
        Private columnName_Einheit As Global.System.Data.DataColumn
        
        Private columnGUID_Type_Einheit As Global.System.Data.DataColumn
        
        Private columnGUID_TokenAttribute_Menge As Global.System.Data.DataColumn
        
        Private columnMenge As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "proc_Menge"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_MengeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Menge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_MengeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Menge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Type_MengeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Type_Menge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_EinheitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Einheit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_EinheitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Einheit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Type_EinheitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Type_Einheit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_TokenAttribute_MengeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_TokenAttribute_Menge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MengeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMenge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As proc_MengeRow
            Get
                Return CType(Me.Rows(index),proc_MengeRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_MengeRowChanging As proc_MengeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_MengeRowChanged As proc_MengeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_MengeRowDeleting As proc_MengeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_MengeRowDeleted As proc_MengeRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addproc_MengeRow(ByVal row As proc_MengeRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addproc_MengeRow(ByVal GUID_Menge As System.Guid, ByVal Name_Menge As String, ByVal GUID_Type_Menge As System.Guid, ByVal GUID_Einheit As System.Guid, ByVal Name_Einheit As String, ByVal GUID_Type_Einheit As System.Guid, ByVal GUID_TokenAttribute_Menge As System.Guid, ByVal Menge As Single) As proc_MengeRow
            Dim rowproc_MengeRow As proc_MengeRow = CType(Me.NewRow,proc_MengeRow)
            Dim columnValuesArray() As Object = New Object() {GUID_Menge, Name_Menge, GUID_Type_Menge, GUID_Einheit, Name_Einheit, GUID_Type_Einheit, GUID_TokenAttribute_Menge, Menge}
            rowproc_MengeRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowproc_MengeRow)
            Return rowproc_MengeRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As proc_MengeDataTable = CType(MyBase.Clone,proc_MengeDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New proc_MengeDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnGUID_Menge = MyBase.Columns("GUID_Menge")
            Me.columnName_Menge = MyBase.Columns("Name_Menge")
            Me.columnGUID_Type_Menge = MyBase.Columns("GUID_Type_Menge")
            Me.columnGUID_Einheit = MyBase.Columns("GUID_Einheit")
            Me.columnName_Einheit = MyBase.Columns("Name_Einheit")
            Me.columnGUID_Type_Einheit = MyBase.Columns("GUID_Type_Einheit")
            Me.columnGUID_TokenAttribute_Menge = MyBase.Columns("GUID_TokenAttribute_Menge")
            Me.columnMenge = MyBase.Columns("Menge")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnGUID_Menge = New Global.System.Data.DataColumn("GUID_Menge", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Menge)
            Me.columnName_Menge = New Global.System.Data.DataColumn("Name_Menge", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Menge)
            Me.columnGUID_Type_Menge = New Global.System.Data.DataColumn("GUID_Type_Menge", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Type_Menge)
            Me.columnGUID_Einheit = New Global.System.Data.DataColumn("GUID_Einheit", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Einheit)
            Me.columnName_Einheit = New Global.System.Data.DataColumn("Name_Einheit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Einheit)
            Me.columnGUID_Type_Einheit = New Global.System.Data.DataColumn("GUID_Type_Einheit", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Type_Einheit)
            Me.columnGUID_TokenAttribute_Menge = New Global.System.Data.DataColumn("GUID_TokenAttribute_Menge", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_TokenAttribute_Menge)
            Me.columnMenge = New Global.System.Data.DataColumn("Menge", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMenge)
            Me.columnName_Menge.MaxLength = 255
            Me.columnName_Einheit.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newproc_MengeRow() As proc_MengeRow
            Return CType(Me.NewRow,proc_MengeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New proc_MengeRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(proc_MengeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.proc_MengeRowChangedEvent) Is Nothing) Then
                RaiseEvent proc_MengeRowChanged(Me, New proc_MengeRowChangeEvent(CType(e.Row,proc_MengeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.proc_MengeRowChangingEvent) Is Nothing) Then
                RaiseEvent proc_MengeRowChanging(Me, New proc_MengeRowChangeEvent(CType(e.Row,proc_MengeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.proc_MengeRowDeletedEvent) Is Nothing) Then
                RaiseEvent proc_MengeRowDeleted(Me, New proc_MengeRowChangeEvent(CType(e.Row,proc_MengeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.proc_MengeRowDeletingEvent) Is Nothing) Then
                RaiseEvent proc_MengeRowDeleting(Me, New proc_MengeRowChangeEvent(CType(e.Row,proc_MengeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removeproc_MengeRow(ByVal row As proc_MengeRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ds_Menge = New ds_Menge()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "proc_MengeDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class proc_FlaechenDataTable
        Inherits Global.System.Data.TypedTableBase(Of proc_FlaechenRow)
        
        Private columnGUID_Menge_X As Global.System.Data.DataColumn
        
        Private columnName_Menge_X As Global.System.Data.DataColumn
        
        Private columnGUID_Type_Menge_X As Global.System.Data.DataColumn
        
        Private columnGUID_einheit_X As Global.System.Data.DataColumn
        
        Private columnName_Einheit_X As Global.System.Data.DataColumn
        
        Private columnGUID_Type_Einhiet_X As Global.System.Data.DataColumn
        
        Private columnGUID_TokenAttribute_Menge_X As Global.System.Data.DataColumn
        
        Private columnMenge_X As Global.System.Data.DataColumn
        
        Private columnGUID_Menge_Y As Global.System.Data.DataColumn
        
        Private columnName_Menge_Y As Global.System.Data.DataColumn
        
        Private columnGUID_Type_Menge_Y As Global.System.Data.DataColumn
        
        Private columnGUID_einheit_Y As Global.System.Data.DataColumn
        
        Private columnName_Einheit_Y As Global.System.Data.DataColumn
        
        Private columnGUID_Type_Einheit_Y As Global.System.Data.DataColumn
        
        Private columnGUID_TokenAttribute_Menge_Y As Global.System.Data.DataColumn
        
        Private columnMenge_Y As Global.System.Data.DataColumn
        
        Private columnGUID_Flaeche As Global.System.Data.DataColumn
        
        Private columnName_Flaeche As Global.System.Data.DataColumn
        
        Private columnGUID_Type_Flaeche As Global.System.Data.DataColumn
        
        Private columnFlaeche As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "proc_Flaechen"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Menge_XColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Menge_X
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_Menge_XColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Menge_X
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Type_Menge_XColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Type_Menge_X
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_einheit_XColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_einheit_X
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_Einheit_XColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Einheit_X
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Type_Einhiet_XColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Type_Einhiet_X
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_TokenAttribute_Menge_XColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_TokenAttribute_Menge_X
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Menge_XColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMenge_X
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Menge_YColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Menge_Y
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_Menge_YColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Menge_Y
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Type_Menge_YColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Type_Menge_Y
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_einheit_YColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_einheit_Y
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_Einheit_YColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Einheit_Y
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Type_Einheit_YColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Type_Einheit_Y
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_TokenAttribute_Menge_YColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_TokenAttribute_Menge_Y
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Menge_YColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMenge_Y
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_FlaecheColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Flaeche
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_FlaecheColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Flaeche
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Type_FlaecheColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Type_Flaeche
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FlaecheColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFlaeche
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As proc_FlaechenRow
            Get
                Return CType(Me.Rows(index),proc_FlaechenRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_FlaechenRowChanging As proc_FlaechenRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_FlaechenRowChanged As proc_FlaechenRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_FlaechenRowDeleting As proc_FlaechenRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_FlaechenRowDeleted As proc_FlaechenRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addproc_FlaechenRow(ByVal row As proc_FlaechenRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addproc_FlaechenRow( _
                    ByVal GUID_Menge_X As System.Guid,  _
                    ByVal Name_Menge_X As String,  _
                    ByVal GUID_Type_Menge_X As System.Guid,  _
                    ByVal GUID_einheit_X As System.Guid,  _
                    ByVal Name_Einheit_X As String,  _
                    ByVal GUID_Type_Einhiet_X As System.Guid,  _
                    ByVal GUID_TokenAttribute_Menge_X As System.Guid,  _
                    ByVal Menge_X As Single,  _
                    ByVal GUID_Menge_Y As System.Guid,  _
                    ByVal Name_Menge_Y As String,  _
                    ByVal GUID_Type_Menge_Y As System.Guid,  _
                    ByVal GUID_einheit_Y As System.Guid,  _
                    ByVal Name_Einheit_Y As String,  _
                    ByVal GUID_Type_Einheit_Y As System.Guid,  _
                    ByVal GUID_TokenAttribute_Menge_Y As System.Guid,  _
                    ByVal Menge_Y As Single,  _
                    ByVal GUID_Flaeche As System.Guid,  _
                    ByVal Name_Flaeche As String,  _
                    ByVal GUID_Type_Flaeche As System.Guid,  _
                    ByVal Flaeche As Single) As proc_FlaechenRow
            Dim rowproc_FlaechenRow As proc_FlaechenRow = CType(Me.NewRow,proc_FlaechenRow)
            Dim columnValuesArray() As Object = New Object() {GUID_Menge_X, Name_Menge_X, GUID_Type_Menge_X, GUID_einheit_X, Name_Einheit_X, GUID_Type_Einhiet_X, GUID_TokenAttribute_Menge_X, Menge_X, GUID_Menge_Y, Name_Menge_Y, GUID_Type_Menge_Y, GUID_einheit_Y, Name_Einheit_Y, GUID_Type_Einheit_Y, GUID_TokenAttribute_Menge_Y, Menge_Y, GUID_Flaeche, Name_Flaeche, GUID_Type_Flaeche, Flaeche}
            rowproc_FlaechenRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowproc_FlaechenRow)
            Return rowproc_FlaechenRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As proc_FlaechenDataTable = CType(MyBase.Clone,proc_FlaechenDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New proc_FlaechenDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnGUID_Menge_X = MyBase.Columns("GUID_Menge_X")
            Me.columnName_Menge_X = MyBase.Columns("Name_Menge_X")
            Me.columnGUID_Type_Menge_X = MyBase.Columns("GUID_Type_Menge_X")
            Me.columnGUID_einheit_X = MyBase.Columns("GUID_einheit_X")
            Me.columnName_Einheit_X = MyBase.Columns("Name_Einheit_X")
            Me.columnGUID_Type_Einhiet_X = MyBase.Columns("GUID_Type_Einhiet_X")
            Me.columnGUID_TokenAttribute_Menge_X = MyBase.Columns("GUID_TokenAttribute_Menge_X")
            Me.columnMenge_X = MyBase.Columns("Menge_X")
            Me.columnGUID_Menge_Y = MyBase.Columns("GUID_Menge_Y")
            Me.columnName_Menge_Y = MyBase.Columns("Name_Menge_Y")
            Me.columnGUID_Type_Menge_Y = MyBase.Columns("GUID_Type_Menge_Y")
            Me.columnGUID_einheit_Y = MyBase.Columns("GUID_einheit_Y")
            Me.columnName_Einheit_Y = MyBase.Columns("Name_Einheit_Y")
            Me.columnGUID_Type_Einheit_Y = MyBase.Columns("GUID_Type_Einheit_Y")
            Me.columnGUID_TokenAttribute_Menge_Y = MyBase.Columns("GUID_TokenAttribute_Menge_Y")
            Me.columnMenge_Y = MyBase.Columns("Menge_Y")
            Me.columnGUID_Flaeche = MyBase.Columns("GUID_Flaeche")
            Me.columnName_Flaeche = MyBase.Columns("Name_Flaeche")
            Me.columnGUID_Type_Flaeche = MyBase.Columns("GUID_Type_Flaeche")
            Me.columnFlaeche = MyBase.Columns("Flaeche")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnGUID_Menge_X = New Global.System.Data.DataColumn("GUID_Menge_X", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Menge_X)
            Me.columnName_Menge_X = New Global.System.Data.DataColumn("Name_Menge_X", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Menge_X)
            Me.columnGUID_Type_Menge_X = New Global.System.Data.DataColumn("GUID_Type_Menge_X", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Type_Menge_X)
            Me.columnGUID_einheit_X = New Global.System.Data.DataColumn("GUID_einheit_X", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_einheit_X)
            Me.columnName_Einheit_X = New Global.System.Data.DataColumn("Name_Einheit_X", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Einheit_X)
            Me.columnGUID_Type_Einhiet_X = New Global.System.Data.DataColumn("GUID_Type_Einhiet_X", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Type_Einhiet_X)
            Me.columnGUID_TokenAttribute_Menge_X = New Global.System.Data.DataColumn("GUID_TokenAttribute_Menge_X", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_TokenAttribute_Menge_X)
            Me.columnMenge_X = New Global.System.Data.DataColumn("Menge_X", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMenge_X)
            Me.columnGUID_Menge_Y = New Global.System.Data.DataColumn("GUID_Menge_Y", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Menge_Y)
            Me.columnName_Menge_Y = New Global.System.Data.DataColumn("Name_Menge_Y", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Menge_Y)
            Me.columnGUID_Type_Menge_Y = New Global.System.Data.DataColumn("GUID_Type_Menge_Y", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Type_Menge_Y)
            Me.columnGUID_einheit_Y = New Global.System.Data.DataColumn("GUID_einheit_Y", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_einheit_Y)
            Me.columnName_Einheit_Y = New Global.System.Data.DataColumn("Name_Einheit_Y", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Einheit_Y)
            Me.columnGUID_Type_Einheit_Y = New Global.System.Data.DataColumn("GUID_Type_Einheit_Y", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Type_Einheit_Y)
            Me.columnGUID_TokenAttribute_Menge_Y = New Global.System.Data.DataColumn("GUID_TokenAttribute_Menge_Y", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_TokenAttribute_Menge_Y)
            Me.columnMenge_Y = New Global.System.Data.DataColumn("Menge_Y", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMenge_Y)
            Me.columnGUID_Flaeche = New Global.System.Data.DataColumn("GUID_Flaeche", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Flaeche)
            Me.columnName_Flaeche = New Global.System.Data.DataColumn("Name_Flaeche", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Flaeche)
            Me.columnGUID_Type_Flaeche = New Global.System.Data.DataColumn("GUID_Type_Flaeche", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Type_Flaeche)
            Me.columnFlaeche = New Global.System.Data.DataColumn("Flaeche", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFlaeche)
            Me.columnName_Menge_X.MaxLength = 255
            Me.columnName_Einheit_X.MaxLength = 255
            Me.columnName_Menge_Y.MaxLength = 255
            Me.columnName_Einheit_Y.MaxLength = 255
            Me.columnName_Flaeche.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newproc_FlaechenRow() As proc_FlaechenRow
            Return CType(Me.NewRow,proc_FlaechenRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New proc_FlaechenRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(proc_FlaechenRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.proc_FlaechenRowChangedEvent) Is Nothing) Then
                RaiseEvent proc_FlaechenRowChanged(Me, New proc_FlaechenRowChangeEvent(CType(e.Row,proc_FlaechenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.proc_FlaechenRowChangingEvent) Is Nothing) Then
                RaiseEvent proc_FlaechenRowChanging(Me, New proc_FlaechenRowChangeEvent(CType(e.Row,proc_FlaechenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.proc_FlaechenRowDeletedEvent) Is Nothing) Then
                RaiseEvent proc_FlaechenRowDeleted(Me, New proc_FlaechenRowChangeEvent(CType(e.Row,proc_FlaechenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.proc_FlaechenRowDeletingEvent) Is Nothing) Then
                RaiseEvent proc_FlaechenRowDeleting(Me, New proc_FlaechenRowChangeEvent(CType(e.Row,proc_FlaechenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removeproc_FlaechenRow(ByVal row As proc_FlaechenRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ds_Menge = New ds_Menge()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "proc_FlaechenDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class proc_Flaeche_By_MengenDataTable
        Inherits Global.System.Data.TypedTableBase(Of proc_Flaeche_By_MengenRow)
        
        Private columnGUID_Menge_X As Global.System.Data.DataColumn
        
        Private columnName_Menge_X As Global.System.Data.DataColumn
        
        Private columnGUID_Type_Menge_X As Global.System.Data.DataColumn
        
        Private columnGUID_einheit_X As Global.System.Data.DataColumn
        
        Private columnName_Einheit_X As Global.System.Data.DataColumn
        
        Private columnGUID_Type_Einhiet_X As Global.System.Data.DataColumn
        
        Private columnGUID_TokenAttribute_Menge_X As Global.System.Data.DataColumn
        
        Private columnMenge_X As Global.System.Data.DataColumn
        
        Private columnGUID_Menge_Y As Global.System.Data.DataColumn
        
        Private columnName_Menge_Y As Global.System.Data.DataColumn
        
        Private columnGUID_Type_Menge_Y As Global.System.Data.DataColumn
        
        Private columnGUID_einheit_Y As Global.System.Data.DataColumn
        
        Private columnName_Einheit_Y As Global.System.Data.DataColumn
        
        Private columnGUID_Type_Einheit_Y As Global.System.Data.DataColumn
        
        Private columnGUID_TokenAttribute_Menge_Y As Global.System.Data.DataColumn
        
        Private columnMenge_Y As Global.System.Data.DataColumn
        
        Private columnGUID_Flaeche As Global.System.Data.DataColumn
        
        Private columnName_Flaeche As Global.System.Data.DataColumn
        
        Private columnGUID_Type_Flaeche As Global.System.Data.DataColumn
        
        Private columnFlaeche As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "proc_Flaeche_By_Mengen"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Menge_XColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Menge_X
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_Menge_XColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Menge_X
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Type_Menge_XColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Type_Menge_X
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_einheit_XColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_einheit_X
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_Einheit_XColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Einheit_X
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Type_Einhiet_XColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Type_Einhiet_X
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_TokenAttribute_Menge_XColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_TokenAttribute_Menge_X
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Menge_XColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMenge_X
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Menge_YColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Menge_Y
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_Menge_YColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Menge_Y
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Type_Menge_YColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Type_Menge_Y
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_einheit_YColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_einheit_Y
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_Einheit_YColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Einheit_Y
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Type_Einheit_YColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Type_Einheit_Y
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_TokenAttribute_Menge_YColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_TokenAttribute_Menge_Y
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Menge_YColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMenge_Y
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_FlaecheColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Flaeche
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_FlaecheColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Flaeche
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Type_FlaecheColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Type_Flaeche
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FlaecheColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFlaeche
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As proc_Flaeche_By_MengenRow
            Get
                Return CType(Me.Rows(index),proc_Flaeche_By_MengenRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_Flaeche_By_MengenRowChanging As proc_Flaeche_By_MengenRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_Flaeche_By_MengenRowChanged As proc_Flaeche_By_MengenRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_Flaeche_By_MengenRowDeleting As proc_Flaeche_By_MengenRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_Flaeche_By_MengenRowDeleted As proc_Flaeche_By_MengenRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addproc_Flaeche_By_MengenRow(ByVal row As proc_Flaeche_By_MengenRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addproc_Flaeche_By_MengenRow( _
                    ByVal GUID_Menge_X As System.Guid,  _
                    ByVal Name_Menge_X As String,  _
                    ByVal GUID_Type_Menge_X As System.Guid,  _
                    ByVal GUID_einheit_X As System.Guid,  _
                    ByVal Name_Einheit_X As String,  _
                    ByVal GUID_Type_Einhiet_X As System.Guid,  _
                    ByVal GUID_TokenAttribute_Menge_X As System.Guid,  _
                    ByVal Menge_X As Single,  _
                    ByVal GUID_Menge_Y As System.Guid,  _
                    ByVal Name_Menge_Y As String,  _
                    ByVal GUID_Type_Menge_Y As System.Guid,  _
                    ByVal GUID_einheit_Y As System.Guid,  _
                    ByVal Name_Einheit_Y As String,  _
                    ByVal GUID_Type_Einheit_Y As System.Guid,  _
                    ByVal GUID_TokenAttribute_Menge_Y As System.Guid,  _
                    ByVal Menge_Y As Single,  _
                    ByVal GUID_Flaeche As System.Guid,  _
                    ByVal Name_Flaeche As String,  _
                    ByVal GUID_Type_Flaeche As System.Guid,  _
                    ByVal Flaeche As Decimal) As proc_Flaeche_By_MengenRow
            Dim rowproc_Flaeche_By_MengenRow As proc_Flaeche_By_MengenRow = CType(Me.NewRow,proc_Flaeche_By_MengenRow)
            Dim columnValuesArray() As Object = New Object() {GUID_Menge_X, Name_Menge_X, GUID_Type_Menge_X, GUID_einheit_X, Name_Einheit_X, GUID_Type_Einhiet_X, GUID_TokenAttribute_Menge_X, Menge_X, GUID_Menge_Y, Name_Menge_Y, GUID_Type_Menge_Y, GUID_einheit_Y, Name_Einheit_Y, GUID_Type_Einheit_Y, GUID_TokenAttribute_Menge_Y, Menge_Y, GUID_Flaeche, Name_Flaeche, GUID_Type_Flaeche, Flaeche}
            rowproc_Flaeche_By_MengenRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowproc_Flaeche_By_MengenRow)
            Return rowproc_Flaeche_By_MengenRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As proc_Flaeche_By_MengenDataTable = CType(MyBase.Clone,proc_Flaeche_By_MengenDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New proc_Flaeche_By_MengenDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnGUID_Menge_X = MyBase.Columns("GUID_Menge_X")
            Me.columnName_Menge_X = MyBase.Columns("Name_Menge_X")
            Me.columnGUID_Type_Menge_X = MyBase.Columns("GUID_Type_Menge_X")
            Me.columnGUID_einheit_X = MyBase.Columns("GUID_einheit_X")
            Me.columnName_Einheit_X = MyBase.Columns("Name_Einheit_X")
            Me.columnGUID_Type_Einhiet_X = MyBase.Columns("GUID_Type_Einhiet_X")
            Me.columnGUID_TokenAttribute_Menge_X = MyBase.Columns("GUID_TokenAttribute_Menge_X")
            Me.columnMenge_X = MyBase.Columns("Menge_X")
            Me.columnGUID_Menge_Y = MyBase.Columns("GUID_Menge_Y")
            Me.columnName_Menge_Y = MyBase.Columns("Name_Menge_Y")
            Me.columnGUID_Type_Menge_Y = MyBase.Columns("GUID_Type_Menge_Y")
            Me.columnGUID_einheit_Y = MyBase.Columns("GUID_einheit_Y")
            Me.columnName_Einheit_Y = MyBase.Columns("Name_Einheit_Y")
            Me.columnGUID_Type_Einheit_Y = MyBase.Columns("GUID_Type_Einheit_Y")
            Me.columnGUID_TokenAttribute_Menge_Y = MyBase.Columns("GUID_TokenAttribute_Menge_Y")
            Me.columnMenge_Y = MyBase.Columns("Menge_Y")
            Me.columnGUID_Flaeche = MyBase.Columns("GUID_Flaeche")
            Me.columnName_Flaeche = MyBase.Columns("Name_Flaeche")
            Me.columnGUID_Type_Flaeche = MyBase.Columns("GUID_Type_Flaeche")
            Me.columnFlaeche = MyBase.Columns("Flaeche")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnGUID_Menge_X = New Global.System.Data.DataColumn("GUID_Menge_X", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Menge_X)
            Me.columnName_Menge_X = New Global.System.Data.DataColumn("Name_Menge_X", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Menge_X)
            Me.columnGUID_Type_Menge_X = New Global.System.Data.DataColumn("GUID_Type_Menge_X", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Type_Menge_X)
            Me.columnGUID_einheit_X = New Global.System.Data.DataColumn("GUID_einheit_X", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_einheit_X)
            Me.columnName_Einheit_X = New Global.System.Data.DataColumn("Name_Einheit_X", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Einheit_X)
            Me.columnGUID_Type_Einhiet_X = New Global.System.Data.DataColumn("GUID_Type_Einhiet_X", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Type_Einhiet_X)
            Me.columnGUID_TokenAttribute_Menge_X = New Global.System.Data.DataColumn("GUID_TokenAttribute_Menge_X", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_TokenAttribute_Menge_X)
            Me.columnMenge_X = New Global.System.Data.DataColumn("Menge_X", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMenge_X)
            Me.columnGUID_Menge_Y = New Global.System.Data.DataColumn("GUID_Menge_Y", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Menge_Y)
            Me.columnName_Menge_Y = New Global.System.Data.DataColumn("Name_Menge_Y", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Menge_Y)
            Me.columnGUID_Type_Menge_Y = New Global.System.Data.DataColumn("GUID_Type_Menge_Y", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Type_Menge_Y)
            Me.columnGUID_einheit_Y = New Global.System.Data.DataColumn("GUID_einheit_Y", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_einheit_Y)
            Me.columnName_Einheit_Y = New Global.System.Data.DataColumn("Name_Einheit_Y", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Einheit_Y)
            Me.columnGUID_Type_Einheit_Y = New Global.System.Data.DataColumn("GUID_Type_Einheit_Y", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Type_Einheit_Y)
            Me.columnGUID_TokenAttribute_Menge_Y = New Global.System.Data.DataColumn("GUID_TokenAttribute_Menge_Y", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_TokenAttribute_Menge_Y)
            Me.columnMenge_Y = New Global.System.Data.DataColumn("Menge_Y", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMenge_Y)
            Me.columnGUID_Flaeche = New Global.System.Data.DataColumn("GUID_Flaeche", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Flaeche)
            Me.columnName_Flaeche = New Global.System.Data.DataColumn("Name_Flaeche", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Flaeche)
            Me.columnGUID_Type_Flaeche = New Global.System.Data.DataColumn("GUID_Type_Flaeche", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Type_Flaeche)
            Me.columnFlaeche = New Global.System.Data.DataColumn("Flaeche", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFlaeche)
            Me.columnName_Menge_X.MaxLength = 255
            Me.columnName_Einheit_X.MaxLength = 255
            Me.columnName_Menge_Y.MaxLength = 255
            Me.columnName_Einheit_Y.MaxLength = 255
            Me.columnName_Flaeche.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newproc_Flaeche_By_MengenRow() As proc_Flaeche_By_MengenRow
            Return CType(Me.NewRow,proc_Flaeche_By_MengenRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New proc_Flaeche_By_MengenRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(proc_Flaeche_By_MengenRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.proc_Flaeche_By_MengenRowChangedEvent) Is Nothing) Then
                RaiseEvent proc_Flaeche_By_MengenRowChanged(Me, New proc_Flaeche_By_MengenRowChangeEvent(CType(e.Row,proc_Flaeche_By_MengenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.proc_Flaeche_By_MengenRowChangingEvent) Is Nothing) Then
                RaiseEvent proc_Flaeche_By_MengenRowChanging(Me, New proc_Flaeche_By_MengenRowChangeEvent(CType(e.Row,proc_Flaeche_By_MengenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.proc_Flaeche_By_MengenRowDeletedEvent) Is Nothing) Then
                RaiseEvent proc_Flaeche_By_MengenRowDeleted(Me, New proc_Flaeche_By_MengenRowChangeEvent(CType(e.Row,proc_Flaeche_By_MengenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.proc_Flaeche_By_MengenRowDeletingEvent) Is Nothing) Then
                RaiseEvent proc_Flaeche_By_MengenRowDeleting(Me, New proc_Flaeche_By_MengenRowChangeEvent(CType(e.Row,proc_Flaeche_By_MengenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removeproc_Flaeche_By_MengenRow(ByVal row As proc_Flaeche_By_MengenRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ds_Menge = New ds_Menge()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "proc_Flaeche_By_MengenDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class proc_Menge_By_Val_EinheitRow
        Inherits Global.System.Data.DataRow
        
        Private tableproc_Menge_By_Val_Einheit As proc_Menge_By_Val_EinheitDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableproc_Menge_By_Val_Einheit = CType(Me.Table,proc_Menge_By_Val_EinheitDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Menge() As System.Guid
            Get
                Return CType(Me(Me.tableproc_Menge_By_Val_Einheit.GUID_MengeColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableproc_Menge_By_Val_Einheit.GUID_MengeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Menge() As String
            Get
                Return CType(Me(Me.tableproc_Menge_By_Val_Einheit.Name_MengeColumn),String)
            End Get
            Set
                Me(Me.tableproc_Menge_By_Val_Einheit.Name_MengeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Type_Menge() As System.Guid
            Get
                Return CType(Me(Me.tableproc_Menge_By_Val_Einheit.GUID_Type_MengeColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableproc_Menge_By_Val_Einheit.GUID_Type_MengeColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class proc_Menge_By_GUIDRow
        Inherits Global.System.Data.DataRow
        
        Private tableproc_Menge_By_GUID As proc_Menge_By_GUIDDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableproc_Menge_By_GUID = CType(Me.Table,proc_Menge_By_GUIDDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Menge() As System.Guid
            Get
                Return CType(Me(Me.tableproc_Menge_By_GUID.GUID_MengeColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableproc_Menge_By_GUID.GUID_MengeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Menge() As String
            Get
                Return CType(Me(Me.tableproc_Menge_By_GUID.Name_MengeColumn),String)
            End Get
            Set
                Me(Me.tableproc_Menge_By_GUID.Name_MengeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Type_Menge() As System.Guid
            Get
                Return CType(Me(Me.tableproc_Menge_By_GUID.GUID_Type_MengeColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableproc_Menge_By_GUID.GUID_Type_MengeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Einheit() As System.Guid
            Get
                Return CType(Me(Me.tableproc_Menge_By_GUID.GUID_EinheitColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableproc_Menge_By_GUID.GUID_EinheitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Einheit() As String
            Get
                Return CType(Me(Me.tableproc_Menge_By_GUID.Name_EinheitColumn),String)
            End Get
            Set
                Me(Me.tableproc_Menge_By_GUID.Name_EinheitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Type_Einheit() As System.Guid
            Get
                Return CType(Me(Me.tableproc_Menge_By_GUID.GUID_Type_EinheitColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableproc_Menge_By_GUID.GUID_Type_EinheitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_TokenAttribute_Menge() As System.Guid
            Get
                Return CType(Me(Me.tableproc_Menge_By_GUID.GUID_TokenAttribute_MengeColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableproc_Menge_By_GUID.GUID_TokenAttribute_MengeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Menge() As Single
            Get
                Return CType(Me(Me.tableproc_Menge_By_GUID.MengeColumn),Single)
            End Get
            Set
                Me(Me.tableproc_Menge_By_GUID.MengeColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class proc_Volumen_By_MengenRow
        Inherits Global.System.Data.DataRow
        
        Private tableproc_Volumen_By_Mengen As proc_Volumen_By_MengenDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableproc_Volumen_By_Mengen = CType(Me.Table,proc_Volumen_By_MengenDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Menge_X() As System.Guid
            Get
                Return CType(Me(Me.tableproc_Volumen_By_Mengen.GUID_Menge_XColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableproc_Volumen_By_Mengen.GUID_Menge_XColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Menge_X() As String
            Get
                Return CType(Me(Me.tableproc_Volumen_By_Mengen.Name_Menge_XColumn),String)
            End Get
            Set
                Me(Me.tableproc_Volumen_By_Mengen.Name_Menge_XColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Type_Menge_X() As System.Guid
            Get
                Return CType(Me(Me.tableproc_Volumen_By_Mengen.GUID_Type_Menge_XColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableproc_Volumen_By_Mengen.GUID_Type_Menge_XColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Einheit_X() As System.Guid
            Get
                Return CType(Me(Me.tableproc_Volumen_By_Mengen.GUID_Einheit_XColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableproc_Volumen_By_Mengen.GUID_Einheit_XColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Einheit_X() As String
            Get
                Return CType(Me(Me.tableproc_Volumen_By_Mengen.Name_Einheit_XColumn),String)
            End Get
            Set
                Me(Me.tableproc_Volumen_By_Mengen.Name_Einheit_XColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Type_Einheit_X() As System.Guid
            Get
                Return CType(Me(Me.tableproc_Volumen_By_Mengen.GUID_Type_Einheit_XColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableproc_Volumen_By_Mengen.GUID_Type_Einheit_XColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_TokenAttribute_Menge_X() As System.Guid
            Get
                Return CType(Me(Me.tableproc_Volumen_By_Mengen.GUID_TokenAttribute_Menge_XColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableproc_Volumen_By_Mengen.GUID_TokenAttribute_Menge_XColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Menge_X() As Single
            Get
                Return CType(Me(Me.tableproc_Volumen_By_Mengen.Menge_XColumn),Single)
            End Get
            Set
                Me(Me.tableproc_Volumen_By_Mengen.Menge_XColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Menge_Y() As System.Guid
            Get
                Return CType(Me(Me.tableproc_Volumen_By_Mengen.GUID_Menge_YColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableproc_Volumen_By_Mengen.GUID_Menge_YColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Menge_Y() As String
            Get
                Return CType(Me(Me.tableproc_Volumen_By_Mengen.Name_Menge_YColumn),String)
            End Get
            Set
                Me(Me.tableproc_Volumen_By_Mengen.Name_Menge_YColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Type_Menge_Y() As System.Guid
            Get
                Return CType(Me(Me.tableproc_Volumen_By_Mengen.GUID_Type_Menge_YColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableproc_Volumen_By_Mengen.GUID_Type_Menge_YColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Einheit_Y() As System.Guid
            Get
                Return CType(Me(Me.tableproc_Volumen_By_Mengen.GUID_Einheit_YColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableproc_Volumen_By_Mengen.GUID_Einheit_YColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Einheit_Y() As String
            Get
                Return CType(Me(Me.tableproc_Volumen_By_Mengen.Name_Einheit_YColumn),String)
            End Get
            Set
                Me(Me.tableproc_Volumen_By_Mengen.Name_Einheit_YColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Type_Einheit_Y() As System.Guid
            Get
                Return CType(Me(Me.tableproc_Volumen_By_Mengen.GUID_Type_Einheit_YColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableproc_Volumen_By_Mengen.GUID_Type_Einheit_YColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_TokenAttribute_Menge_Y() As System.Guid
            Get
                Return CType(Me(Me.tableproc_Volumen_By_Mengen.GUID_TokenAttribute_Menge_YColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableproc_Volumen_By_Mengen.GUID_TokenAttribute_Menge_YColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Menge_Y() As Single
            Get
                Return CType(Me(Me.tableproc_Volumen_By_Mengen.Menge_YColumn),Single)
            End Get
            Set
                Me(Me.tableproc_Volumen_By_Mengen.Menge_YColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Menge_Z() As System.Guid
            Get
                Return CType(Me(Me.tableproc_Volumen_By_Mengen.GUID_Menge_ZColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableproc_Volumen_By_Mengen.GUID_Menge_ZColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Menge_Z() As String
            Get
                Return CType(Me(Me.tableproc_Volumen_By_Mengen.Name_Menge_ZColumn),String)
            End Get
            Set
                Me(Me.tableproc_Volumen_By_Mengen.Name_Menge_ZColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Type_Menge_Z() As System.Guid
            Get
                Return CType(Me(Me.tableproc_Volumen_By_Mengen.GUID_Type_Menge_ZColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableproc_Volumen_By_Mengen.GUID_Type_Menge_ZColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Einheit_Z() As System.Guid
            Get
                Return CType(Me(Me.tableproc_Volumen_By_Mengen.GUID_Einheit_ZColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableproc_Volumen_By_Mengen.GUID_Einheit_ZColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Einheit_Z() As String
            Get
                Return CType(Me(Me.tableproc_Volumen_By_Mengen.Name_Einheit_ZColumn),String)
            End Get
            Set
                Me(Me.tableproc_Volumen_By_Mengen.Name_Einheit_ZColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Type_Einheit_Z() As System.Guid
            Get
                Return CType(Me(Me.tableproc_Volumen_By_Mengen.GUID_Type_Einheit_ZColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableproc_Volumen_By_Mengen.GUID_Type_Einheit_ZColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_TokenAttribute_Menge_Z() As System.Guid
            Get
                Return CType(Me(Me.tableproc_Volumen_By_Mengen.GUID_TokenAttribute_Menge_ZColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableproc_Volumen_By_Mengen.GUID_TokenAttribute_Menge_ZColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Menge_Z() As Single
            Get
                Return CType(Me(Me.tableproc_Volumen_By_Mengen.Menge_ZColumn),Single)
            End Get
            Set
                Me(Me.tableproc_Volumen_By_Mengen.Menge_ZColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Volumen() As System.Guid
            Get
                Return CType(Me(Me.tableproc_Volumen_By_Mengen.GUID_VolumenColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableproc_Volumen_By_Mengen.GUID_VolumenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Volumen() As String
            Get
                Return CType(Me(Me.tableproc_Volumen_By_Mengen.Name_VolumenColumn),String)
            End Get
            Set
                Me(Me.tableproc_Volumen_By_Mengen.Name_VolumenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Type_Volumen() As System.Guid
            Get
                Return CType(Me(Me.tableproc_Volumen_By_Mengen.GUID_Type_VolumenColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableproc_Volumen_By_Mengen.GUID_Type_VolumenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Volumen() As Single
            Get
                Try 
                    Return CType(Me(Me.tableproc_Volumen_By_Mengen.VolumenColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Volumen' in table 'proc_Volumen_By_Mengen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Volumen_By_Mengen.VolumenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVolumenNull() As Boolean
            Return Me.IsNull(Me.tableproc_Volumen_By_Mengen.VolumenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVolumenNull()
            Me(Me.tableproc_Volumen_By_Mengen.VolumenColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class proc_MengeRow
        Inherits Global.System.Data.DataRow
        
        Private tableproc_Menge As proc_MengeDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableproc_Menge = CType(Me.Table,proc_MengeDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Menge() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Menge.GUID_MengeColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Menge' in table 'proc_Menge' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Menge.GUID_MengeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Menge() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_Menge.Name_MengeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Name_Menge' in table 'proc_Menge' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Menge.Name_MengeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Type_Menge() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Menge.GUID_Type_MengeColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Type_Menge' in table 'proc_Menge' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Menge.GUID_Type_MengeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Einheit() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Menge.GUID_EinheitColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Einheit' in table 'proc_Menge' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Menge.GUID_EinheitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Einheit() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_Menge.Name_EinheitColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Name_Einheit' in table 'proc_Menge' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Menge.Name_EinheitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Type_Einheit() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Menge.GUID_Type_EinheitColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Type_Einheit' in table 'proc_Menge' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Menge.GUID_Type_EinheitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_TokenAttribute_Menge() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Menge.GUID_TokenAttribute_MengeColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_TokenAttribute_Menge' in table 'proc_Menge' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Menge.GUID_TokenAttribute_MengeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Menge() As Single
            Get
                Try 
                    Return CType(Me(Me.tableproc_Menge.MengeColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Menge' in table 'proc_Menge' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Menge.MengeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_MengeNull() As Boolean
            Return Me.IsNull(Me.tableproc_Menge.GUID_MengeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_MengeNull()
            Me(Me.tableproc_Menge.GUID_MengeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsName_MengeNull() As Boolean
            Return Me.IsNull(Me.tableproc_Menge.Name_MengeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetName_MengeNull()
            Me(Me.tableproc_Menge.Name_MengeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_Type_MengeNull() As Boolean
            Return Me.IsNull(Me.tableproc_Menge.GUID_Type_MengeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_Type_MengeNull()
            Me(Me.tableproc_Menge.GUID_Type_MengeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_EinheitNull() As Boolean
            Return Me.IsNull(Me.tableproc_Menge.GUID_EinheitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_EinheitNull()
            Me(Me.tableproc_Menge.GUID_EinheitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsName_EinheitNull() As Boolean
            Return Me.IsNull(Me.tableproc_Menge.Name_EinheitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetName_EinheitNull()
            Me(Me.tableproc_Menge.Name_EinheitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_Type_EinheitNull() As Boolean
            Return Me.IsNull(Me.tableproc_Menge.GUID_Type_EinheitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_Type_EinheitNull()
            Me(Me.tableproc_Menge.GUID_Type_EinheitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_TokenAttribute_MengeNull() As Boolean
            Return Me.IsNull(Me.tableproc_Menge.GUID_TokenAttribute_MengeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_TokenAttribute_MengeNull()
            Me(Me.tableproc_Menge.GUID_TokenAttribute_MengeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMengeNull() As Boolean
            Return Me.IsNull(Me.tableproc_Menge.MengeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMengeNull()
            Me(Me.tableproc_Menge.MengeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class proc_FlaechenRow
        Inherits Global.System.Data.DataRow
        
        Private tableproc_Flaechen As proc_FlaechenDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableproc_Flaechen = CType(Me.Table,proc_FlaechenDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Menge_X() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Flaechen.GUID_Menge_XColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Menge_X' in table 'proc_Flaechen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Flaechen.GUID_Menge_XColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Menge_X() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_Flaechen.Name_Menge_XColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Name_Menge_X' in table 'proc_Flaechen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Flaechen.Name_Menge_XColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Type_Menge_X() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Flaechen.GUID_Type_Menge_XColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Type_Menge_X' in table 'proc_Flaechen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Flaechen.GUID_Type_Menge_XColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_einheit_X() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Flaechen.GUID_einheit_XColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_einheit_X' in table 'proc_Flaechen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Flaechen.GUID_einheit_XColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Einheit_X() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_Flaechen.Name_Einheit_XColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Name_Einheit_X' in table 'proc_Flaechen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Flaechen.Name_Einheit_XColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Type_Einhiet_X() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Flaechen.GUID_Type_Einhiet_XColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Type_Einhiet_X' in table 'proc_Flaechen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Flaechen.GUID_Type_Einhiet_XColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_TokenAttribute_Menge_X() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Flaechen.GUID_TokenAttribute_Menge_XColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_TokenAttribute_Menge_X' in table 'proc_Flaechen' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Flaechen.GUID_TokenAttribute_Menge_XColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Menge_X() As Single
            Get
                Try 
                    Return CType(Me(Me.tableproc_Flaechen.Menge_XColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Menge_X' in table 'proc_Flaechen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Flaechen.Menge_XColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Menge_Y() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Flaechen.GUID_Menge_YColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Menge_Y' in table 'proc_Flaechen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Flaechen.GUID_Menge_YColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Menge_Y() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_Flaechen.Name_Menge_YColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Name_Menge_Y' in table 'proc_Flaechen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Flaechen.Name_Menge_YColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Type_Menge_Y() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Flaechen.GUID_Type_Menge_YColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Type_Menge_Y' in table 'proc_Flaechen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Flaechen.GUID_Type_Menge_YColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_einheit_Y() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Flaechen.GUID_einheit_YColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_einheit_Y' in table 'proc_Flaechen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Flaechen.GUID_einheit_YColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Einheit_Y() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_Flaechen.Name_Einheit_YColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Name_Einheit_Y' in table 'proc_Flaechen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Flaechen.Name_Einheit_YColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Type_Einheit_Y() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Flaechen.GUID_Type_Einheit_YColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Type_Einheit_Y' in table 'proc_Flaechen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Flaechen.GUID_Type_Einheit_YColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_TokenAttribute_Menge_Y() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Flaechen.GUID_TokenAttribute_Menge_YColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_TokenAttribute_Menge_Y' in table 'proc_Flaechen' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Flaechen.GUID_TokenAttribute_Menge_YColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Menge_Y() As Single
            Get
                Try 
                    Return CType(Me(Me.tableproc_Flaechen.Menge_YColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Menge_Y' in table 'proc_Flaechen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Flaechen.Menge_YColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Flaeche() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Flaechen.GUID_FlaecheColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Flaeche' in table 'proc_Flaechen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Flaechen.GUID_FlaecheColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Flaeche() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_Flaechen.Name_FlaecheColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Name_Flaeche' in table 'proc_Flaechen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Flaechen.Name_FlaecheColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Type_Flaeche() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Flaechen.GUID_Type_FlaecheColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Type_Flaeche' in table 'proc_Flaechen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Flaechen.GUID_Type_FlaecheColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Flaeche() As Single
            Get
                Try 
                    Return CType(Me(Me.tableproc_Flaechen.FlaecheColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Flaeche' in table 'proc_Flaechen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Flaechen.FlaecheColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_Menge_XNull() As Boolean
            Return Me.IsNull(Me.tableproc_Flaechen.GUID_Menge_XColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_Menge_XNull()
            Me(Me.tableproc_Flaechen.GUID_Menge_XColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsName_Menge_XNull() As Boolean
            Return Me.IsNull(Me.tableproc_Flaechen.Name_Menge_XColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetName_Menge_XNull()
            Me(Me.tableproc_Flaechen.Name_Menge_XColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_Type_Menge_XNull() As Boolean
            Return Me.IsNull(Me.tableproc_Flaechen.GUID_Type_Menge_XColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_Type_Menge_XNull()
            Me(Me.tableproc_Flaechen.GUID_Type_Menge_XColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_einheit_XNull() As Boolean
            Return Me.IsNull(Me.tableproc_Flaechen.GUID_einheit_XColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_einheit_XNull()
            Me(Me.tableproc_Flaechen.GUID_einheit_XColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsName_Einheit_XNull() As Boolean
            Return Me.IsNull(Me.tableproc_Flaechen.Name_Einheit_XColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetName_Einheit_XNull()
            Me(Me.tableproc_Flaechen.Name_Einheit_XColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_Type_Einhiet_XNull() As Boolean
            Return Me.IsNull(Me.tableproc_Flaechen.GUID_Type_Einhiet_XColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_Type_Einhiet_XNull()
            Me(Me.tableproc_Flaechen.GUID_Type_Einhiet_XColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_TokenAttribute_Menge_XNull() As Boolean
            Return Me.IsNull(Me.tableproc_Flaechen.GUID_TokenAttribute_Menge_XColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_TokenAttribute_Menge_XNull()
            Me(Me.tableproc_Flaechen.GUID_TokenAttribute_Menge_XColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMenge_XNull() As Boolean
            Return Me.IsNull(Me.tableproc_Flaechen.Menge_XColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMenge_XNull()
            Me(Me.tableproc_Flaechen.Menge_XColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_Menge_YNull() As Boolean
            Return Me.IsNull(Me.tableproc_Flaechen.GUID_Menge_YColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_Menge_YNull()
            Me(Me.tableproc_Flaechen.GUID_Menge_YColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsName_Menge_YNull() As Boolean
            Return Me.IsNull(Me.tableproc_Flaechen.Name_Menge_YColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetName_Menge_YNull()
            Me(Me.tableproc_Flaechen.Name_Menge_YColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_Type_Menge_YNull() As Boolean
            Return Me.IsNull(Me.tableproc_Flaechen.GUID_Type_Menge_YColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_Type_Menge_YNull()
            Me(Me.tableproc_Flaechen.GUID_Type_Menge_YColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_einheit_YNull() As Boolean
            Return Me.IsNull(Me.tableproc_Flaechen.GUID_einheit_YColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_einheit_YNull()
            Me(Me.tableproc_Flaechen.GUID_einheit_YColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsName_Einheit_YNull() As Boolean
            Return Me.IsNull(Me.tableproc_Flaechen.Name_Einheit_YColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetName_Einheit_YNull()
            Me(Me.tableproc_Flaechen.Name_Einheit_YColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_Type_Einheit_YNull() As Boolean
            Return Me.IsNull(Me.tableproc_Flaechen.GUID_Type_Einheit_YColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_Type_Einheit_YNull()
            Me(Me.tableproc_Flaechen.GUID_Type_Einheit_YColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_TokenAttribute_Menge_YNull() As Boolean
            Return Me.IsNull(Me.tableproc_Flaechen.GUID_TokenAttribute_Menge_YColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_TokenAttribute_Menge_YNull()
            Me(Me.tableproc_Flaechen.GUID_TokenAttribute_Menge_YColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMenge_YNull() As Boolean
            Return Me.IsNull(Me.tableproc_Flaechen.Menge_YColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMenge_YNull()
            Me(Me.tableproc_Flaechen.Menge_YColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_FlaecheNull() As Boolean
            Return Me.IsNull(Me.tableproc_Flaechen.GUID_FlaecheColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_FlaecheNull()
            Me(Me.tableproc_Flaechen.GUID_FlaecheColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsName_FlaecheNull() As Boolean
            Return Me.IsNull(Me.tableproc_Flaechen.Name_FlaecheColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetName_FlaecheNull()
            Me(Me.tableproc_Flaechen.Name_FlaecheColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_Type_FlaecheNull() As Boolean
            Return Me.IsNull(Me.tableproc_Flaechen.GUID_Type_FlaecheColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_Type_FlaecheNull()
            Me(Me.tableproc_Flaechen.GUID_Type_FlaecheColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFlaecheNull() As Boolean
            Return Me.IsNull(Me.tableproc_Flaechen.FlaecheColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFlaecheNull()
            Me(Me.tableproc_Flaechen.FlaecheColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class proc_Flaeche_By_MengenRow
        Inherits Global.System.Data.DataRow
        
        Private tableproc_Flaeche_By_Mengen As proc_Flaeche_By_MengenDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableproc_Flaeche_By_Mengen = CType(Me.Table,proc_Flaeche_By_MengenDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Menge_X() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Flaeche_By_Mengen.GUID_Menge_XColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Menge_X' in table 'proc_Flaeche_By_Mengen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Flaeche_By_Mengen.GUID_Menge_XColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Menge_X() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_Flaeche_By_Mengen.Name_Menge_XColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Name_Menge_X' in table 'proc_Flaeche_By_Mengen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Flaeche_By_Mengen.Name_Menge_XColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Type_Menge_X() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Flaeche_By_Mengen.GUID_Type_Menge_XColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Type_Menge_X' in table 'proc_Flaeche_By_Mengen' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Flaeche_By_Mengen.GUID_Type_Menge_XColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_einheit_X() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Flaeche_By_Mengen.GUID_einheit_XColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_einheit_X' in table 'proc_Flaeche_By_Mengen' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Flaeche_By_Mengen.GUID_einheit_XColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Einheit_X() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_Flaeche_By_Mengen.Name_Einheit_XColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Name_Einheit_X' in table 'proc_Flaeche_By_Mengen' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Flaeche_By_Mengen.Name_Einheit_XColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Type_Einhiet_X() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Flaeche_By_Mengen.GUID_Type_Einhiet_XColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Type_Einhiet_X' in table 'proc_Flaeche_By_Mengen' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Flaeche_By_Mengen.GUID_Type_Einhiet_XColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_TokenAttribute_Menge_X() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Flaeche_By_Mengen.GUID_TokenAttribute_Menge_XColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_TokenAttribute_Menge_X' in table 'proc_Flaeche_By_Meng"& _ 
                            "en' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Flaeche_By_Mengen.GUID_TokenAttribute_Menge_XColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Menge_X() As Single
            Get
                Try 
                    Return CType(Me(Me.tableproc_Flaeche_By_Mengen.Menge_XColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Menge_X' in table 'proc_Flaeche_By_Mengen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Flaeche_By_Mengen.Menge_XColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Menge_Y() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Flaeche_By_Mengen.GUID_Menge_YColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Menge_Y' in table 'proc_Flaeche_By_Mengen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Flaeche_By_Mengen.GUID_Menge_YColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Menge_Y() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_Flaeche_By_Mengen.Name_Menge_YColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Name_Menge_Y' in table 'proc_Flaeche_By_Mengen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Flaeche_By_Mengen.Name_Menge_YColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Type_Menge_Y() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Flaeche_By_Mengen.GUID_Type_Menge_YColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Type_Menge_Y' in table 'proc_Flaeche_By_Mengen' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Flaeche_By_Mengen.GUID_Type_Menge_YColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_einheit_Y() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Flaeche_By_Mengen.GUID_einheit_YColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_einheit_Y' in table 'proc_Flaeche_By_Mengen' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Flaeche_By_Mengen.GUID_einheit_YColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Einheit_Y() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_Flaeche_By_Mengen.Name_Einheit_YColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Name_Einheit_Y' in table 'proc_Flaeche_By_Mengen' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Flaeche_By_Mengen.Name_Einheit_YColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Type_Einheit_Y() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Flaeche_By_Mengen.GUID_Type_Einheit_YColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Type_Einheit_Y' in table 'proc_Flaeche_By_Mengen' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Flaeche_By_Mengen.GUID_Type_Einheit_YColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_TokenAttribute_Menge_Y() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Flaeche_By_Mengen.GUID_TokenAttribute_Menge_YColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_TokenAttribute_Menge_Y' in table 'proc_Flaeche_By_Meng"& _ 
                            "en' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Flaeche_By_Mengen.GUID_TokenAttribute_Menge_YColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Menge_Y() As Single
            Get
                Try 
                    Return CType(Me(Me.tableproc_Flaeche_By_Mengen.Menge_YColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Menge_Y' in table 'proc_Flaeche_By_Mengen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Flaeche_By_Mengen.Menge_YColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Flaeche() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Flaeche_By_Mengen.GUID_FlaecheColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Flaeche' in table 'proc_Flaeche_By_Mengen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Flaeche_By_Mengen.GUID_FlaecheColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Flaeche() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_Flaeche_By_Mengen.Name_FlaecheColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Name_Flaeche' in table 'proc_Flaeche_By_Mengen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Flaeche_By_Mengen.Name_FlaecheColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Type_Flaeche() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Flaeche_By_Mengen.GUID_Type_FlaecheColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Type_Flaeche' in table 'proc_Flaeche_By_Mengen' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Flaeche_By_Mengen.GUID_Type_FlaecheColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Flaeche() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableproc_Flaeche_By_Mengen.FlaecheColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Flaeche' in table 'proc_Flaeche_By_Mengen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Flaeche_By_Mengen.FlaecheColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_Menge_XNull() As Boolean
            Return Me.IsNull(Me.tableproc_Flaeche_By_Mengen.GUID_Menge_XColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_Menge_XNull()
            Me(Me.tableproc_Flaeche_By_Mengen.GUID_Menge_XColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsName_Menge_XNull() As Boolean
            Return Me.IsNull(Me.tableproc_Flaeche_By_Mengen.Name_Menge_XColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetName_Menge_XNull()
            Me(Me.tableproc_Flaeche_By_Mengen.Name_Menge_XColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_Type_Menge_XNull() As Boolean
            Return Me.IsNull(Me.tableproc_Flaeche_By_Mengen.GUID_Type_Menge_XColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_Type_Menge_XNull()
            Me(Me.tableproc_Flaeche_By_Mengen.GUID_Type_Menge_XColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_einheit_XNull() As Boolean
            Return Me.IsNull(Me.tableproc_Flaeche_By_Mengen.GUID_einheit_XColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_einheit_XNull()
            Me(Me.tableproc_Flaeche_By_Mengen.GUID_einheit_XColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsName_Einheit_XNull() As Boolean
            Return Me.IsNull(Me.tableproc_Flaeche_By_Mengen.Name_Einheit_XColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetName_Einheit_XNull()
            Me(Me.tableproc_Flaeche_By_Mengen.Name_Einheit_XColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_Type_Einhiet_XNull() As Boolean
            Return Me.IsNull(Me.tableproc_Flaeche_By_Mengen.GUID_Type_Einhiet_XColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_Type_Einhiet_XNull()
            Me(Me.tableproc_Flaeche_By_Mengen.GUID_Type_Einhiet_XColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_TokenAttribute_Menge_XNull() As Boolean
            Return Me.IsNull(Me.tableproc_Flaeche_By_Mengen.GUID_TokenAttribute_Menge_XColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_TokenAttribute_Menge_XNull()
            Me(Me.tableproc_Flaeche_By_Mengen.GUID_TokenAttribute_Menge_XColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMenge_XNull() As Boolean
            Return Me.IsNull(Me.tableproc_Flaeche_By_Mengen.Menge_XColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMenge_XNull()
            Me(Me.tableproc_Flaeche_By_Mengen.Menge_XColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_Menge_YNull() As Boolean
            Return Me.IsNull(Me.tableproc_Flaeche_By_Mengen.GUID_Menge_YColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_Menge_YNull()
            Me(Me.tableproc_Flaeche_By_Mengen.GUID_Menge_YColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsName_Menge_YNull() As Boolean
            Return Me.IsNull(Me.tableproc_Flaeche_By_Mengen.Name_Menge_YColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetName_Menge_YNull()
            Me(Me.tableproc_Flaeche_By_Mengen.Name_Menge_YColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_Type_Menge_YNull() As Boolean
            Return Me.IsNull(Me.tableproc_Flaeche_By_Mengen.GUID_Type_Menge_YColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_Type_Menge_YNull()
            Me(Me.tableproc_Flaeche_By_Mengen.GUID_Type_Menge_YColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_einheit_YNull() As Boolean
            Return Me.IsNull(Me.tableproc_Flaeche_By_Mengen.GUID_einheit_YColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_einheit_YNull()
            Me(Me.tableproc_Flaeche_By_Mengen.GUID_einheit_YColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsName_Einheit_YNull() As Boolean
            Return Me.IsNull(Me.tableproc_Flaeche_By_Mengen.Name_Einheit_YColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetName_Einheit_YNull()
            Me(Me.tableproc_Flaeche_By_Mengen.Name_Einheit_YColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_Type_Einheit_YNull() As Boolean
            Return Me.IsNull(Me.tableproc_Flaeche_By_Mengen.GUID_Type_Einheit_YColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_Type_Einheit_YNull()
            Me(Me.tableproc_Flaeche_By_Mengen.GUID_Type_Einheit_YColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_TokenAttribute_Menge_YNull() As Boolean
            Return Me.IsNull(Me.tableproc_Flaeche_By_Mengen.GUID_TokenAttribute_Menge_YColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_TokenAttribute_Menge_YNull()
            Me(Me.tableproc_Flaeche_By_Mengen.GUID_TokenAttribute_Menge_YColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMenge_YNull() As Boolean
            Return Me.IsNull(Me.tableproc_Flaeche_By_Mengen.Menge_YColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMenge_YNull()
            Me(Me.tableproc_Flaeche_By_Mengen.Menge_YColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_FlaecheNull() As Boolean
            Return Me.IsNull(Me.tableproc_Flaeche_By_Mengen.GUID_FlaecheColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_FlaecheNull()
            Me(Me.tableproc_Flaeche_By_Mengen.GUID_FlaecheColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsName_FlaecheNull() As Boolean
            Return Me.IsNull(Me.tableproc_Flaeche_By_Mengen.Name_FlaecheColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetName_FlaecheNull()
            Me(Me.tableproc_Flaeche_By_Mengen.Name_FlaecheColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_Type_FlaecheNull() As Boolean
            Return Me.IsNull(Me.tableproc_Flaeche_By_Mengen.GUID_Type_FlaecheColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_Type_FlaecheNull()
            Me(Me.tableproc_Flaeche_By_Mengen.GUID_Type_FlaecheColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFlaecheNull() As Boolean
            Return Me.IsNull(Me.tableproc_Flaeche_By_Mengen.FlaecheColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFlaecheNull()
            Me(Me.tableproc_Flaeche_By_Mengen.FlaecheColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class proc_Menge_By_Val_EinheitRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As proc_Menge_By_Val_EinheitRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As proc_Menge_By_Val_EinheitRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As proc_Menge_By_Val_EinheitRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class proc_Menge_By_GUIDRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As proc_Menge_By_GUIDRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As proc_Menge_By_GUIDRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As proc_Menge_By_GUIDRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class proc_Volumen_By_MengenRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As proc_Volumen_By_MengenRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As proc_Volumen_By_MengenRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As proc_Volumen_By_MengenRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class proc_MengeRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As proc_MengeRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As proc_MengeRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As proc_MengeRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class proc_FlaechenRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As proc_FlaechenRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As proc_FlaechenRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As proc_FlaechenRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class proc_Flaeche_By_MengenRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As proc_Flaeche_By_MengenRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As proc_Flaeche_By_MengenRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As proc_Flaeche_By_MengenRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace ds_MengeTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class proc_Menge_By_Val_EinheitTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "proc_Menge_By_Val_Einheit"
            tableMapping.ColumnMappings.Add("GUID_Menge", "GUID_Menge")
            tableMapping.ColumnMappings.Add("Name_Menge", "Name_Menge")
            tableMapping.ColumnMappings.Add("GUID_Type_Menge", "GUID_Type_Menge")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.OrganisationalTransactions.My.MySettings.Default.sem_db_system_organizationalTransaction_moduleConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.proc_Menge_By_Val_Einheit"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Attribute_Menge", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Menge", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Einheit", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_RelationType_isOfType", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Name_Einheit", Global.System.Data.SqlDbType.VarChar, 255, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@real_Menge", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ds_Menge.proc_Menge_By_Val_EinheitDataTable, ByVal GUID_Attribute_Menge As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Menge As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Einheit As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_isOfType As Global.System.Nullable(Of Global.System.Guid), ByVal Name_Einheit As String, ByVal real_Menge As Global.System.Nullable(Of Single)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (GUID_Attribute_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(GUID_Attribute_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(GUID_Type_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Einheit.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(GUID_Type_Einheit.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_isOfType.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(GUID_RelationType_isOfType.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Name_Einheit Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Name_Einheit,String)
            End If
            If (real_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(real_Menge.Value,Single)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal GUID_Attribute_Menge As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Menge As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Einheit As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_isOfType As Global.System.Nullable(Of Global.System.Guid), ByVal Name_Einheit As String, ByVal real_Menge As Global.System.Nullable(Of Single)) As ds_Menge.proc_Menge_By_Val_EinheitDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (GUID_Attribute_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(GUID_Attribute_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(GUID_Type_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Einheit.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(GUID_Type_Einheit.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_isOfType.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(GUID_RelationType_isOfType.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Name_Einheit Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Name_Einheit,String)
            End If
            If (real_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(real_Menge.Value,Single)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As ds_Menge.proc_Menge_By_Val_EinheitDataTable = New ds_Menge.proc_Menge_By_Val_EinheitDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class proc_Menge_By_GUIDTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "proc_Menge_By_GUID"
            tableMapping.ColumnMappings.Add("GUID_Menge", "GUID_Menge")
            tableMapping.ColumnMappings.Add("Name_Menge", "Name_Menge")
            tableMapping.ColumnMappings.Add("GUID_Type_Menge", "GUID_Type_Menge")
            tableMapping.ColumnMappings.Add("GUID_Einheit", "GUID_Einheit")
            tableMapping.ColumnMappings.Add("Name_Einheit", "Name_Einheit")
            tableMapping.ColumnMappings.Add("GUID_Type_Einheit", "GUID_Type_Einheit")
            tableMapping.ColumnMappings.Add("GUID_TokenAttribute_Menge", "GUID_TokenAttribute_Menge")
            tableMapping.ColumnMappings.Add("Menge", "Menge")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.OrganisationalTransactions.My.MySettings.Default.sem_db_system_organizationalTransaction_moduleConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.proc_Menge_By_GUID"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Attribute_Menge", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Menge", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Einheit", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_RelationType_IsOfType", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Menge", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ds_Menge.proc_Menge_By_GUIDDataTable, ByVal GUID_Attribute_Menge As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Menge As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Einheit As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_IsOfType As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Menge As Global.System.Nullable(Of Global.System.Guid)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (GUID_Attribute_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(GUID_Attribute_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(GUID_Type_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Einheit.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(GUID_Type_Einheit.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_IsOfType.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(GUID_RelationType_IsOfType.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (GUID_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(GUID_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal GUID_Attribute_Menge As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Menge As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Einheit As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_IsOfType As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Menge As Global.System.Nullable(Of Global.System.Guid)) As ds_Menge.proc_Menge_By_GUIDDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (GUID_Attribute_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(GUID_Attribute_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(GUID_Type_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Einheit.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(GUID_Type_Einheit.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_IsOfType.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(GUID_RelationType_IsOfType.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (GUID_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(GUID_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As ds_Menge.proc_Menge_By_GUIDDataTable = New ds_Menge.proc_Menge_By_GUIDDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class proc_Volumen_By_MengenTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "proc_Volumen_By_Mengen"
            tableMapping.ColumnMappings.Add("GUID_Menge_X", "GUID_Menge_X")
            tableMapping.ColumnMappings.Add("Name_Menge_X", "Name_Menge_X")
            tableMapping.ColumnMappings.Add("GUID_Type_Menge_X", "GUID_Type_Menge_X")
            tableMapping.ColumnMappings.Add("GUID_Einheit_X", "GUID_Einheit_X")
            tableMapping.ColumnMappings.Add("Name_Einheit_X", "Name_Einheit_X")
            tableMapping.ColumnMappings.Add("GUID_Type_Einheit_X", "GUID_Type_Einheit_X")
            tableMapping.ColumnMappings.Add("GUID_TokenAttribute_Menge_X", "GUID_TokenAttribute_Menge_X")
            tableMapping.ColumnMappings.Add("Menge_X", "Menge_X")
            tableMapping.ColumnMappings.Add("GUID_Menge_Y", "GUID_Menge_Y")
            tableMapping.ColumnMappings.Add("Name_Menge_Y", "Name_Menge_Y")
            tableMapping.ColumnMappings.Add("GUID_Type_Menge_Y", "GUID_Type_Menge_Y")
            tableMapping.ColumnMappings.Add("GUID_Einheit_Y", "GUID_Einheit_Y")
            tableMapping.ColumnMappings.Add("Name_Einheit_Y", "Name_Einheit_Y")
            tableMapping.ColumnMappings.Add("GUID_Type_Einheit_Y", "GUID_Type_Einheit_Y")
            tableMapping.ColumnMappings.Add("GUID_TokenAttribute_Menge_Y", "GUID_TokenAttribute_Menge_Y")
            tableMapping.ColumnMappings.Add("Menge_Y", "Menge_Y")
            tableMapping.ColumnMappings.Add("GUID_Menge_Z", "GUID_Menge_Z")
            tableMapping.ColumnMappings.Add("Name_Menge_Z", "Name_Menge_Z")
            tableMapping.ColumnMappings.Add("GUID_Type_Menge_Z", "GUID_Type_Menge_Z")
            tableMapping.ColumnMappings.Add("GUID_Einheit_Z", "GUID_Einheit_Z")
            tableMapping.ColumnMappings.Add("Name_Einheit_Z", "Name_Einheit_Z")
            tableMapping.ColumnMappings.Add("GUID_Type_Einheit_Z", "GUID_Type_Einheit_Z")
            tableMapping.ColumnMappings.Add("GUID_TokenAttribute_Menge_Z", "GUID_TokenAttribute_Menge_Z")
            tableMapping.ColumnMappings.Add("Menge_Z", "Menge_Z")
            tableMapping.ColumnMappings.Add("GUID_Volumen", "GUID_Volumen")
            tableMapping.ColumnMappings.Add("Name_Volumen", "Name_Volumen")
            tableMapping.ColumnMappings.Add("GUID_Type_Volumen", "GUID_Type_Volumen")
            tableMapping.ColumnMappings.Add("Volumen", "Volumen")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.OrganisationalTransactions.My.MySettings.Default.sem_db_system_organizationalTransaction_moduleConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.proc_Volumen_By_Mengen"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Attribute_Menge", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Menge", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Einheit", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Volumen", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_RelationType_IsOfType", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_RelationType_X", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_RelationType_Y", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_RelationType_Z", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Menge_X", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Menge_Y", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Menge_Z", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ds_Menge.proc_Volumen_By_MengenDataTable, ByVal GUID_Attribute_Menge As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Menge As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Einheit As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Volumen As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_IsOfType As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_X As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_Y As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_Z As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Menge_X As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Menge_Y As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Menge_Z As Global.System.Nullable(Of Global.System.Guid)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (GUID_Attribute_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(GUID_Attribute_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(GUID_Type_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Einheit.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(GUID_Type_Einheit.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Volumen.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(GUID_Type_Volumen.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_IsOfType.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(GUID_RelationType_IsOfType.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_X.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(GUID_RelationType_X.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_Y.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(GUID_RelationType_Y.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_Z.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(GUID_RelationType_Z.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (GUID_Menge_X.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(GUID_Menge_X.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (GUID_Menge_Y.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(GUID_Menge_Y.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (GUID_Menge_Z.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(GUID_Menge_Z.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal GUID_Attribute_Menge As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Menge As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Einheit As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Volumen As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_IsOfType As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_X As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_Y As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_Z As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Menge_X As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Menge_Y As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Menge_Z As Global.System.Nullable(Of Global.System.Guid)) As ds_Menge.proc_Volumen_By_MengenDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (GUID_Attribute_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(GUID_Attribute_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(GUID_Type_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Einheit.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(GUID_Type_Einheit.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Volumen.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(GUID_Type_Volumen.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_IsOfType.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(GUID_RelationType_IsOfType.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_X.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(GUID_RelationType_X.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_Y.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(GUID_RelationType_Y.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_Z.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(GUID_RelationType_Z.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (GUID_Menge_X.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(GUID_Menge_X.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (GUID_Menge_Y.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(GUID_Menge_Y.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (GUID_Menge_Z.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(GUID_Menge_Z.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As ds_Menge.proc_Volumen_By_MengenDataTable = New ds_Menge.proc_Volumen_By_MengenDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class proc_MengeTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "proc_Menge"
            tableMapping.ColumnMappings.Add("GUID_Menge", "GUID_Menge")
            tableMapping.ColumnMappings.Add("Name_Menge", "Name_Menge")
            tableMapping.ColumnMappings.Add("GUID_Type_Menge", "GUID_Type_Menge")
            tableMapping.ColumnMappings.Add("GUID_Einheit", "GUID_Einheit")
            tableMapping.ColumnMappings.Add("Name_Einheit", "Name_Einheit")
            tableMapping.ColumnMappings.Add("GUID_Type_Einheit", "GUID_Type_Einheit")
            tableMapping.ColumnMappings.Add("GUID_TokenAttribute_Menge", "GUID_TokenAttribute_Menge")
            tableMapping.ColumnMappings.Add("Menge", "Menge")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.OrganisationalTransactions.My.MySettings.Default.sem_db_system_organizationalTransaction_moduleConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.proc_Menge"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Attribute_Menge", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Menge", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Einheit", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_RelationType_IsOfType", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ds_Menge.proc_MengeDataTable, ByVal GUID_Attribute_Menge As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Menge As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Einheit As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_IsOfType As Global.System.Nullable(Of Global.System.Guid)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (GUID_Attribute_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(GUID_Attribute_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(GUID_Type_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Einheit.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(GUID_Type_Einheit.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_IsOfType.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(GUID_RelationType_IsOfType.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal GUID_Attribute_Menge As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Menge As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Einheit As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_IsOfType As Global.System.Nullable(Of Global.System.Guid)) As ds_Menge.proc_MengeDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (GUID_Attribute_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(GUID_Attribute_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(GUID_Type_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Einheit.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(GUID_Type_Einheit.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_IsOfType.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(GUID_RelationType_IsOfType.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As ds_Menge.proc_MengeDataTable = New ds_Menge.proc_MengeDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class proc_FlaechenTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "proc_Flaechen"
            tableMapping.ColumnMappings.Add("GUID_Menge_X", "GUID_Menge_X")
            tableMapping.ColumnMappings.Add("Name_Menge_X", "Name_Menge_X")
            tableMapping.ColumnMappings.Add("GUID_Type_Menge_X", "GUID_Type_Menge_X")
            tableMapping.ColumnMappings.Add("GUID_einheit_X", "GUID_einheit_X")
            tableMapping.ColumnMappings.Add("Name_Einheit_X", "Name_Einheit_X")
            tableMapping.ColumnMappings.Add("GUID_Type_Einhiet_X", "GUID_Type_Einhiet_X")
            tableMapping.ColumnMappings.Add("GUID_TokenAttribute_Menge_X", "GUID_TokenAttribute_Menge_X")
            tableMapping.ColumnMappings.Add("Menge_X", "Menge_X")
            tableMapping.ColumnMappings.Add("GUID_Menge_Y", "GUID_Menge_Y")
            tableMapping.ColumnMappings.Add("Name_Menge_Y", "Name_Menge_Y")
            tableMapping.ColumnMappings.Add("GUID_Type_Menge_Y", "GUID_Type_Menge_Y")
            tableMapping.ColumnMappings.Add("GUID_einheit_Y", "GUID_einheit_Y")
            tableMapping.ColumnMappings.Add("Name_Einheit_Y", "Name_Einheit_Y")
            tableMapping.ColumnMappings.Add("GUID_Type_Einheit_Y", "GUID_Type_Einheit_Y")
            tableMapping.ColumnMappings.Add("GUID_TokenAttribute_Menge_Y", "GUID_TokenAttribute_Menge_Y")
            tableMapping.ColumnMappings.Add("Menge_Y", "Menge_Y")
            tableMapping.ColumnMappings.Add("GUID_Flaeche", "GUID_Flaeche")
            tableMapping.ColumnMappings.Add("Name_Flaeche", "Name_Flaeche")
            tableMapping.ColumnMappings.Add("GUID_Type_Flaeche", "GUID_Type_Flaeche")
            tableMapping.ColumnMappings.Add("Flaeche", "Flaeche")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.OrganisationalTransactions.My.MySettings.Default.sem_db_system_organizationalTransaction_moduleConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.proc_Flaechen"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Attribute_Menge", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Menge", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Einheit", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Flaeche", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_RelationType_IsOfType", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_RelationType_X", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_RelationType_Y", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ds_Menge.proc_FlaechenDataTable, ByVal GUID_Attribute_Menge As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Menge As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Einheit As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Flaeche As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_IsOfType As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_X As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_Y As Global.System.Nullable(Of Global.System.Guid)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (GUID_Attribute_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(GUID_Attribute_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(GUID_Type_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Einheit.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(GUID_Type_Einheit.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Flaeche.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(GUID_Type_Flaeche.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_IsOfType.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(GUID_RelationType_IsOfType.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_X.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(GUID_RelationType_X.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_Y.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(GUID_RelationType_Y.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal GUID_Attribute_Menge As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Menge As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Einheit As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Flaeche As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_IsOfType As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_X As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_Y As Global.System.Nullable(Of Global.System.Guid)) As ds_Menge.proc_FlaechenDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (GUID_Attribute_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(GUID_Attribute_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(GUID_Type_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Einheit.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(GUID_Type_Einheit.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Flaeche.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(GUID_Type_Flaeche.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_IsOfType.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(GUID_RelationType_IsOfType.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_X.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(GUID_RelationType_X.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_Y.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(GUID_RelationType_Y.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As ds_Menge.proc_FlaechenDataTable = New ds_Menge.proc_FlaechenDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class proc_Flaeche_By_MengenTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "proc_Flaeche_By_Mengen"
            tableMapping.ColumnMappings.Add("GUID_Menge_X", "GUID_Menge_X")
            tableMapping.ColumnMappings.Add("Name_Menge_X", "Name_Menge_X")
            tableMapping.ColumnMappings.Add("GUID_Type_Menge_X", "GUID_Type_Menge_X")
            tableMapping.ColumnMappings.Add("GUID_einheit_X", "GUID_einheit_X")
            tableMapping.ColumnMappings.Add("Name_Einheit_X", "Name_Einheit_X")
            tableMapping.ColumnMappings.Add("GUID_Type_Einhiet_X", "GUID_Type_Einhiet_X")
            tableMapping.ColumnMappings.Add("GUID_TokenAttribute_Menge_X", "GUID_TokenAttribute_Menge_X")
            tableMapping.ColumnMappings.Add("Menge_X", "Menge_X")
            tableMapping.ColumnMappings.Add("GUID_Menge_Y", "GUID_Menge_Y")
            tableMapping.ColumnMappings.Add("Name_Menge_Y", "Name_Menge_Y")
            tableMapping.ColumnMappings.Add("GUID_Type_Menge_Y", "GUID_Type_Menge_Y")
            tableMapping.ColumnMappings.Add("GUID_einheit_Y", "GUID_einheit_Y")
            tableMapping.ColumnMappings.Add("Name_Einheit_Y", "Name_Einheit_Y")
            tableMapping.ColumnMappings.Add("GUID_Type_Einheit_Y", "GUID_Type_Einheit_Y")
            tableMapping.ColumnMappings.Add("GUID_TokenAttribute_Menge_Y", "GUID_TokenAttribute_Menge_Y")
            tableMapping.ColumnMappings.Add("Menge_Y", "Menge_Y")
            tableMapping.ColumnMappings.Add("GUID_Flaeche", "GUID_Flaeche")
            tableMapping.ColumnMappings.Add("Name_Flaeche", "Name_Flaeche")
            tableMapping.ColumnMappings.Add("GUID_Type_Flaeche", "GUID_Type_Flaeche")
            tableMapping.ColumnMappings.Add("Flaeche", "Flaeche")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.OrganisationalTransactions.My.MySettings.Default.sem_db_system_organizationalTransaction_moduleConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.proc_Flaeche_By_Mengen"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Attribute_Menge", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Menge", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Einheit", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Flaeche", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_RelationType_IsOfType", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_RelationType_X", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_RelationType_Y", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Menge_X", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Menge_Y", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ds_Menge.proc_Flaeche_By_MengenDataTable, ByVal GUID_Attribute_Menge As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Menge As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Einheit As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Flaeche As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_IsOfType As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_X As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_Y As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Menge_X As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Menge_Y As Global.System.Nullable(Of Global.System.Guid)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (GUID_Attribute_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(GUID_Attribute_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(GUID_Type_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Einheit.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(GUID_Type_Einheit.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Flaeche.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(GUID_Type_Flaeche.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_IsOfType.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(GUID_RelationType_IsOfType.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_X.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(GUID_RelationType_X.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_Y.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(GUID_RelationType_Y.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (GUID_Menge_X.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(GUID_Menge_X.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (GUID_Menge_Y.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(GUID_Menge_Y.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal GUID_Attribute_Menge As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Menge As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Einheit As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Flaeche As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_IsOfType As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_X As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_Y As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Menge_X As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Menge_Y As Global.System.Nullable(Of Global.System.Guid)) As ds_Menge.proc_Flaeche_By_MengenDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (GUID_Attribute_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(GUID_Attribute_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(GUID_Type_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Einheit.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(GUID_Type_Einheit.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Flaeche.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(GUID_Type_Flaeche.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_IsOfType.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(GUID_RelationType_IsOfType.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_X.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(GUID_RelationType_X.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_Y.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(GUID_RelationType_Y.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (GUID_Menge_X.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(GUID_Menge_X.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (GUID_Menge_Y.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(GUID_Menge_Y.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As ds_Menge.proc_Flaeche_By_MengenDataTable = New ds_Menge.proc_Flaeche_By_MengenDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As ds_Menge, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As ds_Menge, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As ds_Menge, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As ds_Menge) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
