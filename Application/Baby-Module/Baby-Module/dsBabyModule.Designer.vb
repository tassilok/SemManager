'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18052
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsBabyModule"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsBabyModule
    Inherits Global.System.Data.DataSet
    
    Private tableproc_Gewichtsmessung As proc_GewichtsmessungDataTable
    
    Private tableproc_Gewichtsmessung_By_Date As proc_Gewichtsmessung_By_DateDataTable
    
    Private tableproc_Trinkmessungen_By_Date As proc_Trinkmessungen_By_DateDataTable
    
    Private tableproc_Trinkmessungen As proc_TrinkmessungenDataTable
    
    Private tableproc_Trinkbestandteile_Of_Messung As proc_Trinkbestandteile_Of_MessungDataTable
    
    Private tableproc_Trinkbestandteil As proc_TrinkbestandteilDataTable
    
    Private tableproc_Mengen_Of_Day_By_Einheit As proc_Mengen_Of_Day_By_EinheitDataTable
    
    Private tableproc_Probleme As proc_ProblemeDataTable
    
    Private tableproc_Bestandteile As proc_BestandteileDataTable
    
    Private tableproc_Mengen_Of_Day As proc_Mengen_Of_DayDataTable
    
    Private tableproc_Wochenstatistik As proc_WochenstatistikDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("proc_Gewichtsmessung")) Is Nothing) Then
                MyBase.Tables.Add(New proc_GewichtsmessungDataTable(ds.Tables("proc_Gewichtsmessung")))
            End If
            If (Not (ds.Tables("proc_Gewichtsmessung_By_Date")) Is Nothing) Then
                MyBase.Tables.Add(New proc_Gewichtsmessung_By_DateDataTable(ds.Tables("proc_Gewichtsmessung_By_Date")))
            End If
            If (Not (ds.Tables("proc_Trinkmessungen_By_Date")) Is Nothing) Then
                MyBase.Tables.Add(New proc_Trinkmessungen_By_DateDataTable(ds.Tables("proc_Trinkmessungen_By_Date")))
            End If
            If (Not (ds.Tables("proc_Trinkmessungen")) Is Nothing) Then
                MyBase.Tables.Add(New proc_TrinkmessungenDataTable(ds.Tables("proc_Trinkmessungen")))
            End If
            If (Not (ds.Tables("proc_Trinkbestandteile_Of_Messung")) Is Nothing) Then
                MyBase.Tables.Add(New proc_Trinkbestandteile_Of_MessungDataTable(ds.Tables("proc_Trinkbestandteile_Of_Messung")))
            End If
            If (Not (ds.Tables("proc_Trinkbestandteil")) Is Nothing) Then
                MyBase.Tables.Add(New proc_TrinkbestandteilDataTable(ds.Tables("proc_Trinkbestandteil")))
            End If
            If (Not (ds.Tables("proc_Mengen_Of_Day_By_Einheit")) Is Nothing) Then
                MyBase.Tables.Add(New proc_Mengen_Of_Day_By_EinheitDataTable(ds.Tables("proc_Mengen_Of_Day_By_Einheit")))
            End If
            If (Not (ds.Tables("proc_Probleme")) Is Nothing) Then
                MyBase.Tables.Add(New proc_ProblemeDataTable(ds.Tables("proc_Probleme")))
            End If
            If (Not (ds.Tables("proc_Bestandteile")) Is Nothing) Then
                MyBase.Tables.Add(New proc_BestandteileDataTable(ds.Tables("proc_Bestandteile")))
            End If
            If (Not (ds.Tables("proc_Mengen_Of_Day")) Is Nothing) Then
                MyBase.Tables.Add(New proc_Mengen_Of_DayDataTable(ds.Tables("proc_Mengen_Of_Day")))
            End If
            If (Not (ds.Tables("proc_Wochenstatistik")) Is Nothing) Then
                MyBase.Tables.Add(New proc_WochenstatistikDataTable(ds.Tables("proc_Wochenstatistik")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property proc_Gewichtsmessung() As proc_GewichtsmessungDataTable
        Get
            Return Me.tableproc_Gewichtsmessung
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property proc_Gewichtsmessung_By_Date() As proc_Gewichtsmessung_By_DateDataTable
        Get
            Return Me.tableproc_Gewichtsmessung_By_Date
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property proc_Trinkmessungen_By_Date() As proc_Trinkmessungen_By_DateDataTable
        Get
            Return Me.tableproc_Trinkmessungen_By_Date
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property proc_Trinkmessungen() As proc_TrinkmessungenDataTable
        Get
            Return Me.tableproc_Trinkmessungen
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property proc_Trinkbestandteile_Of_Messung() As proc_Trinkbestandteile_Of_MessungDataTable
        Get
            Return Me.tableproc_Trinkbestandteile_Of_Messung
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property proc_Trinkbestandteil() As proc_TrinkbestandteilDataTable
        Get
            Return Me.tableproc_Trinkbestandteil
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property proc_Mengen_Of_Day_By_Einheit() As proc_Mengen_Of_Day_By_EinheitDataTable
        Get
            Return Me.tableproc_Mengen_Of_Day_By_Einheit
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property proc_Probleme() As proc_ProblemeDataTable
        Get
            Return Me.tableproc_Probleme
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property proc_Bestandteile() As proc_BestandteileDataTable
        Get
            Return Me.tableproc_Bestandteile
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property proc_Mengen_Of_Day() As proc_Mengen_Of_DayDataTable
        Get
            Return Me.tableproc_Mengen_Of_Day
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property proc_Wochenstatistik() As proc_WochenstatistikDataTable
        Get
            Return Me.tableproc_Wochenstatistik
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsBabyModule = CType(MyBase.Clone,dsBabyModule)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("proc_Gewichtsmessung")) Is Nothing) Then
                MyBase.Tables.Add(New proc_GewichtsmessungDataTable(ds.Tables("proc_Gewichtsmessung")))
            End If
            If (Not (ds.Tables("proc_Gewichtsmessung_By_Date")) Is Nothing) Then
                MyBase.Tables.Add(New proc_Gewichtsmessung_By_DateDataTable(ds.Tables("proc_Gewichtsmessung_By_Date")))
            End If
            If (Not (ds.Tables("proc_Trinkmessungen_By_Date")) Is Nothing) Then
                MyBase.Tables.Add(New proc_Trinkmessungen_By_DateDataTable(ds.Tables("proc_Trinkmessungen_By_Date")))
            End If
            If (Not (ds.Tables("proc_Trinkmessungen")) Is Nothing) Then
                MyBase.Tables.Add(New proc_TrinkmessungenDataTable(ds.Tables("proc_Trinkmessungen")))
            End If
            If (Not (ds.Tables("proc_Trinkbestandteile_Of_Messung")) Is Nothing) Then
                MyBase.Tables.Add(New proc_Trinkbestandteile_Of_MessungDataTable(ds.Tables("proc_Trinkbestandteile_Of_Messung")))
            End If
            If (Not (ds.Tables("proc_Trinkbestandteil")) Is Nothing) Then
                MyBase.Tables.Add(New proc_TrinkbestandteilDataTable(ds.Tables("proc_Trinkbestandteil")))
            End If
            If (Not (ds.Tables("proc_Mengen_Of_Day_By_Einheit")) Is Nothing) Then
                MyBase.Tables.Add(New proc_Mengen_Of_Day_By_EinheitDataTable(ds.Tables("proc_Mengen_Of_Day_By_Einheit")))
            End If
            If (Not (ds.Tables("proc_Probleme")) Is Nothing) Then
                MyBase.Tables.Add(New proc_ProblemeDataTable(ds.Tables("proc_Probleme")))
            End If
            If (Not (ds.Tables("proc_Bestandteile")) Is Nothing) Then
                MyBase.Tables.Add(New proc_BestandteileDataTable(ds.Tables("proc_Bestandteile")))
            End If
            If (Not (ds.Tables("proc_Mengen_Of_Day")) Is Nothing) Then
                MyBase.Tables.Add(New proc_Mengen_Of_DayDataTable(ds.Tables("proc_Mengen_Of_Day")))
            End If
            If (Not (ds.Tables("proc_Wochenstatistik")) Is Nothing) Then
                MyBase.Tables.Add(New proc_WochenstatistikDataTable(ds.Tables("proc_Wochenstatistik")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableproc_Gewichtsmessung = CType(MyBase.Tables("proc_Gewichtsmessung"),proc_GewichtsmessungDataTable)
        If (initTable = true) Then
            If (Not (Me.tableproc_Gewichtsmessung) Is Nothing) Then
                Me.tableproc_Gewichtsmessung.InitVars
            End If
        End If
        Me.tableproc_Gewichtsmessung_By_Date = CType(MyBase.Tables("proc_Gewichtsmessung_By_Date"),proc_Gewichtsmessung_By_DateDataTable)
        If (initTable = true) Then
            If (Not (Me.tableproc_Gewichtsmessung_By_Date) Is Nothing) Then
                Me.tableproc_Gewichtsmessung_By_Date.InitVars
            End If
        End If
        Me.tableproc_Trinkmessungen_By_Date = CType(MyBase.Tables("proc_Trinkmessungen_By_Date"),proc_Trinkmessungen_By_DateDataTable)
        If (initTable = true) Then
            If (Not (Me.tableproc_Trinkmessungen_By_Date) Is Nothing) Then
                Me.tableproc_Trinkmessungen_By_Date.InitVars
            End If
        End If
        Me.tableproc_Trinkmessungen = CType(MyBase.Tables("proc_Trinkmessungen"),proc_TrinkmessungenDataTable)
        If (initTable = true) Then
            If (Not (Me.tableproc_Trinkmessungen) Is Nothing) Then
                Me.tableproc_Trinkmessungen.InitVars
            End If
        End If
        Me.tableproc_Trinkbestandteile_Of_Messung = CType(MyBase.Tables("proc_Trinkbestandteile_Of_Messung"),proc_Trinkbestandteile_Of_MessungDataTable)
        If (initTable = true) Then
            If (Not (Me.tableproc_Trinkbestandteile_Of_Messung) Is Nothing) Then
                Me.tableproc_Trinkbestandteile_Of_Messung.InitVars
            End If
        End If
        Me.tableproc_Trinkbestandteil = CType(MyBase.Tables("proc_Trinkbestandteil"),proc_TrinkbestandteilDataTable)
        If (initTable = true) Then
            If (Not (Me.tableproc_Trinkbestandteil) Is Nothing) Then
                Me.tableproc_Trinkbestandteil.InitVars
            End If
        End If
        Me.tableproc_Mengen_Of_Day_By_Einheit = CType(MyBase.Tables("proc_Mengen_Of_Day_By_Einheit"),proc_Mengen_Of_Day_By_EinheitDataTable)
        If (initTable = true) Then
            If (Not (Me.tableproc_Mengen_Of_Day_By_Einheit) Is Nothing) Then
                Me.tableproc_Mengen_Of_Day_By_Einheit.InitVars
            End If
        End If
        Me.tableproc_Probleme = CType(MyBase.Tables("proc_Probleme"),proc_ProblemeDataTable)
        If (initTable = true) Then
            If (Not (Me.tableproc_Probleme) Is Nothing) Then
                Me.tableproc_Probleme.InitVars
            End If
        End If
        Me.tableproc_Bestandteile = CType(MyBase.Tables("proc_Bestandteile"),proc_BestandteileDataTable)
        If (initTable = true) Then
            If (Not (Me.tableproc_Bestandteile) Is Nothing) Then
                Me.tableproc_Bestandteile.InitVars
            End If
        End If
        Me.tableproc_Mengen_Of_Day = CType(MyBase.Tables("proc_Mengen_Of_Day"),proc_Mengen_Of_DayDataTable)
        If (initTable = true) Then
            If (Not (Me.tableproc_Mengen_Of_Day) Is Nothing) Then
                Me.tableproc_Mengen_Of_Day.InitVars
            End If
        End If
        Me.tableproc_Wochenstatistik = CType(MyBase.Tables("proc_Wochenstatistik"),proc_WochenstatistikDataTable)
        If (initTable = true) Then
            If (Not (Me.tableproc_Wochenstatistik) Is Nothing) Then
                Me.tableproc_Wochenstatistik.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "dsBabyModule"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsBabyModule.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableproc_Gewichtsmessung = New proc_GewichtsmessungDataTable()
        MyBase.Tables.Add(Me.tableproc_Gewichtsmessung)
        Me.tableproc_Gewichtsmessung_By_Date = New proc_Gewichtsmessung_By_DateDataTable()
        MyBase.Tables.Add(Me.tableproc_Gewichtsmessung_By_Date)
        Me.tableproc_Trinkmessungen_By_Date = New proc_Trinkmessungen_By_DateDataTable()
        MyBase.Tables.Add(Me.tableproc_Trinkmessungen_By_Date)
        Me.tableproc_Trinkmessungen = New proc_TrinkmessungenDataTable()
        MyBase.Tables.Add(Me.tableproc_Trinkmessungen)
        Me.tableproc_Trinkbestandteile_Of_Messung = New proc_Trinkbestandteile_Of_MessungDataTable()
        MyBase.Tables.Add(Me.tableproc_Trinkbestandteile_Of_Messung)
        Me.tableproc_Trinkbestandteil = New proc_TrinkbestandteilDataTable()
        MyBase.Tables.Add(Me.tableproc_Trinkbestandteil)
        Me.tableproc_Mengen_Of_Day_By_Einheit = New proc_Mengen_Of_Day_By_EinheitDataTable()
        MyBase.Tables.Add(Me.tableproc_Mengen_Of_Day_By_Einheit)
        Me.tableproc_Probleme = New proc_ProblemeDataTable()
        MyBase.Tables.Add(Me.tableproc_Probleme)
        Me.tableproc_Bestandteile = New proc_BestandteileDataTable()
        MyBase.Tables.Add(Me.tableproc_Bestandteile)
        Me.tableproc_Mengen_Of_Day = New proc_Mengen_Of_DayDataTable()
        MyBase.Tables.Add(Me.tableproc_Mengen_Of_Day)
        Me.tableproc_Wochenstatistik = New proc_WochenstatistikDataTable()
        MyBase.Tables.Add(Me.tableproc_Wochenstatistik)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeproc_Gewichtsmessung() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeproc_Gewichtsmessung_By_Date() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeproc_Trinkmessungen_By_Date() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeproc_Trinkmessungen() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeproc_Trinkbestandteile_Of_Messung() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeproc_Trinkbestandteil() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeproc_Mengen_Of_Day_By_Einheit() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeproc_Probleme() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeproc_Bestandteile() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeproc_Mengen_Of_Day() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeproc_Wochenstatistik() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsBabyModule = New dsBabyModule()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub proc_GewichtsmessungRowChangeEventHandler(ByVal sender As Object, ByVal e As proc_GewichtsmessungRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub proc_Gewichtsmessung_By_DateRowChangeEventHandler(ByVal sender As Object, ByVal e As proc_Gewichtsmessung_By_DateRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub proc_Trinkmessungen_By_DateRowChangeEventHandler(ByVal sender As Object, ByVal e As proc_Trinkmessungen_By_DateRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub proc_TrinkmessungenRowChangeEventHandler(ByVal sender As Object, ByVal e As proc_TrinkmessungenRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub proc_Trinkbestandteile_Of_MessungRowChangeEventHandler(ByVal sender As Object, ByVal e As proc_Trinkbestandteile_Of_MessungRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub proc_TrinkbestandteilRowChangeEventHandler(ByVal sender As Object, ByVal e As proc_TrinkbestandteilRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub proc_Mengen_Of_Day_By_EinheitRowChangeEventHandler(ByVal sender As Object, ByVal e As proc_Mengen_Of_Day_By_EinheitRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub proc_ProblemeRowChangeEventHandler(ByVal sender As Object, ByVal e As proc_ProblemeRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub proc_BestandteileRowChangeEventHandler(ByVal sender As Object, ByVal e As proc_BestandteileRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub proc_Mengen_Of_DayRowChangeEventHandler(ByVal sender As Object, ByVal e As proc_Mengen_Of_DayRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub proc_WochenstatistikRowChangeEventHandler(ByVal sender As Object, ByVal e As proc_WochenstatistikRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class proc_GewichtsmessungDataTable
        Inherits Global.System.Data.TypedTableBase(Of proc_GewichtsmessungRow)
        
        Private columnGUID_Gewichtsmessung As Global.System.Data.DataColumn
        
        Private columnName_Gewichtsmessung As Global.System.Data.DataColumn
        
        Private columnZeitpunkt_Messung As Global.System.Data.DataColumn
        
        Private columnGewicht As Global.System.Data.DataColumn
        
        Private columnGUID_Einheit As Global.System.Data.DataColumn
        
        Private columnName_Einheit As Global.System.Data.DataColumn
        
        Private columnGUID_Type_Einheit As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "proc_Gewichtsmessung"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_GewichtsmessungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Gewichtsmessung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_GewichtsmessungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Gewichtsmessung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Zeitpunkt_MessungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZeitpunkt_Messung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GewichtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGewicht
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_EinheitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Einheit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_EinheitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Einheit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Type_EinheitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Type_Einheit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As proc_GewichtsmessungRow
            Get
                Return CType(Me.Rows(index),proc_GewichtsmessungRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_GewichtsmessungRowChanging As proc_GewichtsmessungRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_GewichtsmessungRowChanged As proc_GewichtsmessungRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_GewichtsmessungRowDeleting As proc_GewichtsmessungRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_GewichtsmessungRowDeleted As proc_GewichtsmessungRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addproc_GewichtsmessungRow(ByVal row As proc_GewichtsmessungRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addproc_GewichtsmessungRow(ByVal GUID_Gewichtsmessung As System.Guid, ByVal Name_Gewichtsmessung As String, ByVal Zeitpunkt_Messung As Date, ByVal Gewicht As Single, ByVal GUID_Einheit As System.Guid, ByVal Name_Einheit As String, ByVal GUID_Type_Einheit As System.Guid) As proc_GewichtsmessungRow
            Dim rowproc_GewichtsmessungRow As proc_GewichtsmessungRow = CType(Me.NewRow,proc_GewichtsmessungRow)
            Dim columnValuesArray() As Object = New Object() {GUID_Gewichtsmessung, Name_Gewichtsmessung, Zeitpunkt_Messung, Gewicht, GUID_Einheit, Name_Einheit, GUID_Type_Einheit}
            rowproc_GewichtsmessungRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowproc_GewichtsmessungRow)
            Return rowproc_GewichtsmessungRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As proc_GewichtsmessungDataTable = CType(MyBase.Clone,proc_GewichtsmessungDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New proc_GewichtsmessungDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnGUID_Gewichtsmessung = MyBase.Columns("GUID_Gewichtsmessung")
            Me.columnName_Gewichtsmessung = MyBase.Columns("Name_Gewichtsmessung")
            Me.columnZeitpunkt_Messung = MyBase.Columns("Zeitpunkt_Messung")
            Me.columnGewicht = MyBase.Columns("Gewicht")
            Me.columnGUID_Einheit = MyBase.Columns("GUID_Einheit")
            Me.columnName_Einheit = MyBase.Columns("Name_Einheit")
            Me.columnGUID_Type_Einheit = MyBase.Columns("GUID_Type_Einheit")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnGUID_Gewichtsmessung = New Global.System.Data.DataColumn("GUID_Gewichtsmessung", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Gewichtsmessung)
            Me.columnName_Gewichtsmessung = New Global.System.Data.DataColumn("Name_Gewichtsmessung", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Gewichtsmessung)
            Me.columnZeitpunkt_Messung = New Global.System.Data.DataColumn("Zeitpunkt_Messung", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZeitpunkt_Messung)
            Me.columnGewicht = New Global.System.Data.DataColumn("Gewicht", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGewicht)
            Me.columnGUID_Einheit = New Global.System.Data.DataColumn("GUID_Einheit", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Einheit)
            Me.columnName_Einheit = New Global.System.Data.DataColumn("Name_Einheit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Einheit)
            Me.columnGUID_Type_Einheit = New Global.System.Data.DataColumn("GUID_Type_Einheit", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Type_Einheit)
            Me.columnGUID_Gewichtsmessung.AllowDBNull = false
            Me.columnName_Gewichtsmessung.AllowDBNull = false
            Me.columnName_Gewichtsmessung.MaxLength = 255
            Me.columnZeitpunkt_Messung.AllowDBNull = false
            Me.columnGewicht.AllowDBNull = false
            Me.columnGUID_Einheit.AllowDBNull = false
            Me.columnName_Einheit.AllowDBNull = false
            Me.columnName_Einheit.MaxLength = 255
            Me.columnGUID_Type_Einheit.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newproc_GewichtsmessungRow() As proc_GewichtsmessungRow
            Return CType(Me.NewRow,proc_GewichtsmessungRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New proc_GewichtsmessungRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(proc_GewichtsmessungRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.proc_GewichtsmessungRowChangedEvent) Is Nothing) Then
                RaiseEvent proc_GewichtsmessungRowChanged(Me, New proc_GewichtsmessungRowChangeEvent(CType(e.Row,proc_GewichtsmessungRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.proc_GewichtsmessungRowChangingEvent) Is Nothing) Then
                RaiseEvent proc_GewichtsmessungRowChanging(Me, New proc_GewichtsmessungRowChangeEvent(CType(e.Row,proc_GewichtsmessungRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.proc_GewichtsmessungRowDeletedEvent) Is Nothing) Then
                RaiseEvent proc_GewichtsmessungRowDeleted(Me, New proc_GewichtsmessungRowChangeEvent(CType(e.Row,proc_GewichtsmessungRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.proc_GewichtsmessungRowDeletingEvent) Is Nothing) Then
                RaiseEvent proc_GewichtsmessungRowDeleting(Me, New proc_GewichtsmessungRowChangeEvent(CType(e.Row,proc_GewichtsmessungRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removeproc_GewichtsmessungRow(ByVal row As proc_GewichtsmessungRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsBabyModule = New dsBabyModule()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "proc_GewichtsmessungDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class proc_Gewichtsmessung_By_DateDataTable
        Inherits Global.System.Data.TypedTableBase(Of proc_Gewichtsmessung_By_DateRow)
        
        Private columnGUID_Gewichtsmessung As Global.System.Data.DataColumn
        
        Private columnName_Gewichtsmessung As Global.System.Data.DataColumn
        
        Private columnGUID_Type_Gewichtsmessung As Global.System.Data.DataColumn
        
        Private columnGUID_TokenAttribute As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "proc_Gewichtsmessung_By_Date"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_GewichtsmessungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Gewichtsmessung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_GewichtsmessungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Gewichtsmessung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Type_GewichtsmessungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Type_Gewichtsmessung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_TokenAttributeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_TokenAttribute
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As proc_Gewichtsmessung_By_DateRow
            Get
                Return CType(Me.Rows(index),proc_Gewichtsmessung_By_DateRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_Gewichtsmessung_By_DateRowChanging As proc_Gewichtsmessung_By_DateRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_Gewichtsmessung_By_DateRowChanged As proc_Gewichtsmessung_By_DateRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_Gewichtsmessung_By_DateRowDeleting As proc_Gewichtsmessung_By_DateRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_Gewichtsmessung_By_DateRowDeleted As proc_Gewichtsmessung_By_DateRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addproc_Gewichtsmessung_By_DateRow(ByVal row As proc_Gewichtsmessung_By_DateRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addproc_Gewichtsmessung_By_DateRow(ByVal GUID_Gewichtsmessung As System.Guid, ByVal Name_Gewichtsmessung As String, ByVal GUID_Type_Gewichtsmessung As System.Guid, ByVal GUID_TokenAttribute As System.Guid) As proc_Gewichtsmessung_By_DateRow
            Dim rowproc_Gewichtsmessung_By_DateRow As proc_Gewichtsmessung_By_DateRow = CType(Me.NewRow,proc_Gewichtsmessung_By_DateRow)
            Dim columnValuesArray() As Object = New Object() {GUID_Gewichtsmessung, Name_Gewichtsmessung, GUID_Type_Gewichtsmessung, GUID_TokenAttribute}
            rowproc_Gewichtsmessung_By_DateRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowproc_Gewichtsmessung_By_DateRow)
            Return rowproc_Gewichtsmessung_By_DateRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As proc_Gewichtsmessung_By_DateDataTable = CType(MyBase.Clone,proc_Gewichtsmessung_By_DateDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New proc_Gewichtsmessung_By_DateDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnGUID_Gewichtsmessung = MyBase.Columns("GUID_Gewichtsmessung")
            Me.columnName_Gewichtsmessung = MyBase.Columns("Name_Gewichtsmessung")
            Me.columnGUID_Type_Gewichtsmessung = MyBase.Columns("GUID_Type_Gewichtsmessung")
            Me.columnGUID_TokenAttribute = MyBase.Columns("GUID_TokenAttribute")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnGUID_Gewichtsmessung = New Global.System.Data.DataColumn("GUID_Gewichtsmessung", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Gewichtsmessung)
            Me.columnName_Gewichtsmessung = New Global.System.Data.DataColumn("Name_Gewichtsmessung", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Gewichtsmessung)
            Me.columnGUID_Type_Gewichtsmessung = New Global.System.Data.DataColumn("GUID_Type_Gewichtsmessung", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Type_Gewichtsmessung)
            Me.columnGUID_TokenAttribute = New Global.System.Data.DataColumn("GUID_TokenAttribute", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_TokenAttribute)
            Me.columnGUID_Gewichtsmessung.AllowDBNull = false
            Me.columnName_Gewichtsmessung.AllowDBNull = false
            Me.columnName_Gewichtsmessung.MaxLength = 255
            Me.columnGUID_Type_Gewichtsmessung.AllowDBNull = false
            Me.columnGUID_TokenAttribute.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newproc_Gewichtsmessung_By_DateRow() As proc_Gewichtsmessung_By_DateRow
            Return CType(Me.NewRow,proc_Gewichtsmessung_By_DateRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New proc_Gewichtsmessung_By_DateRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(proc_Gewichtsmessung_By_DateRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.proc_Gewichtsmessung_By_DateRowChangedEvent) Is Nothing) Then
                RaiseEvent proc_Gewichtsmessung_By_DateRowChanged(Me, New proc_Gewichtsmessung_By_DateRowChangeEvent(CType(e.Row,proc_Gewichtsmessung_By_DateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.proc_Gewichtsmessung_By_DateRowChangingEvent) Is Nothing) Then
                RaiseEvent proc_Gewichtsmessung_By_DateRowChanging(Me, New proc_Gewichtsmessung_By_DateRowChangeEvent(CType(e.Row,proc_Gewichtsmessung_By_DateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.proc_Gewichtsmessung_By_DateRowDeletedEvent) Is Nothing) Then
                RaiseEvent proc_Gewichtsmessung_By_DateRowDeleted(Me, New proc_Gewichtsmessung_By_DateRowChangeEvent(CType(e.Row,proc_Gewichtsmessung_By_DateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.proc_Gewichtsmessung_By_DateRowDeletingEvent) Is Nothing) Then
                RaiseEvent proc_Gewichtsmessung_By_DateRowDeleting(Me, New proc_Gewichtsmessung_By_DateRowChangeEvent(CType(e.Row,proc_Gewichtsmessung_By_DateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removeproc_Gewichtsmessung_By_DateRow(ByVal row As proc_Gewichtsmessung_By_DateRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsBabyModule = New dsBabyModule()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "proc_Gewichtsmessung_By_DateDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class proc_Trinkmessungen_By_DateDataTable
        Inherits Global.System.Data.TypedTableBase(Of proc_Trinkmessungen_By_DateRow)
        
        Private columnGUID_Partner As Global.System.Data.DataColumn
        
        Private columnName_Partner As Global.System.Data.DataColumn
        
        Private columnGUID_Type_Partner As Global.System.Data.DataColumn
        
        Private columnGUID_Trinkmessungen As Global.System.Data.DataColumn
        
        Private columnName_Trinkmessungen As Global.System.Data.DataColumn
        
        Private columnGUID_Type_Trinkmessungen As Global.System.Data.DataColumn
        
        Private columnZeitpunkt As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "proc_Trinkmessungen_By_Date"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_PartnerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Partner
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_PartnerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Partner
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Type_PartnerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Type_Partner
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_TrinkmessungenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Trinkmessungen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_TrinkmessungenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Trinkmessungen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Type_TrinkmessungenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Type_Trinkmessungen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ZeitpunktColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZeitpunkt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As proc_Trinkmessungen_By_DateRow
            Get
                Return CType(Me.Rows(index),proc_Trinkmessungen_By_DateRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_Trinkmessungen_By_DateRowChanging As proc_Trinkmessungen_By_DateRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_Trinkmessungen_By_DateRowChanged As proc_Trinkmessungen_By_DateRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_Trinkmessungen_By_DateRowDeleting As proc_Trinkmessungen_By_DateRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_Trinkmessungen_By_DateRowDeleted As proc_Trinkmessungen_By_DateRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addproc_Trinkmessungen_By_DateRow(ByVal row As proc_Trinkmessungen_By_DateRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addproc_Trinkmessungen_By_DateRow(ByVal GUID_Partner As System.Guid, ByVal Name_Partner As String, ByVal GUID_Type_Partner As System.Guid, ByVal GUID_Trinkmessungen As System.Guid, ByVal Name_Trinkmessungen As String, ByVal GUID_Type_Trinkmessungen As System.Guid, ByVal Zeitpunkt As Date) As proc_Trinkmessungen_By_DateRow
            Dim rowproc_Trinkmessungen_By_DateRow As proc_Trinkmessungen_By_DateRow = CType(Me.NewRow,proc_Trinkmessungen_By_DateRow)
            Dim columnValuesArray() As Object = New Object() {GUID_Partner, Name_Partner, GUID_Type_Partner, GUID_Trinkmessungen, Name_Trinkmessungen, GUID_Type_Trinkmessungen, Zeitpunkt}
            rowproc_Trinkmessungen_By_DateRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowproc_Trinkmessungen_By_DateRow)
            Return rowproc_Trinkmessungen_By_DateRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As proc_Trinkmessungen_By_DateDataTable = CType(MyBase.Clone,proc_Trinkmessungen_By_DateDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New proc_Trinkmessungen_By_DateDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnGUID_Partner = MyBase.Columns("GUID_Partner")
            Me.columnName_Partner = MyBase.Columns("Name_Partner")
            Me.columnGUID_Type_Partner = MyBase.Columns("GUID_Type_Partner")
            Me.columnGUID_Trinkmessungen = MyBase.Columns("GUID_Trinkmessungen")
            Me.columnName_Trinkmessungen = MyBase.Columns("Name_Trinkmessungen")
            Me.columnGUID_Type_Trinkmessungen = MyBase.Columns("GUID_Type_Trinkmessungen")
            Me.columnZeitpunkt = MyBase.Columns("Zeitpunkt")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnGUID_Partner = New Global.System.Data.DataColumn("GUID_Partner", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Partner)
            Me.columnName_Partner = New Global.System.Data.DataColumn("Name_Partner", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Partner)
            Me.columnGUID_Type_Partner = New Global.System.Data.DataColumn("GUID_Type_Partner", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Type_Partner)
            Me.columnGUID_Trinkmessungen = New Global.System.Data.DataColumn("GUID_Trinkmessungen", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Trinkmessungen)
            Me.columnName_Trinkmessungen = New Global.System.Data.DataColumn("Name_Trinkmessungen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Trinkmessungen)
            Me.columnGUID_Type_Trinkmessungen = New Global.System.Data.DataColumn("GUID_Type_Trinkmessungen", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Type_Trinkmessungen)
            Me.columnZeitpunkt = New Global.System.Data.DataColumn("Zeitpunkt", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZeitpunkt)
            Me.columnGUID_Partner.AllowDBNull = false
            Me.columnName_Partner.AllowDBNull = false
            Me.columnName_Partner.MaxLength = 255
            Me.columnGUID_Type_Partner.AllowDBNull = false
            Me.columnGUID_Trinkmessungen.AllowDBNull = false
            Me.columnName_Trinkmessungen.AllowDBNull = false
            Me.columnName_Trinkmessungen.MaxLength = 255
            Me.columnGUID_Type_Trinkmessungen.AllowDBNull = false
            Me.columnZeitpunkt.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newproc_Trinkmessungen_By_DateRow() As proc_Trinkmessungen_By_DateRow
            Return CType(Me.NewRow,proc_Trinkmessungen_By_DateRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New proc_Trinkmessungen_By_DateRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(proc_Trinkmessungen_By_DateRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.proc_Trinkmessungen_By_DateRowChangedEvent) Is Nothing) Then
                RaiseEvent proc_Trinkmessungen_By_DateRowChanged(Me, New proc_Trinkmessungen_By_DateRowChangeEvent(CType(e.Row,proc_Trinkmessungen_By_DateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.proc_Trinkmessungen_By_DateRowChangingEvent) Is Nothing) Then
                RaiseEvent proc_Trinkmessungen_By_DateRowChanging(Me, New proc_Trinkmessungen_By_DateRowChangeEvent(CType(e.Row,proc_Trinkmessungen_By_DateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.proc_Trinkmessungen_By_DateRowDeletedEvent) Is Nothing) Then
                RaiseEvent proc_Trinkmessungen_By_DateRowDeleted(Me, New proc_Trinkmessungen_By_DateRowChangeEvent(CType(e.Row,proc_Trinkmessungen_By_DateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.proc_Trinkmessungen_By_DateRowDeletingEvent) Is Nothing) Then
                RaiseEvent proc_Trinkmessungen_By_DateRowDeleting(Me, New proc_Trinkmessungen_By_DateRowChangeEvent(CType(e.Row,proc_Trinkmessungen_By_DateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removeproc_Trinkmessungen_By_DateRow(ByVal row As proc_Trinkmessungen_By_DateRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsBabyModule = New dsBabyModule()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "proc_Trinkmessungen_By_DateDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class proc_TrinkmessungenDataTable
        Inherits Global.System.Data.TypedTableBase(Of proc_TrinkmessungenRow)
        
        Private columnGUID_Trinkmessungen As Global.System.Data.DataColumn
        
        Private columnName_Trinkmessungen As Global.System.Data.DataColumn
        
        Private columnGUID_Type_Trinkmessungen As Global.System.Data.DataColumn
        
        Private columnGUID_Partner As Global.System.Data.DataColumn
        
        Private columnName_Partner As Global.System.Data.DataColumn
        
        Private columnGUID_Token_Attribute_Zeitpunkt As Global.System.Data.DataColumn
        
        Private columnZeitpunkt As Global.System.Data.DataColumn
        
        Private columnGUID_TokenAttribute_Trinkprobleme As Global.System.Data.DataColumn
        
        Private columnTrinkprobleme As Global.System.Data.DataColumn
        
        Private columnGUID_TokenAttribute_Eigeninitiative As Global.System.Data.DataColumn
        
        Private columnEigeninitiative As Global.System.Data.DataColumn
        
        Private columnCount_Bestandteile As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "proc_Trinkmessungen"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_TrinkmessungenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Trinkmessungen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_TrinkmessungenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Trinkmessungen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Type_TrinkmessungenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Type_Trinkmessungen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_PartnerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Partner
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_PartnerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Partner
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Token_Attribute_ZeitpunktColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Token_Attribute_Zeitpunkt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ZeitpunktColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZeitpunkt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_TokenAttribute_TrinkproblemeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_TokenAttribute_Trinkprobleme
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TrinkproblemeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTrinkprobleme
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_TokenAttribute_EigeninitiativeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_TokenAttribute_Eigeninitiative
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EigeninitiativeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEigeninitiative
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Count_BestandteileColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCount_Bestandteile
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As proc_TrinkmessungenRow
            Get
                Return CType(Me.Rows(index),proc_TrinkmessungenRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_TrinkmessungenRowChanging As proc_TrinkmessungenRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_TrinkmessungenRowChanged As proc_TrinkmessungenRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_TrinkmessungenRowDeleting As proc_TrinkmessungenRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_TrinkmessungenRowDeleted As proc_TrinkmessungenRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addproc_TrinkmessungenRow(ByVal row As proc_TrinkmessungenRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addproc_TrinkmessungenRow(ByVal GUID_Trinkmessungen As System.Guid, ByVal Name_Trinkmessungen As String, ByVal GUID_Type_Trinkmessungen As System.Guid, ByVal GUID_Partner As System.Guid, ByVal Name_Partner As String, ByVal GUID_Token_Attribute_Zeitpunkt As System.Guid, ByVal Zeitpunkt As Date, ByVal GUID_TokenAttribute_Trinkprobleme As System.Guid, ByVal Trinkprobleme As Boolean, ByVal GUID_TokenAttribute_Eigeninitiative As System.Guid, ByVal Eigeninitiative As Boolean, ByVal Count_Bestandteile As Integer) As proc_TrinkmessungenRow
            Dim rowproc_TrinkmessungenRow As proc_TrinkmessungenRow = CType(Me.NewRow,proc_TrinkmessungenRow)
            Dim columnValuesArray() As Object = New Object() {GUID_Trinkmessungen, Name_Trinkmessungen, GUID_Type_Trinkmessungen, GUID_Partner, Name_Partner, GUID_Token_Attribute_Zeitpunkt, Zeitpunkt, GUID_TokenAttribute_Trinkprobleme, Trinkprobleme, GUID_TokenAttribute_Eigeninitiative, Eigeninitiative, Count_Bestandteile}
            rowproc_TrinkmessungenRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowproc_TrinkmessungenRow)
            Return rowproc_TrinkmessungenRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As proc_TrinkmessungenDataTable = CType(MyBase.Clone,proc_TrinkmessungenDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New proc_TrinkmessungenDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnGUID_Trinkmessungen = MyBase.Columns("GUID_Trinkmessungen")
            Me.columnName_Trinkmessungen = MyBase.Columns("Name_Trinkmessungen")
            Me.columnGUID_Type_Trinkmessungen = MyBase.Columns("GUID_Type_Trinkmessungen")
            Me.columnGUID_Partner = MyBase.Columns("GUID_Partner")
            Me.columnName_Partner = MyBase.Columns("Name_Partner")
            Me.columnGUID_Token_Attribute_Zeitpunkt = MyBase.Columns("GUID_Token_Attribute_Zeitpunkt")
            Me.columnZeitpunkt = MyBase.Columns("Zeitpunkt")
            Me.columnGUID_TokenAttribute_Trinkprobleme = MyBase.Columns("GUID_TokenAttribute_Trinkprobleme")
            Me.columnTrinkprobleme = MyBase.Columns("Trinkprobleme")
            Me.columnGUID_TokenAttribute_Eigeninitiative = MyBase.Columns("GUID_TokenAttribute_Eigeninitiative")
            Me.columnEigeninitiative = MyBase.Columns("Eigeninitiative")
            Me.columnCount_Bestandteile = MyBase.Columns("Count_Bestandteile")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnGUID_Trinkmessungen = New Global.System.Data.DataColumn("GUID_Trinkmessungen", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Trinkmessungen)
            Me.columnName_Trinkmessungen = New Global.System.Data.DataColumn("Name_Trinkmessungen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Trinkmessungen)
            Me.columnGUID_Type_Trinkmessungen = New Global.System.Data.DataColumn("GUID_Type_Trinkmessungen", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Type_Trinkmessungen)
            Me.columnGUID_Partner = New Global.System.Data.DataColumn("GUID_Partner", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Partner)
            Me.columnName_Partner = New Global.System.Data.DataColumn("Name_Partner", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Partner)
            Me.columnGUID_Token_Attribute_Zeitpunkt = New Global.System.Data.DataColumn("GUID_Token_Attribute_Zeitpunkt", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Token_Attribute_Zeitpunkt)
            Me.columnZeitpunkt = New Global.System.Data.DataColumn("Zeitpunkt", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZeitpunkt)
            Me.columnGUID_TokenAttribute_Trinkprobleme = New Global.System.Data.DataColumn("GUID_TokenAttribute_Trinkprobleme", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_TokenAttribute_Trinkprobleme)
            Me.columnTrinkprobleme = New Global.System.Data.DataColumn("Trinkprobleme", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTrinkprobleme)
            Me.columnGUID_TokenAttribute_Eigeninitiative = New Global.System.Data.DataColumn("GUID_TokenAttribute_Eigeninitiative", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_TokenAttribute_Eigeninitiative)
            Me.columnEigeninitiative = New Global.System.Data.DataColumn("Eigeninitiative", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEigeninitiative)
            Me.columnCount_Bestandteile = New Global.System.Data.DataColumn("Count_Bestandteile", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCount_Bestandteile)
            Me.columnGUID_Trinkmessungen.AllowDBNull = false
            Me.columnName_Trinkmessungen.AllowDBNull = false
            Me.columnName_Trinkmessungen.MaxLength = 255
            Me.columnGUID_Type_Trinkmessungen.AllowDBNull = false
            Me.columnGUID_Partner.AllowDBNull = false
            Me.columnName_Partner.AllowDBNull = false
            Me.columnName_Partner.MaxLength = 255
            Me.columnGUID_Token_Attribute_Zeitpunkt.AllowDBNull = false
            Me.columnZeitpunkt.AllowDBNull = false
            Me.columnGUID_TokenAttribute_Eigeninitiative.AllowDBNull = false
            Me.columnEigeninitiative.AllowDBNull = false
            Me.columnCount_Bestandteile.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newproc_TrinkmessungenRow() As proc_TrinkmessungenRow
            Return CType(Me.NewRow,proc_TrinkmessungenRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New proc_TrinkmessungenRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(proc_TrinkmessungenRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.proc_TrinkmessungenRowChangedEvent) Is Nothing) Then
                RaiseEvent proc_TrinkmessungenRowChanged(Me, New proc_TrinkmessungenRowChangeEvent(CType(e.Row,proc_TrinkmessungenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.proc_TrinkmessungenRowChangingEvent) Is Nothing) Then
                RaiseEvent proc_TrinkmessungenRowChanging(Me, New proc_TrinkmessungenRowChangeEvent(CType(e.Row,proc_TrinkmessungenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.proc_TrinkmessungenRowDeletedEvent) Is Nothing) Then
                RaiseEvent proc_TrinkmessungenRowDeleted(Me, New proc_TrinkmessungenRowChangeEvent(CType(e.Row,proc_TrinkmessungenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.proc_TrinkmessungenRowDeletingEvent) Is Nothing) Then
                RaiseEvent proc_TrinkmessungenRowDeleting(Me, New proc_TrinkmessungenRowChangeEvent(CType(e.Row,proc_TrinkmessungenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removeproc_TrinkmessungenRow(ByVal row As proc_TrinkmessungenRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsBabyModule = New dsBabyModule()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "proc_TrinkmessungenDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class proc_Trinkbestandteile_Of_MessungDataTable
        Inherits Global.System.Data.TypedTableBase(Of proc_Trinkbestandteile_Of_MessungRow)
        
        Private columnGUID_Trinkbestandteil As Global.System.Data.DataColumn
        
        Private columnName_Trinkbestandteil As Global.System.Data.DataColumn
        
        Private columnGUID_Type_Trinkbestandteil As Global.System.Data.DataColumn
        
        Private columnMenge As Global.System.Data.DataColumn
        
        Private columnName_Einheit As Global.System.Data.DataColumn
        
        Private columnGUID_Menge As Global.System.Data.DataColumn
        
        Private columnName_Menge As Global.System.Data.DataColumn
        
        Private columnGUID_Type_Menge As Global.System.Data.DataColumn
        
        Private columnGUID_Einheit As Global.System.Data.DataColumn
        
        Private columnGUID_Type_Einheit As Global.System.Data.DataColumn
        
        Private columnGUID_TokenAttribute_Menge As Global.System.Data.DataColumn
        
        Private columnGUID_Nahrung As Global.System.Data.DataColumn
        
        Private columnName_Nahrung As Global.System.Data.DataColumn
        
        Private columnGUID_Type_Nahrung As Global.System.Data.DataColumn
        
        Private columnGUID_Medikamente As Global.System.Data.DataColumn
        
        Private columnName_Medikamente As Global.System.Data.DataColumn
        
        Private columnGUID_Type_Medikamente As Global.System.Data.DataColumn
        
        Private columnGUID_Trinkmessung As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "proc_Trinkbestandteile_Of_Messung"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_TrinkbestandteilColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Trinkbestandteil
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_TrinkbestandteilColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Trinkbestandteil
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Type_TrinkbestandteilColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Type_Trinkbestandteil
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MengeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMenge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_EinheitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Einheit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_MengeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Menge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_MengeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Menge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Type_MengeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Type_Menge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_EinheitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Einheit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Type_EinheitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Type_Einheit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_TokenAttribute_MengeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_TokenAttribute_Menge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_NahrungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Nahrung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_NahrungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Nahrung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Type_NahrungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Type_Nahrung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_MedikamenteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Medikamente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_MedikamenteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Medikamente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Type_MedikamenteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Type_Medikamente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_TrinkmessungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Trinkmessung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As proc_Trinkbestandteile_Of_MessungRow
            Get
                Return CType(Me.Rows(index),proc_Trinkbestandteile_Of_MessungRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_Trinkbestandteile_Of_MessungRowChanging As proc_Trinkbestandteile_Of_MessungRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_Trinkbestandteile_Of_MessungRowChanged As proc_Trinkbestandteile_Of_MessungRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_Trinkbestandteile_Of_MessungRowDeleting As proc_Trinkbestandteile_Of_MessungRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_Trinkbestandteile_Of_MessungRowDeleted As proc_Trinkbestandteile_Of_MessungRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addproc_Trinkbestandteile_Of_MessungRow(ByVal row As proc_Trinkbestandteile_Of_MessungRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addproc_Trinkbestandteile_Of_MessungRow( _
                    ByVal GUID_Trinkbestandteil As System.Guid,  _
                    ByVal Name_Trinkbestandteil As String,  _
                    ByVal GUID_Type_Trinkbestandteil As System.Guid,  _
                    ByVal Menge As Single,  _
                    ByVal Name_Einheit As String,  _
                    ByVal GUID_Menge As System.Guid,  _
                    ByVal Name_Menge As String,  _
                    ByVal GUID_Type_Menge As System.Guid,  _
                    ByVal GUID_Einheit As System.Guid,  _
                    ByVal GUID_Type_Einheit As System.Guid,  _
                    ByVal GUID_TokenAttribute_Menge As System.Guid,  _
                    ByVal GUID_Nahrung As System.Guid,  _
                    ByVal Name_Nahrung As String,  _
                    ByVal GUID_Type_Nahrung As System.Guid,  _
                    ByVal GUID_Medikamente As System.Guid,  _
                    ByVal Name_Medikamente As String,  _
                    ByVal GUID_Type_Medikamente As System.Guid,  _
                    ByVal GUID_Trinkmessung As System.Guid) As proc_Trinkbestandteile_Of_MessungRow
            Dim rowproc_Trinkbestandteile_Of_MessungRow As proc_Trinkbestandteile_Of_MessungRow = CType(Me.NewRow,proc_Trinkbestandteile_Of_MessungRow)
            Dim columnValuesArray() As Object = New Object() {GUID_Trinkbestandteil, Name_Trinkbestandteil, GUID_Type_Trinkbestandteil, Menge, Name_Einheit, GUID_Menge, Name_Menge, GUID_Type_Menge, GUID_Einheit, GUID_Type_Einheit, GUID_TokenAttribute_Menge, GUID_Nahrung, Name_Nahrung, GUID_Type_Nahrung, GUID_Medikamente, Name_Medikamente, GUID_Type_Medikamente, GUID_Trinkmessung}
            rowproc_Trinkbestandteile_Of_MessungRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowproc_Trinkbestandteile_Of_MessungRow)
            Return rowproc_Trinkbestandteile_Of_MessungRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As proc_Trinkbestandteile_Of_MessungDataTable = CType(MyBase.Clone,proc_Trinkbestandteile_Of_MessungDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New proc_Trinkbestandteile_Of_MessungDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnGUID_Trinkbestandteil = MyBase.Columns("GUID_Trinkbestandteil")
            Me.columnName_Trinkbestandteil = MyBase.Columns("Name_Trinkbestandteil")
            Me.columnGUID_Type_Trinkbestandteil = MyBase.Columns("GUID_Type_Trinkbestandteil")
            Me.columnMenge = MyBase.Columns("Menge")
            Me.columnName_Einheit = MyBase.Columns("Name_Einheit")
            Me.columnGUID_Menge = MyBase.Columns("GUID_Menge")
            Me.columnName_Menge = MyBase.Columns("Name_Menge")
            Me.columnGUID_Type_Menge = MyBase.Columns("GUID_Type_Menge")
            Me.columnGUID_Einheit = MyBase.Columns("GUID_Einheit")
            Me.columnGUID_Type_Einheit = MyBase.Columns("GUID_Type_Einheit")
            Me.columnGUID_TokenAttribute_Menge = MyBase.Columns("GUID_TokenAttribute_Menge")
            Me.columnGUID_Nahrung = MyBase.Columns("GUID_Nahrung")
            Me.columnName_Nahrung = MyBase.Columns("Name_Nahrung")
            Me.columnGUID_Type_Nahrung = MyBase.Columns("GUID_Type_Nahrung")
            Me.columnGUID_Medikamente = MyBase.Columns("GUID_Medikamente")
            Me.columnName_Medikamente = MyBase.Columns("Name_Medikamente")
            Me.columnGUID_Type_Medikamente = MyBase.Columns("GUID_Type_Medikamente")
            Me.columnGUID_Trinkmessung = MyBase.Columns("GUID_Trinkmessung")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnGUID_Trinkbestandteil = New Global.System.Data.DataColumn("GUID_Trinkbestandteil", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Trinkbestandteil)
            Me.columnName_Trinkbestandteil = New Global.System.Data.DataColumn("Name_Trinkbestandteil", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Trinkbestandteil)
            Me.columnGUID_Type_Trinkbestandteil = New Global.System.Data.DataColumn("GUID_Type_Trinkbestandteil", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Type_Trinkbestandteil)
            Me.columnMenge = New Global.System.Data.DataColumn("Menge", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMenge)
            Me.columnName_Einheit = New Global.System.Data.DataColumn("Name_Einheit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Einheit)
            Me.columnGUID_Menge = New Global.System.Data.DataColumn("GUID_Menge", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Menge)
            Me.columnName_Menge = New Global.System.Data.DataColumn("Name_Menge", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Menge)
            Me.columnGUID_Type_Menge = New Global.System.Data.DataColumn("GUID_Type_Menge", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Type_Menge)
            Me.columnGUID_Einheit = New Global.System.Data.DataColumn("GUID_Einheit", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Einheit)
            Me.columnGUID_Type_Einheit = New Global.System.Data.DataColumn("GUID_Type_Einheit", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Type_Einheit)
            Me.columnGUID_TokenAttribute_Menge = New Global.System.Data.DataColumn("GUID_TokenAttribute_Menge", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_TokenAttribute_Menge)
            Me.columnGUID_Nahrung = New Global.System.Data.DataColumn("GUID_Nahrung", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Nahrung)
            Me.columnName_Nahrung = New Global.System.Data.DataColumn("Name_Nahrung", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Nahrung)
            Me.columnGUID_Type_Nahrung = New Global.System.Data.DataColumn("GUID_Type_Nahrung", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Type_Nahrung)
            Me.columnGUID_Medikamente = New Global.System.Data.DataColumn("GUID_Medikamente", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Medikamente)
            Me.columnName_Medikamente = New Global.System.Data.DataColumn("Name_Medikamente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Medikamente)
            Me.columnGUID_Type_Medikamente = New Global.System.Data.DataColumn("GUID_Type_Medikamente", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Type_Medikamente)
            Me.columnGUID_Trinkmessung = New Global.System.Data.DataColumn("GUID_Trinkmessung", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Trinkmessung)
            Me.columnName_Trinkbestandteil.MaxLength = 255
            Me.columnName_Einheit.MaxLength = 255
            Me.columnName_Menge.MaxLength = 255
            Me.columnName_Nahrung.MaxLength = 255
            Me.columnName_Medikamente.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newproc_Trinkbestandteile_Of_MessungRow() As proc_Trinkbestandteile_Of_MessungRow
            Return CType(Me.NewRow,proc_Trinkbestandteile_Of_MessungRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New proc_Trinkbestandteile_Of_MessungRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(proc_Trinkbestandteile_Of_MessungRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.proc_Trinkbestandteile_Of_MessungRowChangedEvent) Is Nothing) Then
                RaiseEvent proc_Trinkbestandteile_Of_MessungRowChanged(Me, New proc_Trinkbestandteile_Of_MessungRowChangeEvent(CType(e.Row,proc_Trinkbestandteile_Of_MessungRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.proc_Trinkbestandteile_Of_MessungRowChangingEvent) Is Nothing) Then
                RaiseEvent proc_Trinkbestandteile_Of_MessungRowChanging(Me, New proc_Trinkbestandteile_Of_MessungRowChangeEvent(CType(e.Row,proc_Trinkbestandteile_Of_MessungRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.proc_Trinkbestandteile_Of_MessungRowDeletedEvent) Is Nothing) Then
                RaiseEvent proc_Trinkbestandteile_Of_MessungRowDeleted(Me, New proc_Trinkbestandteile_Of_MessungRowChangeEvent(CType(e.Row,proc_Trinkbestandteile_Of_MessungRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.proc_Trinkbestandteile_Of_MessungRowDeletingEvent) Is Nothing) Then
                RaiseEvent proc_Trinkbestandteile_Of_MessungRowDeleting(Me, New proc_Trinkbestandteile_Of_MessungRowChangeEvent(CType(e.Row,proc_Trinkbestandteile_Of_MessungRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removeproc_Trinkbestandteile_Of_MessungRow(ByVal row As proc_Trinkbestandteile_Of_MessungRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsBabyModule = New dsBabyModule()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "proc_Trinkbestandteile_Of_MessungDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class proc_TrinkbestandteilDataTable
        Inherits Global.System.Data.TypedTableBase(Of proc_TrinkbestandteilRow)
        
        Private columnGUID_Trinkbestandteil As Global.System.Data.DataColumn
        
        Private columnName_Trinkbestandteil As Global.System.Data.DataColumn
        
        Private columnGUID_Type_Trinkbestandteil As Global.System.Data.DataColumn
        
        Private columnMenge As Global.System.Data.DataColumn
        
        Private columnName_Einheit As Global.System.Data.DataColumn
        
        Private columnGUID_Menge As Global.System.Data.DataColumn
        
        Private columnName_Menge As Global.System.Data.DataColumn
        
        Private columnGUID_Type_Menge As Global.System.Data.DataColumn
        
        Private columnGUID_Einheit As Global.System.Data.DataColumn
        
        Private columnGUID_Type_Einheit As Global.System.Data.DataColumn
        
        Private columnGUID_TokenAttribute_Menge As Global.System.Data.DataColumn
        
        Private columnGUID_Nahrung As Global.System.Data.DataColumn
        
        Private columnName_Nahrung As Global.System.Data.DataColumn
        
        Private columnGUID_Type_Nahrung As Global.System.Data.DataColumn
        
        Private columnGUID_Medikamente As Global.System.Data.DataColumn
        
        Private columnName_Medikamente As Global.System.Data.DataColumn
        
        Private columnGUID_Type_Medikamente As Global.System.Data.DataColumn
        
        Private columnGUID_Trinkmessung As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "proc_Trinkbestandteil"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_TrinkbestandteilColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Trinkbestandteil
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_TrinkbestandteilColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Trinkbestandteil
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Type_TrinkbestandteilColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Type_Trinkbestandteil
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MengeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMenge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_EinheitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Einheit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_MengeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Menge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_MengeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Menge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Type_MengeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Type_Menge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_EinheitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Einheit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Type_EinheitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Type_Einheit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_TokenAttribute_MengeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_TokenAttribute_Menge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_NahrungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Nahrung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_NahrungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Nahrung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Type_NahrungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Type_Nahrung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_MedikamenteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Medikamente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_MedikamenteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Medikamente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Type_MedikamenteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Type_Medikamente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_TrinkmessungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Trinkmessung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As proc_TrinkbestandteilRow
            Get
                Return CType(Me.Rows(index),proc_TrinkbestandteilRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_TrinkbestandteilRowChanging As proc_TrinkbestandteilRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_TrinkbestandteilRowChanged As proc_TrinkbestandteilRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_TrinkbestandteilRowDeleting As proc_TrinkbestandteilRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_TrinkbestandteilRowDeleted As proc_TrinkbestandteilRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addproc_TrinkbestandteilRow(ByVal row As proc_TrinkbestandteilRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addproc_TrinkbestandteilRow( _
                    ByVal GUID_Trinkbestandteil As System.Guid,  _
                    ByVal Name_Trinkbestandteil As String,  _
                    ByVal GUID_Type_Trinkbestandteil As System.Guid,  _
                    ByVal Menge As Single,  _
                    ByVal Name_Einheit As String,  _
                    ByVal GUID_Menge As System.Guid,  _
                    ByVal Name_Menge As String,  _
                    ByVal GUID_Type_Menge As System.Guid,  _
                    ByVal GUID_Einheit As System.Guid,  _
                    ByVal GUID_Type_Einheit As System.Guid,  _
                    ByVal GUID_TokenAttribute_Menge As System.Guid,  _
                    ByVal GUID_Nahrung As System.Guid,  _
                    ByVal Name_Nahrung As String,  _
                    ByVal GUID_Type_Nahrung As System.Guid,  _
                    ByVal GUID_Medikamente As System.Guid,  _
                    ByVal Name_Medikamente As String,  _
                    ByVal GUID_Type_Medikamente As System.Guid,  _
                    ByVal GUID_Trinkmessung As System.Guid) As proc_TrinkbestandteilRow
            Dim rowproc_TrinkbestandteilRow As proc_TrinkbestandteilRow = CType(Me.NewRow,proc_TrinkbestandteilRow)
            Dim columnValuesArray() As Object = New Object() {GUID_Trinkbestandteil, Name_Trinkbestandteil, GUID_Type_Trinkbestandteil, Menge, Name_Einheit, GUID_Menge, Name_Menge, GUID_Type_Menge, GUID_Einheit, GUID_Type_Einheit, GUID_TokenAttribute_Menge, GUID_Nahrung, Name_Nahrung, GUID_Type_Nahrung, GUID_Medikamente, Name_Medikamente, GUID_Type_Medikamente, GUID_Trinkmessung}
            rowproc_TrinkbestandteilRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowproc_TrinkbestandteilRow)
            Return rowproc_TrinkbestandteilRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As proc_TrinkbestandteilDataTable = CType(MyBase.Clone,proc_TrinkbestandteilDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New proc_TrinkbestandteilDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnGUID_Trinkbestandteil = MyBase.Columns("GUID_Trinkbestandteil")
            Me.columnName_Trinkbestandteil = MyBase.Columns("Name_Trinkbestandteil")
            Me.columnGUID_Type_Trinkbestandteil = MyBase.Columns("GUID_Type_Trinkbestandteil")
            Me.columnMenge = MyBase.Columns("Menge")
            Me.columnName_Einheit = MyBase.Columns("Name_Einheit")
            Me.columnGUID_Menge = MyBase.Columns("GUID_Menge")
            Me.columnName_Menge = MyBase.Columns("Name_Menge")
            Me.columnGUID_Type_Menge = MyBase.Columns("GUID_Type_Menge")
            Me.columnGUID_Einheit = MyBase.Columns("GUID_Einheit")
            Me.columnGUID_Type_Einheit = MyBase.Columns("GUID_Type_Einheit")
            Me.columnGUID_TokenAttribute_Menge = MyBase.Columns("GUID_TokenAttribute_Menge")
            Me.columnGUID_Nahrung = MyBase.Columns("GUID_Nahrung")
            Me.columnName_Nahrung = MyBase.Columns("Name_Nahrung")
            Me.columnGUID_Type_Nahrung = MyBase.Columns("GUID_Type_Nahrung")
            Me.columnGUID_Medikamente = MyBase.Columns("GUID_Medikamente")
            Me.columnName_Medikamente = MyBase.Columns("Name_Medikamente")
            Me.columnGUID_Type_Medikamente = MyBase.Columns("GUID_Type_Medikamente")
            Me.columnGUID_Trinkmessung = MyBase.Columns("GUID_Trinkmessung")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnGUID_Trinkbestandteil = New Global.System.Data.DataColumn("GUID_Trinkbestandteil", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Trinkbestandteil)
            Me.columnName_Trinkbestandteil = New Global.System.Data.DataColumn("Name_Trinkbestandteil", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Trinkbestandteil)
            Me.columnGUID_Type_Trinkbestandteil = New Global.System.Data.DataColumn("GUID_Type_Trinkbestandteil", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Type_Trinkbestandteil)
            Me.columnMenge = New Global.System.Data.DataColumn("Menge", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMenge)
            Me.columnName_Einheit = New Global.System.Data.DataColumn("Name_Einheit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Einheit)
            Me.columnGUID_Menge = New Global.System.Data.DataColumn("GUID_Menge", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Menge)
            Me.columnName_Menge = New Global.System.Data.DataColumn("Name_Menge", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Menge)
            Me.columnGUID_Type_Menge = New Global.System.Data.DataColumn("GUID_Type_Menge", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Type_Menge)
            Me.columnGUID_Einheit = New Global.System.Data.DataColumn("GUID_Einheit", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Einheit)
            Me.columnGUID_Type_Einheit = New Global.System.Data.DataColumn("GUID_Type_Einheit", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Type_Einheit)
            Me.columnGUID_TokenAttribute_Menge = New Global.System.Data.DataColumn("GUID_TokenAttribute_Menge", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_TokenAttribute_Menge)
            Me.columnGUID_Nahrung = New Global.System.Data.DataColumn("GUID_Nahrung", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Nahrung)
            Me.columnName_Nahrung = New Global.System.Data.DataColumn("Name_Nahrung", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Nahrung)
            Me.columnGUID_Type_Nahrung = New Global.System.Data.DataColumn("GUID_Type_Nahrung", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Type_Nahrung)
            Me.columnGUID_Medikamente = New Global.System.Data.DataColumn("GUID_Medikamente", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Medikamente)
            Me.columnName_Medikamente = New Global.System.Data.DataColumn("Name_Medikamente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Medikamente)
            Me.columnGUID_Type_Medikamente = New Global.System.Data.DataColumn("GUID_Type_Medikamente", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Type_Medikamente)
            Me.columnGUID_Trinkmessung = New Global.System.Data.DataColumn("GUID_Trinkmessung", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Trinkmessung)
            Me.columnName_Trinkbestandteil.MaxLength = 255
            Me.columnName_Einheit.MaxLength = 255
            Me.columnName_Menge.MaxLength = 255
            Me.columnName_Nahrung.MaxLength = 255
            Me.columnName_Medikamente.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newproc_TrinkbestandteilRow() As proc_TrinkbestandteilRow
            Return CType(Me.NewRow,proc_TrinkbestandteilRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New proc_TrinkbestandteilRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(proc_TrinkbestandteilRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.proc_TrinkbestandteilRowChangedEvent) Is Nothing) Then
                RaiseEvent proc_TrinkbestandteilRowChanged(Me, New proc_TrinkbestandteilRowChangeEvent(CType(e.Row,proc_TrinkbestandteilRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.proc_TrinkbestandteilRowChangingEvent) Is Nothing) Then
                RaiseEvent proc_TrinkbestandteilRowChanging(Me, New proc_TrinkbestandteilRowChangeEvent(CType(e.Row,proc_TrinkbestandteilRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.proc_TrinkbestandteilRowDeletedEvent) Is Nothing) Then
                RaiseEvent proc_TrinkbestandteilRowDeleted(Me, New proc_TrinkbestandteilRowChangeEvent(CType(e.Row,proc_TrinkbestandteilRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.proc_TrinkbestandteilRowDeletingEvent) Is Nothing) Then
                RaiseEvent proc_TrinkbestandteilRowDeleting(Me, New proc_TrinkbestandteilRowChangeEvent(CType(e.Row,proc_TrinkbestandteilRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removeproc_TrinkbestandteilRow(ByVal row As proc_TrinkbestandteilRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsBabyModule = New dsBabyModule()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "proc_TrinkbestandteilDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class proc_Mengen_Of_Day_By_EinheitDataTable
        Inherits Global.System.Data.TypedTableBase(Of proc_Mengen_Of_Day_By_EinheitRow)
        
        Private columnYear As Global.System.Data.DataColumn
        
        Private columnWeek As Global.System.Data.DataColumn
        
        Private columnWeekday As Global.System.Data.DataColumn
        
        Private columnMenge As Global.System.Data.DataColumn
        
        Private columnName_Einheit As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "proc_Mengen_Of_Day_By_Einheit"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property YearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYear
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WeekColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWeek
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WeekdayColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWeekday
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MengeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMenge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_EinheitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Einheit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As proc_Mengen_Of_Day_By_EinheitRow
            Get
                Return CType(Me.Rows(index),proc_Mengen_Of_Day_By_EinheitRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_Mengen_Of_Day_By_EinheitRowChanging As proc_Mengen_Of_Day_By_EinheitRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_Mengen_Of_Day_By_EinheitRowChanged As proc_Mengen_Of_Day_By_EinheitRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_Mengen_Of_Day_By_EinheitRowDeleting As proc_Mengen_Of_Day_By_EinheitRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_Mengen_Of_Day_By_EinheitRowDeleted As proc_Mengen_Of_Day_By_EinheitRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addproc_Mengen_Of_Day_By_EinheitRow(ByVal row As proc_Mengen_Of_Day_By_EinheitRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addproc_Mengen_Of_Day_By_EinheitRow(ByVal Year As Integer, ByVal Week As Integer, ByVal Weekday As String, ByVal Menge As Double, ByVal Name_Einheit As String) As proc_Mengen_Of_Day_By_EinheitRow
            Dim rowproc_Mengen_Of_Day_By_EinheitRow As proc_Mengen_Of_Day_By_EinheitRow = CType(Me.NewRow,proc_Mengen_Of_Day_By_EinheitRow)
            Dim columnValuesArray() As Object = New Object() {Year, Week, Weekday, Menge, Name_Einheit}
            rowproc_Mengen_Of_Day_By_EinheitRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowproc_Mengen_Of_Day_By_EinheitRow)
            Return rowproc_Mengen_Of_Day_By_EinheitRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As proc_Mengen_Of_Day_By_EinheitDataTable = CType(MyBase.Clone,proc_Mengen_Of_Day_By_EinheitDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New proc_Mengen_Of_Day_By_EinheitDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnYear = MyBase.Columns("Year")
            Me.columnWeek = MyBase.Columns("Week")
            Me.columnWeekday = MyBase.Columns("Weekday")
            Me.columnMenge = MyBase.Columns("Menge")
            Me.columnName_Einheit = MyBase.Columns("Name_Einheit")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnYear = New Global.System.Data.DataColumn("Year", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYear)
            Me.columnWeek = New Global.System.Data.DataColumn("Week", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWeek)
            Me.columnWeekday = New Global.System.Data.DataColumn("Weekday", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWeekday)
            Me.columnMenge = New Global.System.Data.DataColumn("Menge", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMenge)
            Me.columnName_Einheit = New Global.System.Data.DataColumn("Name_Einheit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Einheit)
            Me.columnYear.ReadOnly = true
            Me.columnWeek.ReadOnly = true
            Me.columnWeekday.ReadOnly = true
            Me.columnWeekday.MaxLength = 30
            Me.columnMenge.ReadOnly = true
            Me.columnName_Einheit.AllowDBNull = false
            Me.columnName_Einheit.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newproc_Mengen_Of_Day_By_EinheitRow() As proc_Mengen_Of_Day_By_EinheitRow
            Return CType(Me.NewRow,proc_Mengen_Of_Day_By_EinheitRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New proc_Mengen_Of_Day_By_EinheitRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(proc_Mengen_Of_Day_By_EinheitRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.proc_Mengen_Of_Day_By_EinheitRowChangedEvent) Is Nothing) Then
                RaiseEvent proc_Mengen_Of_Day_By_EinheitRowChanged(Me, New proc_Mengen_Of_Day_By_EinheitRowChangeEvent(CType(e.Row,proc_Mengen_Of_Day_By_EinheitRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.proc_Mengen_Of_Day_By_EinheitRowChangingEvent) Is Nothing) Then
                RaiseEvent proc_Mengen_Of_Day_By_EinheitRowChanging(Me, New proc_Mengen_Of_Day_By_EinheitRowChangeEvent(CType(e.Row,proc_Mengen_Of_Day_By_EinheitRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.proc_Mengen_Of_Day_By_EinheitRowDeletedEvent) Is Nothing) Then
                RaiseEvent proc_Mengen_Of_Day_By_EinheitRowDeleted(Me, New proc_Mengen_Of_Day_By_EinheitRowChangeEvent(CType(e.Row,proc_Mengen_Of_Day_By_EinheitRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.proc_Mengen_Of_Day_By_EinheitRowDeletingEvent) Is Nothing) Then
                RaiseEvent proc_Mengen_Of_Day_By_EinheitRowDeleting(Me, New proc_Mengen_Of_Day_By_EinheitRowChangeEvent(CType(e.Row,proc_Mengen_Of_Day_By_EinheitRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removeproc_Mengen_Of_Day_By_EinheitRow(ByVal row As proc_Mengen_Of_Day_By_EinheitRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsBabyModule = New dsBabyModule()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "proc_Mengen_Of_Day_By_EinheitDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class proc_ProblemeDataTable
        Inherits Global.System.Data.TypedTableBase(Of proc_ProblemeRow)
        
        Private columnGUID_Probleme__Baby_ As Global.System.Data.DataColumn
        
        Private columnName_Probleme__Baby_ As Global.System.Data.DataColumn
        
        Private columnGUID_Type_Probleme__Baby_ As Global.System.Data.DataColumn
        
        Private columnGUID_Problemarten As Global.System.Data.DataColumn
        
        Private columnName_Problemarten As Global.System.Data.DataColumn
        
        Private columnGUID_Type_Problemarten As Global.System.Data.DataColumn
        
        Private columnGUID_TokenAttribute_Startdate As Global.System.Data.DataColumn
        
        Private columnStartDate As Global.System.Data.DataColumn
        
        Private columnGUID_TokenAttribute_Ende As Global.System.Data.DataColumn
        
        Private columnEnde As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "proc_Probleme"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Probleme__Baby_Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Probleme__Baby_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_Probleme__Baby_Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Probleme__Baby_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Type_Probleme__Baby_Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Type_Probleme__Baby_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_ProblemartenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Problemarten
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_ProblemartenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Problemarten
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Type_ProblemartenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Type_Problemarten
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_TokenAttribute_StartdateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_TokenAttribute_Startdate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StartDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStartDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_TokenAttribute_EndeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_TokenAttribute_Ende
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EndeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEnde
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As proc_ProblemeRow
            Get
                Return CType(Me.Rows(index),proc_ProblemeRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_ProblemeRowChanging As proc_ProblemeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_ProblemeRowChanged As proc_ProblemeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_ProblemeRowDeleting As proc_ProblemeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_ProblemeRowDeleted As proc_ProblemeRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addproc_ProblemeRow(ByVal row As proc_ProblemeRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addproc_ProblemeRow(ByVal GUID_Probleme__Baby_ As System.Guid, ByVal Name_Probleme__Baby_ As String, ByVal GUID_Type_Probleme__Baby_ As System.Guid, ByVal GUID_Problemarten As System.Guid, ByVal Name_Problemarten As String, ByVal GUID_Type_Problemarten As System.Guid, ByVal GUID_TokenAttribute_Startdate As System.Guid, ByVal StartDate As Date, ByVal GUID_TokenAttribute_Ende As System.Guid, ByVal Ende As Date) As proc_ProblemeRow
            Dim rowproc_ProblemeRow As proc_ProblemeRow = CType(Me.NewRow,proc_ProblemeRow)
            Dim columnValuesArray() As Object = New Object() {GUID_Probleme__Baby_, Name_Probleme__Baby_, GUID_Type_Probleme__Baby_, GUID_Problemarten, Name_Problemarten, GUID_Type_Problemarten, GUID_TokenAttribute_Startdate, StartDate, GUID_TokenAttribute_Ende, Ende}
            rowproc_ProblemeRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowproc_ProblemeRow)
            Return rowproc_ProblemeRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As proc_ProblemeDataTable = CType(MyBase.Clone,proc_ProblemeDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New proc_ProblemeDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnGUID_Probleme__Baby_ = MyBase.Columns("GUID_Probleme__Baby_")
            Me.columnName_Probleme__Baby_ = MyBase.Columns("Name_Probleme__Baby_")
            Me.columnGUID_Type_Probleme__Baby_ = MyBase.Columns("GUID_Type_Probleme__Baby_")
            Me.columnGUID_Problemarten = MyBase.Columns("GUID_Problemarten")
            Me.columnName_Problemarten = MyBase.Columns("Name_Problemarten")
            Me.columnGUID_Type_Problemarten = MyBase.Columns("GUID_Type_Problemarten")
            Me.columnGUID_TokenAttribute_Startdate = MyBase.Columns("GUID_TokenAttribute_Startdate")
            Me.columnStartDate = MyBase.Columns("StartDate")
            Me.columnGUID_TokenAttribute_Ende = MyBase.Columns("GUID_TokenAttribute_Ende")
            Me.columnEnde = MyBase.Columns("Ende")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnGUID_Probleme__Baby_ = New Global.System.Data.DataColumn("GUID_Probleme__Baby_", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Probleme__Baby_)
            Me.columnName_Probleme__Baby_ = New Global.System.Data.DataColumn("Name_Probleme__Baby_", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Probleme__Baby_)
            Me.columnGUID_Type_Probleme__Baby_ = New Global.System.Data.DataColumn("GUID_Type_Probleme__Baby_", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Type_Probleme__Baby_)
            Me.columnGUID_Problemarten = New Global.System.Data.DataColumn("GUID_Problemarten", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Problemarten)
            Me.columnName_Problemarten = New Global.System.Data.DataColumn("Name_Problemarten", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Problemarten)
            Me.columnGUID_Type_Problemarten = New Global.System.Data.DataColumn("GUID_Type_Problemarten", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Type_Problemarten)
            Me.columnGUID_TokenAttribute_Startdate = New Global.System.Data.DataColumn("GUID_TokenAttribute_Startdate", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_TokenAttribute_Startdate)
            Me.columnStartDate = New Global.System.Data.DataColumn("StartDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStartDate)
            Me.columnGUID_TokenAttribute_Ende = New Global.System.Data.DataColumn("GUID_TokenAttribute_Ende", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_TokenAttribute_Ende)
            Me.columnEnde = New Global.System.Data.DataColumn("Ende", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEnde)
            Me.columnGUID_Probleme__Baby_.AllowDBNull = false
            Me.columnName_Probleme__Baby_.AllowDBNull = false
            Me.columnName_Probleme__Baby_.MaxLength = 255
            Me.columnGUID_Type_Probleme__Baby_.AllowDBNull = false
            Me.columnGUID_Problemarten.AllowDBNull = false
            Me.columnName_Problemarten.AllowDBNull = false
            Me.columnName_Problemarten.MaxLength = 255
            Me.columnGUID_Type_Problemarten.AllowDBNull = false
            Me.columnGUID_TokenAttribute_Startdate.AllowDBNull = false
            Me.columnStartDate.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newproc_ProblemeRow() As proc_ProblemeRow
            Return CType(Me.NewRow,proc_ProblemeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New proc_ProblemeRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(proc_ProblemeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.proc_ProblemeRowChangedEvent) Is Nothing) Then
                RaiseEvent proc_ProblemeRowChanged(Me, New proc_ProblemeRowChangeEvent(CType(e.Row,proc_ProblemeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.proc_ProblemeRowChangingEvent) Is Nothing) Then
                RaiseEvent proc_ProblemeRowChanging(Me, New proc_ProblemeRowChangeEvent(CType(e.Row,proc_ProblemeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.proc_ProblemeRowDeletedEvent) Is Nothing) Then
                RaiseEvent proc_ProblemeRowDeleted(Me, New proc_ProblemeRowChangeEvent(CType(e.Row,proc_ProblemeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.proc_ProblemeRowDeletingEvent) Is Nothing) Then
                RaiseEvent proc_ProblemeRowDeleting(Me, New proc_ProblemeRowChangeEvent(CType(e.Row,proc_ProblemeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removeproc_ProblemeRow(ByVal row As proc_ProblemeRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsBabyModule = New dsBabyModule()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "proc_ProblemeDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class proc_BestandteileDataTable
        Inherits Global.System.Data.TypedTableBase(Of proc_BestandteileRow)
        
        Private columnGUID_Bestandteil As Global.System.Data.DataColumn
        
        Private columnName_Bestandteil As Global.System.Data.DataColumn
        
        Private columnGUID_Type_Bestandteil As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "proc_Bestandteile"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_BestandteilColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Bestandteil
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_BestandteilColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Bestandteil
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Type_BestandteilColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Type_Bestandteil
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As proc_BestandteileRow
            Get
                Return CType(Me.Rows(index),proc_BestandteileRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_BestandteileRowChanging As proc_BestandteileRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_BestandteileRowChanged As proc_BestandteileRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_BestandteileRowDeleting As proc_BestandteileRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_BestandteileRowDeleted As proc_BestandteileRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addproc_BestandteileRow(ByVal row As proc_BestandteileRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addproc_BestandteileRow(ByVal GUID_Bestandteil As System.Guid, ByVal Name_Bestandteil As String, ByVal GUID_Type_Bestandteil As System.Guid) As proc_BestandteileRow
            Dim rowproc_BestandteileRow As proc_BestandteileRow = CType(Me.NewRow,proc_BestandteileRow)
            Dim columnValuesArray() As Object = New Object() {GUID_Bestandteil, Name_Bestandteil, GUID_Type_Bestandteil}
            rowproc_BestandteileRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowproc_BestandteileRow)
            Return rowproc_BestandteileRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As proc_BestandteileDataTable = CType(MyBase.Clone,proc_BestandteileDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New proc_BestandteileDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnGUID_Bestandteil = MyBase.Columns("GUID_Bestandteil")
            Me.columnName_Bestandteil = MyBase.Columns("Name_Bestandteil")
            Me.columnGUID_Type_Bestandteil = MyBase.Columns("GUID_Type_Bestandteil")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnGUID_Bestandteil = New Global.System.Data.DataColumn("GUID_Bestandteil", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Bestandteil)
            Me.columnName_Bestandteil = New Global.System.Data.DataColumn("Name_Bestandteil", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Bestandteil)
            Me.columnGUID_Type_Bestandteil = New Global.System.Data.DataColumn("GUID_Type_Bestandteil", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Type_Bestandteil)
            Me.columnGUID_Bestandteil.ReadOnly = true
            Me.columnName_Bestandteil.ReadOnly = true
            Me.columnName_Bestandteil.MaxLength = 255
            Me.columnGUID_Type_Bestandteil.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newproc_BestandteileRow() As proc_BestandteileRow
            Return CType(Me.NewRow,proc_BestandteileRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New proc_BestandteileRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(proc_BestandteileRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.proc_BestandteileRowChangedEvent) Is Nothing) Then
                RaiseEvent proc_BestandteileRowChanged(Me, New proc_BestandteileRowChangeEvent(CType(e.Row,proc_BestandteileRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.proc_BestandteileRowChangingEvent) Is Nothing) Then
                RaiseEvent proc_BestandteileRowChanging(Me, New proc_BestandteileRowChangeEvent(CType(e.Row,proc_BestandteileRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.proc_BestandteileRowDeletedEvent) Is Nothing) Then
                RaiseEvent proc_BestandteileRowDeleted(Me, New proc_BestandteileRowChangeEvent(CType(e.Row,proc_BestandteileRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.proc_BestandteileRowDeletingEvent) Is Nothing) Then
                RaiseEvent proc_BestandteileRowDeleting(Me, New proc_BestandteileRowChangeEvent(CType(e.Row,proc_BestandteileRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removeproc_BestandteileRow(ByVal row As proc_BestandteileRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsBabyModule = New dsBabyModule()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "proc_BestandteileDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class proc_Mengen_Of_DayDataTable
        Inherits Global.System.Data.TypedTableBase(Of proc_Mengen_Of_DayRow)
        
        Private columnYear As Global.System.Data.DataColumn
        
        Private columnWeek As Global.System.Data.DataColumn
        
        Private columnWeekday As Global.System.Data.DataColumn
        
        Private columnMenge As Global.System.Data.DataColumn
        
        Private columnName_Einheit As Global.System.Data.DataColumn
        
        Private columnBestandteil As Global.System.Data.DataColumn
        
        Private columnGUID_Type_Medikamente As Global.System.Data.DataColumn
        
        Private columnGUID_Type_Nahrung As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "proc_Mengen_Of_Day"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property YearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYear
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WeekColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWeek
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WeekdayColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWeekday
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MengeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMenge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_EinheitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Einheit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BestandteilColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBestandteil
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Type_MedikamenteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Type_Medikamente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Type_NahrungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Type_Nahrung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As proc_Mengen_Of_DayRow
            Get
                Return CType(Me.Rows(index),proc_Mengen_Of_DayRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_Mengen_Of_DayRowChanging As proc_Mengen_Of_DayRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_Mengen_Of_DayRowChanged As proc_Mengen_Of_DayRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_Mengen_Of_DayRowDeleting As proc_Mengen_Of_DayRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_Mengen_Of_DayRowDeleted As proc_Mengen_Of_DayRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addproc_Mengen_Of_DayRow(ByVal row As proc_Mengen_Of_DayRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addproc_Mengen_Of_DayRow(ByVal Year As Integer, ByVal Week As Integer, ByVal Weekday As String, ByVal Menge As Double, ByVal Name_Einheit As String, ByVal Bestandteil As String, ByVal GUID_Type_Medikamente As System.Guid, ByVal GUID_Type_Nahrung As System.Guid) As proc_Mengen_Of_DayRow
            Dim rowproc_Mengen_Of_DayRow As proc_Mengen_Of_DayRow = CType(Me.NewRow,proc_Mengen_Of_DayRow)
            Dim columnValuesArray() As Object = New Object() {Year, Week, Weekday, Menge, Name_Einheit, Bestandteil, GUID_Type_Medikamente, GUID_Type_Nahrung}
            rowproc_Mengen_Of_DayRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowproc_Mengen_Of_DayRow)
            Return rowproc_Mengen_Of_DayRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As proc_Mengen_Of_DayDataTable = CType(MyBase.Clone,proc_Mengen_Of_DayDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New proc_Mengen_Of_DayDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnYear = MyBase.Columns("Year")
            Me.columnWeek = MyBase.Columns("Week")
            Me.columnWeekday = MyBase.Columns("Weekday")
            Me.columnMenge = MyBase.Columns("Menge")
            Me.columnName_Einheit = MyBase.Columns("Name_Einheit")
            Me.columnBestandteil = MyBase.Columns("Bestandteil")
            Me.columnGUID_Type_Medikamente = MyBase.Columns("GUID_Type_Medikamente")
            Me.columnGUID_Type_Nahrung = MyBase.Columns("GUID_Type_Nahrung")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnYear = New Global.System.Data.DataColumn("Year", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYear)
            Me.columnWeek = New Global.System.Data.DataColumn("Week", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWeek)
            Me.columnWeekday = New Global.System.Data.DataColumn("Weekday", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWeekday)
            Me.columnMenge = New Global.System.Data.DataColumn("Menge", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMenge)
            Me.columnName_Einheit = New Global.System.Data.DataColumn("Name_Einheit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Einheit)
            Me.columnBestandteil = New Global.System.Data.DataColumn("Bestandteil", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBestandteil)
            Me.columnGUID_Type_Medikamente = New Global.System.Data.DataColumn("GUID_Type_Medikamente", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Type_Medikamente)
            Me.columnGUID_Type_Nahrung = New Global.System.Data.DataColumn("GUID_Type_Nahrung", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Type_Nahrung)
            Me.columnYear.ReadOnly = true
            Me.columnWeek.ReadOnly = true
            Me.columnWeekday.ReadOnly = true
            Me.columnWeekday.MaxLength = 30
            Me.columnMenge.ReadOnly = true
            Me.columnName_Einheit.AllowDBNull = false
            Me.columnName_Einheit.MaxLength = 255
            Me.columnBestandteil.ReadOnly = true
            Me.columnBestandteil.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newproc_Mengen_Of_DayRow() As proc_Mengen_Of_DayRow
            Return CType(Me.NewRow,proc_Mengen_Of_DayRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New proc_Mengen_Of_DayRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(proc_Mengen_Of_DayRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.proc_Mengen_Of_DayRowChangedEvent) Is Nothing) Then
                RaiseEvent proc_Mengen_Of_DayRowChanged(Me, New proc_Mengen_Of_DayRowChangeEvent(CType(e.Row,proc_Mengen_Of_DayRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.proc_Mengen_Of_DayRowChangingEvent) Is Nothing) Then
                RaiseEvent proc_Mengen_Of_DayRowChanging(Me, New proc_Mengen_Of_DayRowChangeEvent(CType(e.Row,proc_Mengen_Of_DayRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.proc_Mengen_Of_DayRowDeletedEvent) Is Nothing) Then
                RaiseEvent proc_Mengen_Of_DayRowDeleted(Me, New proc_Mengen_Of_DayRowChangeEvent(CType(e.Row,proc_Mengen_Of_DayRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.proc_Mengen_Of_DayRowDeletingEvent) Is Nothing) Then
                RaiseEvent proc_Mengen_Of_DayRowDeleting(Me, New proc_Mengen_Of_DayRowChangeEvent(CType(e.Row,proc_Mengen_Of_DayRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removeproc_Mengen_Of_DayRow(ByVal row As proc_Mengen_Of_DayRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsBabyModule = New dsBabyModule()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "proc_Mengen_Of_DayDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class proc_WochenstatistikDataTable
        Inherits Global.System.Data.TypedTableBase(Of proc_WochenstatistikRow)
        
        Private columnYear As Global.System.Data.DataColumn
        
        Private columnWeek As Global.System.Data.DataColumn
        
        Private columnTimestamp As Global.System.Data.DataColumn
        
        Private columnGewichtzunahme_Tag As Global.System.Data.DataColumn
        
        Private columnMenge As Global.System.Data.DataColumn
        
        Private columnName_Einheit As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "proc_Wochenstatistik"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property YearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYear
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WeekColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWeek
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TimestampColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTimestamp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Gewichtzunahme_TagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGewichtzunahme_Tag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MengeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMenge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_EinheitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Einheit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As proc_WochenstatistikRow
            Get
                Return CType(Me.Rows(index),proc_WochenstatistikRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_WochenstatistikRowChanging As proc_WochenstatistikRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_WochenstatistikRowChanged As proc_WochenstatistikRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_WochenstatistikRowDeleting As proc_WochenstatistikRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event proc_WochenstatistikRowDeleted As proc_WochenstatistikRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addproc_WochenstatistikRow(ByVal row As proc_WochenstatistikRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addproc_WochenstatistikRow(ByVal Year As Integer, ByVal Week As Integer, ByVal Timestamp As Integer, ByVal Gewichtzunahme_Tag As Single, ByVal Menge As Integer, ByVal Name_Einheit As String) As proc_WochenstatistikRow
            Dim rowproc_WochenstatistikRow As proc_WochenstatistikRow = CType(Me.NewRow,proc_WochenstatistikRow)
            Dim columnValuesArray() As Object = New Object() {Year, Week, Timestamp, Gewichtzunahme_Tag, Menge, Name_Einheit}
            rowproc_WochenstatistikRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowproc_WochenstatistikRow)
            Return rowproc_WochenstatistikRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As proc_WochenstatistikDataTable = CType(MyBase.Clone,proc_WochenstatistikDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New proc_WochenstatistikDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnYear = MyBase.Columns("Year")
            Me.columnWeek = MyBase.Columns("Week")
            Me.columnTimestamp = MyBase.Columns("Timestamp")
            Me.columnGewichtzunahme_Tag = MyBase.Columns("Gewichtzunahme_Tag")
            Me.columnMenge = MyBase.Columns("Menge")
            Me.columnName_Einheit = MyBase.Columns("Name_Einheit")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnYear = New Global.System.Data.DataColumn("Year", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYear)
            Me.columnWeek = New Global.System.Data.DataColumn("Week", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWeek)
            Me.columnTimestamp = New Global.System.Data.DataColumn("Timestamp", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTimestamp)
            Me.columnGewichtzunahme_Tag = New Global.System.Data.DataColumn("Gewichtzunahme_Tag", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGewichtzunahme_Tag)
            Me.columnMenge = New Global.System.Data.DataColumn("Menge", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMenge)
            Me.columnName_Einheit = New Global.System.Data.DataColumn("Name_Einheit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Einheit)
            Me.columnName_Einheit.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newproc_WochenstatistikRow() As proc_WochenstatistikRow
            Return CType(Me.NewRow,proc_WochenstatistikRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New proc_WochenstatistikRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(proc_WochenstatistikRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.proc_WochenstatistikRowChangedEvent) Is Nothing) Then
                RaiseEvent proc_WochenstatistikRowChanged(Me, New proc_WochenstatistikRowChangeEvent(CType(e.Row,proc_WochenstatistikRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.proc_WochenstatistikRowChangingEvent) Is Nothing) Then
                RaiseEvent proc_WochenstatistikRowChanging(Me, New proc_WochenstatistikRowChangeEvent(CType(e.Row,proc_WochenstatistikRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.proc_WochenstatistikRowDeletedEvent) Is Nothing) Then
                RaiseEvent proc_WochenstatistikRowDeleted(Me, New proc_WochenstatistikRowChangeEvent(CType(e.Row,proc_WochenstatistikRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.proc_WochenstatistikRowDeletingEvent) Is Nothing) Then
                RaiseEvent proc_WochenstatistikRowDeleting(Me, New proc_WochenstatistikRowChangeEvent(CType(e.Row,proc_WochenstatistikRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removeproc_WochenstatistikRow(ByVal row As proc_WochenstatistikRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsBabyModule = New dsBabyModule()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "proc_WochenstatistikDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class proc_GewichtsmessungRow
        Inherits Global.System.Data.DataRow
        
        Private tableproc_Gewichtsmessung As proc_GewichtsmessungDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableproc_Gewichtsmessung = CType(Me.Table,proc_GewichtsmessungDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Gewichtsmessung() As System.Guid
            Get
                Return CType(Me(Me.tableproc_Gewichtsmessung.GUID_GewichtsmessungColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableproc_Gewichtsmessung.GUID_GewichtsmessungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Gewichtsmessung() As String
            Get
                Return CType(Me(Me.tableproc_Gewichtsmessung.Name_GewichtsmessungColumn),String)
            End Get
            Set
                Me(Me.tableproc_Gewichtsmessung.Name_GewichtsmessungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Zeitpunkt_Messung() As Date
            Get
                Return CType(Me(Me.tableproc_Gewichtsmessung.Zeitpunkt_MessungColumn),Date)
            End Get
            Set
                Me(Me.tableproc_Gewichtsmessung.Zeitpunkt_MessungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Gewicht() As Single
            Get
                Return CType(Me(Me.tableproc_Gewichtsmessung.GewichtColumn),Single)
            End Get
            Set
                Me(Me.tableproc_Gewichtsmessung.GewichtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Einheit() As System.Guid
            Get
                Return CType(Me(Me.tableproc_Gewichtsmessung.GUID_EinheitColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableproc_Gewichtsmessung.GUID_EinheitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Einheit() As String
            Get
                Return CType(Me(Me.tableproc_Gewichtsmessung.Name_EinheitColumn),String)
            End Get
            Set
                Me(Me.tableproc_Gewichtsmessung.Name_EinheitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Type_Einheit() As System.Guid
            Get
                Return CType(Me(Me.tableproc_Gewichtsmessung.GUID_Type_EinheitColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableproc_Gewichtsmessung.GUID_Type_EinheitColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class proc_Gewichtsmessung_By_DateRow
        Inherits Global.System.Data.DataRow
        
        Private tableproc_Gewichtsmessung_By_Date As proc_Gewichtsmessung_By_DateDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableproc_Gewichtsmessung_By_Date = CType(Me.Table,proc_Gewichtsmessung_By_DateDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Gewichtsmessung() As System.Guid
            Get
                Return CType(Me(Me.tableproc_Gewichtsmessung_By_Date.GUID_GewichtsmessungColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableproc_Gewichtsmessung_By_Date.GUID_GewichtsmessungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Gewichtsmessung() As String
            Get
                Return CType(Me(Me.tableproc_Gewichtsmessung_By_Date.Name_GewichtsmessungColumn),String)
            End Get
            Set
                Me(Me.tableproc_Gewichtsmessung_By_Date.Name_GewichtsmessungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Type_Gewichtsmessung() As System.Guid
            Get
                Return CType(Me(Me.tableproc_Gewichtsmessung_By_Date.GUID_Type_GewichtsmessungColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableproc_Gewichtsmessung_By_Date.GUID_Type_GewichtsmessungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_TokenAttribute() As System.Guid
            Get
                Return CType(Me(Me.tableproc_Gewichtsmessung_By_Date.GUID_TokenAttributeColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableproc_Gewichtsmessung_By_Date.GUID_TokenAttributeColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class proc_Trinkmessungen_By_DateRow
        Inherits Global.System.Data.DataRow
        
        Private tableproc_Trinkmessungen_By_Date As proc_Trinkmessungen_By_DateDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableproc_Trinkmessungen_By_Date = CType(Me.Table,proc_Trinkmessungen_By_DateDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Partner() As System.Guid
            Get
                Return CType(Me(Me.tableproc_Trinkmessungen_By_Date.GUID_PartnerColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableproc_Trinkmessungen_By_Date.GUID_PartnerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Partner() As String
            Get
                Return CType(Me(Me.tableproc_Trinkmessungen_By_Date.Name_PartnerColumn),String)
            End Get
            Set
                Me(Me.tableproc_Trinkmessungen_By_Date.Name_PartnerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Type_Partner() As System.Guid
            Get
                Return CType(Me(Me.tableproc_Trinkmessungen_By_Date.GUID_Type_PartnerColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableproc_Trinkmessungen_By_Date.GUID_Type_PartnerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Trinkmessungen() As System.Guid
            Get
                Return CType(Me(Me.tableproc_Trinkmessungen_By_Date.GUID_TrinkmessungenColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableproc_Trinkmessungen_By_Date.GUID_TrinkmessungenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Trinkmessungen() As String
            Get
                Return CType(Me(Me.tableproc_Trinkmessungen_By_Date.Name_TrinkmessungenColumn),String)
            End Get
            Set
                Me(Me.tableproc_Trinkmessungen_By_Date.Name_TrinkmessungenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Type_Trinkmessungen() As System.Guid
            Get
                Return CType(Me(Me.tableproc_Trinkmessungen_By_Date.GUID_Type_TrinkmessungenColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableproc_Trinkmessungen_By_Date.GUID_Type_TrinkmessungenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Zeitpunkt() As Date
            Get
                Return CType(Me(Me.tableproc_Trinkmessungen_By_Date.ZeitpunktColumn),Date)
            End Get
            Set
                Me(Me.tableproc_Trinkmessungen_By_Date.ZeitpunktColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class proc_TrinkmessungenRow
        Inherits Global.System.Data.DataRow
        
        Private tableproc_Trinkmessungen As proc_TrinkmessungenDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableproc_Trinkmessungen = CType(Me.Table,proc_TrinkmessungenDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Trinkmessungen() As System.Guid
            Get
                Return CType(Me(Me.tableproc_Trinkmessungen.GUID_TrinkmessungenColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableproc_Trinkmessungen.GUID_TrinkmessungenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Trinkmessungen() As String
            Get
                Return CType(Me(Me.tableproc_Trinkmessungen.Name_TrinkmessungenColumn),String)
            End Get
            Set
                Me(Me.tableproc_Trinkmessungen.Name_TrinkmessungenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Type_Trinkmessungen() As System.Guid
            Get
                Return CType(Me(Me.tableproc_Trinkmessungen.GUID_Type_TrinkmessungenColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableproc_Trinkmessungen.GUID_Type_TrinkmessungenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Partner() As System.Guid
            Get
                Return CType(Me(Me.tableproc_Trinkmessungen.GUID_PartnerColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableproc_Trinkmessungen.GUID_PartnerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Partner() As String
            Get
                Return CType(Me(Me.tableproc_Trinkmessungen.Name_PartnerColumn),String)
            End Get
            Set
                Me(Me.tableproc_Trinkmessungen.Name_PartnerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Token_Attribute_Zeitpunkt() As System.Guid
            Get
                Return CType(Me(Me.tableproc_Trinkmessungen.GUID_Token_Attribute_ZeitpunktColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableproc_Trinkmessungen.GUID_Token_Attribute_ZeitpunktColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Zeitpunkt() As Date
            Get
                Return CType(Me(Me.tableproc_Trinkmessungen.ZeitpunktColumn),Date)
            End Get
            Set
                Me(Me.tableproc_Trinkmessungen.ZeitpunktColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_TokenAttribute_Trinkprobleme() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Trinkmessungen.GUID_TokenAttribute_TrinkproblemeColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_TokenAttribute_Trinkprobleme' in table 'proc_Trinkmess"& _ 
                            "ungen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Trinkmessungen.GUID_TokenAttribute_TrinkproblemeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Trinkprobleme() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableproc_Trinkmessungen.TrinkproblemeColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Trinkprobleme' in table 'proc_Trinkmessungen' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Trinkmessungen.TrinkproblemeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_TokenAttribute_Eigeninitiative() As System.Guid
            Get
                Return CType(Me(Me.tableproc_Trinkmessungen.GUID_TokenAttribute_EigeninitiativeColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableproc_Trinkmessungen.GUID_TokenAttribute_EigeninitiativeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Eigeninitiative() As Boolean
            Get
                Return CType(Me(Me.tableproc_Trinkmessungen.EigeninitiativeColumn),Boolean)
            End Get
            Set
                Me(Me.tableproc_Trinkmessungen.EigeninitiativeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Count_Bestandteile() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproc_Trinkmessungen.Count_BestandteileColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Count_Bestandteile' in table 'proc_Trinkmessungen' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Trinkmessungen.Count_BestandteileColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_TokenAttribute_TrinkproblemeNull() As Boolean
            Return Me.IsNull(Me.tableproc_Trinkmessungen.GUID_TokenAttribute_TrinkproblemeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_TokenAttribute_TrinkproblemeNull()
            Me(Me.tableproc_Trinkmessungen.GUID_TokenAttribute_TrinkproblemeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTrinkproblemeNull() As Boolean
            Return Me.IsNull(Me.tableproc_Trinkmessungen.TrinkproblemeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTrinkproblemeNull()
            Me(Me.tableproc_Trinkmessungen.TrinkproblemeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCount_BestandteileNull() As Boolean
            Return Me.IsNull(Me.tableproc_Trinkmessungen.Count_BestandteileColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCount_BestandteileNull()
            Me(Me.tableproc_Trinkmessungen.Count_BestandteileColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class proc_Trinkbestandteile_Of_MessungRow
        Inherits Global.System.Data.DataRow
        
        Private tableproc_Trinkbestandteile_Of_Messung As proc_Trinkbestandteile_Of_MessungDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableproc_Trinkbestandteile_Of_Messung = CType(Me.Table,proc_Trinkbestandteile_Of_MessungDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Trinkbestandteil() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_TrinkbestandteilColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Trinkbestandteil' in table 'proc_Trinkbestandteile_Of_"& _ 
                            "Messung' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_TrinkbestandteilColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Trinkbestandteil() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_Trinkbestandteile_Of_Messung.Name_TrinkbestandteilColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Name_Trinkbestandteil' in table 'proc_Trinkbestandteile_Of_"& _ 
                            "Messung' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Trinkbestandteile_Of_Messung.Name_TrinkbestandteilColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Type_Trinkbestandteil() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_Type_TrinkbestandteilColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Type_Trinkbestandteil' in table 'proc_Trinkbestandteil"& _ 
                            "e_Of_Messung' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_Type_TrinkbestandteilColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Menge() As Single
            Get
                Try 
                    Return CType(Me(Me.tableproc_Trinkbestandteile_Of_Messung.MengeColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Menge' in table 'proc_Trinkbestandteile_Of_Messung' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Trinkbestandteile_Of_Messung.MengeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Einheit() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_Trinkbestandteile_Of_Messung.Name_EinheitColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Name_Einheit' in table 'proc_Trinkbestandteile_Of_Messung' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Trinkbestandteile_Of_Messung.Name_EinheitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Menge() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_MengeColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Menge' in table 'proc_Trinkbestandteile_Of_Messung' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_MengeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Menge() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_Trinkbestandteile_Of_Messung.Name_MengeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Name_Menge' in table 'proc_Trinkbestandteile_Of_Messung' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Trinkbestandteile_Of_Messung.Name_MengeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Type_Menge() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_Type_MengeColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Type_Menge' in table 'proc_Trinkbestandteile_Of_Messun"& _ 
                            "g' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_Type_MengeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Einheit() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_EinheitColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Einheit' in table 'proc_Trinkbestandteile_Of_Messung' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_EinheitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Type_Einheit() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_Type_EinheitColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Type_Einheit' in table 'proc_Trinkbestandteile_Of_Mess"& _ 
                            "ung' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_Type_EinheitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_TokenAttribute_Menge() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_TokenAttribute_MengeColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_TokenAttribute_Menge' in table 'proc_Trinkbestandteile"& _ 
                            "_Of_Messung' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_TokenAttribute_MengeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Nahrung() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_NahrungColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Nahrung' in table 'proc_Trinkbestandteile_Of_Messung' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_NahrungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Nahrung() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_Trinkbestandteile_Of_Messung.Name_NahrungColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Name_Nahrung' in table 'proc_Trinkbestandteile_Of_Messung' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Trinkbestandteile_Of_Messung.Name_NahrungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Type_Nahrung() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_Type_NahrungColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Type_Nahrung' in table 'proc_Trinkbestandteile_Of_Mess"& _ 
                            "ung' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_Type_NahrungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Medikamente() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_MedikamenteColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Medikamente' in table 'proc_Trinkbestandteile_Of_Messu"& _ 
                            "ng' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_MedikamenteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Medikamente() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_Trinkbestandteile_Of_Messung.Name_MedikamenteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Name_Medikamente' in table 'proc_Trinkbestandteile_Of_Messu"& _ 
                            "ng' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Trinkbestandteile_Of_Messung.Name_MedikamenteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Type_Medikamente() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_Type_MedikamenteColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Type_Medikamente' in table 'proc_Trinkbestandteile_Of_"& _ 
                            "Messung' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_Type_MedikamenteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Trinkmessung() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_TrinkmessungColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Trinkmessung' in table 'proc_Trinkbestandteile_Of_Mess"& _ 
                            "ung' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_TrinkmessungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_TrinkbestandteilNull() As Boolean
            Return Me.IsNull(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_TrinkbestandteilColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_TrinkbestandteilNull()
            Me(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_TrinkbestandteilColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsName_TrinkbestandteilNull() As Boolean
            Return Me.IsNull(Me.tableproc_Trinkbestandteile_Of_Messung.Name_TrinkbestandteilColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetName_TrinkbestandteilNull()
            Me(Me.tableproc_Trinkbestandteile_Of_Messung.Name_TrinkbestandteilColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_Type_TrinkbestandteilNull() As Boolean
            Return Me.IsNull(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_Type_TrinkbestandteilColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_Type_TrinkbestandteilNull()
            Me(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_Type_TrinkbestandteilColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMengeNull() As Boolean
            Return Me.IsNull(Me.tableproc_Trinkbestandteile_Of_Messung.MengeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMengeNull()
            Me(Me.tableproc_Trinkbestandteile_Of_Messung.MengeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsName_EinheitNull() As Boolean
            Return Me.IsNull(Me.tableproc_Trinkbestandteile_Of_Messung.Name_EinheitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetName_EinheitNull()
            Me(Me.tableproc_Trinkbestandteile_Of_Messung.Name_EinheitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_MengeNull() As Boolean
            Return Me.IsNull(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_MengeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_MengeNull()
            Me(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_MengeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsName_MengeNull() As Boolean
            Return Me.IsNull(Me.tableproc_Trinkbestandteile_Of_Messung.Name_MengeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetName_MengeNull()
            Me(Me.tableproc_Trinkbestandteile_Of_Messung.Name_MengeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_Type_MengeNull() As Boolean
            Return Me.IsNull(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_Type_MengeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_Type_MengeNull()
            Me(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_Type_MengeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_EinheitNull() As Boolean
            Return Me.IsNull(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_EinheitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_EinheitNull()
            Me(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_EinheitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_Type_EinheitNull() As Boolean
            Return Me.IsNull(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_Type_EinheitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_Type_EinheitNull()
            Me(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_Type_EinheitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_TokenAttribute_MengeNull() As Boolean
            Return Me.IsNull(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_TokenAttribute_MengeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_TokenAttribute_MengeNull()
            Me(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_TokenAttribute_MengeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_NahrungNull() As Boolean
            Return Me.IsNull(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_NahrungColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_NahrungNull()
            Me(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_NahrungColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsName_NahrungNull() As Boolean
            Return Me.IsNull(Me.tableproc_Trinkbestandteile_Of_Messung.Name_NahrungColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetName_NahrungNull()
            Me(Me.tableproc_Trinkbestandteile_Of_Messung.Name_NahrungColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_Type_NahrungNull() As Boolean
            Return Me.IsNull(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_Type_NahrungColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_Type_NahrungNull()
            Me(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_Type_NahrungColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_MedikamenteNull() As Boolean
            Return Me.IsNull(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_MedikamenteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_MedikamenteNull()
            Me(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_MedikamenteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsName_MedikamenteNull() As Boolean
            Return Me.IsNull(Me.tableproc_Trinkbestandteile_Of_Messung.Name_MedikamenteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetName_MedikamenteNull()
            Me(Me.tableproc_Trinkbestandteile_Of_Messung.Name_MedikamenteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_Type_MedikamenteNull() As Boolean
            Return Me.IsNull(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_Type_MedikamenteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_Type_MedikamenteNull()
            Me(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_Type_MedikamenteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_TrinkmessungNull() As Boolean
            Return Me.IsNull(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_TrinkmessungColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_TrinkmessungNull()
            Me(Me.tableproc_Trinkbestandteile_Of_Messung.GUID_TrinkmessungColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class proc_TrinkbestandteilRow
        Inherits Global.System.Data.DataRow
        
        Private tableproc_Trinkbestandteil As proc_TrinkbestandteilDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableproc_Trinkbestandteil = CType(Me.Table,proc_TrinkbestandteilDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Trinkbestandteil() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Trinkbestandteil.GUID_TrinkbestandteilColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Trinkbestandteil' in table 'proc_Trinkbestandteil' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Trinkbestandteil.GUID_TrinkbestandteilColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Trinkbestandteil() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_Trinkbestandteil.Name_TrinkbestandteilColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Name_Trinkbestandteil' in table 'proc_Trinkbestandteil' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Trinkbestandteil.Name_TrinkbestandteilColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Type_Trinkbestandteil() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Trinkbestandteil.GUID_Type_TrinkbestandteilColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Type_Trinkbestandteil' in table 'proc_Trinkbestandteil"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Trinkbestandteil.GUID_Type_TrinkbestandteilColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Menge() As Single
            Get
                Try 
                    Return CType(Me(Me.tableproc_Trinkbestandteil.MengeColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Menge' in table 'proc_Trinkbestandteil' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Trinkbestandteil.MengeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Einheit() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_Trinkbestandteil.Name_EinheitColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Name_Einheit' in table 'proc_Trinkbestandteil' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Trinkbestandteil.Name_EinheitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Menge() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Trinkbestandteil.GUID_MengeColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Menge' in table 'proc_Trinkbestandteil' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Trinkbestandteil.GUID_MengeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Menge() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_Trinkbestandteil.Name_MengeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Name_Menge' in table 'proc_Trinkbestandteil' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Trinkbestandteil.Name_MengeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Type_Menge() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Trinkbestandteil.GUID_Type_MengeColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Type_Menge' in table 'proc_Trinkbestandteil' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Trinkbestandteil.GUID_Type_MengeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Einheit() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Trinkbestandteil.GUID_EinheitColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Einheit' in table 'proc_Trinkbestandteil' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Trinkbestandteil.GUID_EinheitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Type_Einheit() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Trinkbestandteil.GUID_Type_EinheitColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Type_Einheit' in table 'proc_Trinkbestandteil' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Trinkbestandteil.GUID_Type_EinheitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_TokenAttribute_Menge() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Trinkbestandteil.GUID_TokenAttribute_MengeColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_TokenAttribute_Menge' in table 'proc_Trinkbestandteil'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Trinkbestandteil.GUID_TokenAttribute_MengeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Nahrung() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Trinkbestandteil.GUID_NahrungColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Nahrung' in table 'proc_Trinkbestandteil' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Trinkbestandteil.GUID_NahrungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Nahrung() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_Trinkbestandteil.Name_NahrungColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Name_Nahrung' in table 'proc_Trinkbestandteil' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Trinkbestandteil.Name_NahrungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Type_Nahrung() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Trinkbestandteil.GUID_Type_NahrungColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Type_Nahrung' in table 'proc_Trinkbestandteil' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Trinkbestandteil.GUID_Type_NahrungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Medikamente() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Trinkbestandteil.GUID_MedikamenteColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Medikamente' in table 'proc_Trinkbestandteil' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Trinkbestandteil.GUID_MedikamenteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Medikamente() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_Trinkbestandteil.Name_MedikamenteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Name_Medikamente' in table 'proc_Trinkbestandteil' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Trinkbestandteil.Name_MedikamenteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Type_Medikamente() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Trinkbestandteil.GUID_Type_MedikamenteColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Type_Medikamente' in table 'proc_Trinkbestandteil' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Trinkbestandteil.GUID_Type_MedikamenteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Trinkmessung() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Trinkbestandteil.GUID_TrinkmessungColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Trinkmessung' in table 'proc_Trinkbestandteil' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Trinkbestandteil.GUID_TrinkmessungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_TrinkbestandteilNull() As Boolean
            Return Me.IsNull(Me.tableproc_Trinkbestandteil.GUID_TrinkbestandteilColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_TrinkbestandteilNull()
            Me(Me.tableproc_Trinkbestandteil.GUID_TrinkbestandteilColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsName_TrinkbestandteilNull() As Boolean
            Return Me.IsNull(Me.tableproc_Trinkbestandteil.Name_TrinkbestandteilColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetName_TrinkbestandteilNull()
            Me(Me.tableproc_Trinkbestandteil.Name_TrinkbestandteilColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_Type_TrinkbestandteilNull() As Boolean
            Return Me.IsNull(Me.tableproc_Trinkbestandteil.GUID_Type_TrinkbestandteilColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_Type_TrinkbestandteilNull()
            Me(Me.tableproc_Trinkbestandteil.GUID_Type_TrinkbestandteilColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMengeNull() As Boolean
            Return Me.IsNull(Me.tableproc_Trinkbestandteil.MengeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMengeNull()
            Me(Me.tableproc_Trinkbestandteil.MengeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsName_EinheitNull() As Boolean
            Return Me.IsNull(Me.tableproc_Trinkbestandteil.Name_EinheitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetName_EinheitNull()
            Me(Me.tableproc_Trinkbestandteil.Name_EinheitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_MengeNull() As Boolean
            Return Me.IsNull(Me.tableproc_Trinkbestandteil.GUID_MengeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_MengeNull()
            Me(Me.tableproc_Trinkbestandteil.GUID_MengeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsName_MengeNull() As Boolean
            Return Me.IsNull(Me.tableproc_Trinkbestandteil.Name_MengeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetName_MengeNull()
            Me(Me.tableproc_Trinkbestandteil.Name_MengeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_Type_MengeNull() As Boolean
            Return Me.IsNull(Me.tableproc_Trinkbestandteil.GUID_Type_MengeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_Type_MengeNull()
            Me(Me.tableproc_Trinkbestandteil.GUID_Type_MengeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_EinheitNull() As Boolean
            Return Me.IsNull(Me.tableproc_Trinkbestandteil.GUID_EinheitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_EinheitNull()
            Me(Me.tableproc_Trinkbestandteil.GUID_EinheitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_Type_EinheitNull() As Boolean
            Return Me.IsNull(Me.tableproc_Trinkbestandteil.GUID_Type_EinheitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_Type_EinheitNull()
            Me(Me.tableproc_Trinkbestandteil.GUID_Type_EinheitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_TokenAttribute_MengeNull() As Boolean
            Return Me.IsNull(Me.tableproc_Trinkbestandteil.GUID_TokenAttribute_MengeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_TokenAttribute_MengeNull()
            Me(Me.tableproc_Trinkbestandteil.GUID_TokenAttribute_MengeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_NahrungNull() As Boolean
            Return Me.IsNull(Me.tableproc_Trinkbestandteil.GUID_NahrungColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_NahrungNull()
            Me(Me.tableproc_Trinkbestandteil.GUID_NahrungColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsName_NahrungNull() As Boolean
            Return Me.IsNull(Me.tableproc_Trinkbestandteil.Name_NahrungColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetName_NahrungNull()
            Me(Me.tableproc_Trinkbestandteil.Name_NahrungColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_Type_NahrungNull() As Boolean
            Return Me.IsNull(Me.tableproc_Trinkbestandteil.GUID_Type_NahrungColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_Type_NahrungNull()
            Me(Me.tableproc_Trinkbestandteil.GUID_Type_NahrungColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_MedikamenteNull() As Boolean
            Return Me.IsNull(Me.tableproc_Trinkbestandteil.GUID_MedikamenteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_MedikamenteNull()
            Me(Me.tableproc_Trinkbestandteil.GUID_MedikamenteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsName_MedikamenteNull() As Boolean
            Return Me.IsNull(Me.tableproc_Trinkbestandteil.Name_MedikamenteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetName_MedikamenteNull()
            Me(Me.tableproc_Trinkbestandteil.Name_MedikamenteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_Type_MedikamenteNull() As Boolean
            Return Me.IsNull(Me.tableproc_Trinkbestandteil.GUID_Type_MedikamenteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_Type_MedikamenteNull()
            Me(Me.tableproc_Trinkbestandteil.GUID_Type_MedikamenteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_TrinkmessungNull() As Boolean
            Return Me.IsNull(Me.tableproc_Trinkbestandteil.GUID_TrinkmessungColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_TrinkmessungNull()
            Me(Me.tableproc_Trinkbestandteil.GUID_TrinkmessungColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class proc_Mengen_Of_Day_By_EinheitRow
        Inherits Global.System.Data.DataRow
        
        Private tableproc_Mengen_Of_Day_By_Einheit As proc_Mengen_Of_Day_By_EinheitDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableproc_Mengen_Of_Day_By_Einheit = CType(Me.Table,proc_Mengen_Of_Day_By_EinheitDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Year() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproc_Mengen_Of_Day_By_Einheit.YearColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Year' in table 'proc_Mengen_Of_Day_By_Einheit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Mengen_Of_Day_By_Einheit.YearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Week() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproc_Mengen_Of_Day_By_Einheit.WeekColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Week' in table 'proc_Mengen_Of_Day_By_Einheit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Mengen_Of_Day_By_Einheit.WeekColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Weekday() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_Mengen_Of_Day_By_Einheit.WeekdayColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Weekday' in table 'proc_Mengen_Of_Day_By_Einheit' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Mengen_Of_Day_By_Einheit.WeekdayColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Menge() As Double
            Get
                Try 
                    Return CType(Me(Me.tableproc_Mengen_Of_Day_By_Einheit.MengeColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Menge' in table 'proc_Mengen_Of_Day_By_Einheit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Mengen_Of_Day_By_Einheit.MengeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Einheit() As String
            Get
                Return CType(Me(Me.tableproc_Mengen_Of_Day_By_Einheit.Name_EinheitColumn),String)
            End Get
            Set
                Me(Me.tableproc_Mengen_Of_Day_By_Einheit.Name_EinheitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsYearNull() As Boolean
            Return Me.IsNull(Me.tableproc_Mengen_Of_Day_By_Einheit.YearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetYearNull()
            Me(Me.tableproc_Mengen_Of_Day_By_Einheit.YearColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWeekNull() As Boolean
            Return Me.IsNull(Me.tableproc_Mengen_Of_Day_By_Einheit.WeekColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWeekNull()
            Me(Me.tableproc_Mengen_Of_Day_By_Einheit.WeekColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWeekdayNull() As Boolean
            Return Me.IsNull(Me.tableproc_Mengen_Of_Day_By_Einheit.WeekdayColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWeekdayNull()
            Me(Me.tableproc_Mengen_Of_Day_By_Einheit.WeekdayColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMengeNull() As Boolean
            Return Me.IsNull(Me.tableproc_Mengen_Of_Day_By_Einheit.MengeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMengeNull()
            Me(Me.tableproc_Mengen_Of_Day_By_Einheit.MengeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class proc_ProblemeRow
        Inherits Global.System.Data.DataRow
        
        Private tableproc_Probleme As proc_ProblemeDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableproc_Probleme = CType(Me.Table,proc_ProblemeDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Probleme__Baby_() As System.Guid
            Get
                Return CType(Me(Me.tableproc_Probleme.GUID_Probleme__Baby_Column),Global.System.Guid)
            End Get
            Set
                Me(Me.tableproc_Probleme.GUID_Probleme__Baby_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Probleme__Baby_() As String
            Get
                Return CType(Me(Me.tableproc_Probleme.Name_Probleme__Baby_Column),String)
            End Get
            Set
                Me(Me.tableproc_Probleme.Name_Probleme__Baby_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Type_Probleme__Baby_() As System.Guid
            Get
                Return CType(Me(Me.tableproc_Probleme.GUID_Type_Probleme__Baby_Column),Global.System.Guid)
            End Get
            Set
                Me(Me.tableproc_Probleme.GUID_Type_Probleme__Baby_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Problemarten() As System.Guid
            Get
                Return CType(Me(Me.tableproc_Probleme.GUID_ProblemartenColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableproc_Probleme.GUID_ProblemartenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Problemarten() As String
            Get
                Return CType(Me(Me.tableproc_Probleme.Name_ProblemartenColumn),String)
            End Get
            Set
                Me(Me.tableproc_Probleme.Name_ProblemartenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Type_Problemarten() As System.Guid
            Get
                Return CType(Me(Me.tableproc_Probleme.GUID_Type_ProblemartenColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableproc_Probleme.GUID_Type_ProblemartenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_TokenAttribute_Startdate() As System.Guid
            Get
                Return CType(Me(Me.tableproc_Probleme.GUID_TokenAttribute_StartdateColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableproc_Probleme.GUID_TokenAttribute_StartdateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property StartDate() As Date
            Get
                Return CType(Me(Me.tableproc_Probleme.StartDateColumn),Date)
            End Get
            Set
                Me(Me.tableproc_Probleme.StartDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_TokenAttribute_Ende() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Probleme.GUID_TokenAttribute_EndeColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_TokenAttribute_Ende' in table 'proc_Probleme' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Probleme.GUID_TokenAttribute_EndeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Ende() As Date
            Get
                Try 
                    Return CType(Me(Me.tableproc_Probleme.EndeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Ende' in table 'proc_Probleme' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Probleme.EndeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_TokenAttribute_EndeNull() As Boolean
            Return Me.IsNull(Me.tableproc_Probleme.GUID_TokenAttribute_EndeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_TokenAttribute_EndeNull()
            Me(Me.tableproc_Probleme.GUID_TokenAttribute_EndeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEndeNull() As Boolean
            Return Me.IsNull(Me.tableproc_Probleme.EndeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEndeNull()
            Me(Me.tableproc_Probleme.EndeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class proc_BestandteileRow
        Inherits Global.System.Data.DataRow
        
        Private tableproc_Bestandteile As proc_BestandteileDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableproc_Bestandteile = CType(Me.Table,proc_BestandteileDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Bestandteil() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Bestandteile.GUID_BestandteilColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Bestandteil' in table 'proc_Bestandteile' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Bestandteile.GUID_BestandteilColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Bestandteil() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_Bestandteile.Name_BestandteilColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Name_Bestandteil' in table 'proc_Bestandteile' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Bestandteile.Name_BestandteilColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Type_Bestandteil() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Bestandteile.GUID_Type_BestandteilColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Type_Bestandteil' in table 'proc_Bestandteile' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Bestandteile.GUID_Type_BestandteilColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_BestandteilNull() As Boolean
            Return Me.IsNull(Me.tableproc_Bestandteile.GUID_BestandteilColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_BestandteilNull()
            Me(Me.tableproc_Bestandteile.GUID_BestandteilColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsName_BestandteilNull() As Boolean
            Return Me.IsNull(Me.tableproc_Bestandteile.Name_BestandteilColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetName_BestandteilNull()
            Me(Me.tableproc_Bestandteile.Name_BestandteilColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_Type_BestandteilNull() As Boolean
            Return Me.IsNull(Me.tableproc_Bestandteile.GUID_Type_BestandteilColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_Type_BestandteilNull()
            Me(Me.tableproc_Bestandteile.GUID_Type_BestandteilColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class proc_Mengen_Of_DayRow
        Inherits Global.System.Data.DataRow
        
        Private tableproc_Mengen_Of_Day As proc_Mengen_Of_DayDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableproc_Mengen_Of_Day = CType(Me.Table,proc_Mengen_Of_DayDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Year() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproc_Mengen_Of_Day.YearColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Year' in table 'proc_Mengen_Of_Day' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Mengen_Of_Day.YearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Week() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproc_Mengen_Of_Day.WeekColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Week' in table 'proc_Mengen_Of_Day' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Mengen_Of_Day.WeekColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Weekday() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_Mengen_Of_Day.WeekdayColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Weekday' in table 'proc_Mengen_Of_Day' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Mengen_Of_Day.WeekdayColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Menge() As Double
            Get
                Try 
                    Return CType(Me(Me.tableproc_Mengen_Of_Day.MengeColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Menge' in table 'proc_Mengen_Of_Day' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Mengen_Of_Day.MengeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Einheit() As String
            Get
                Return CType(Me(Me.tableproc_Mengen_Of_Day.Name_EinheitColumn),String)
            End Get
            Set
                Me(Me.tableproc_Mengen_Of_Day.Name_EinheitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Bestandteil() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_Mengen_Of_Day.BestandteilColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bestandteil' in table 'proc_Mengen_Of_Day' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Mengen_Of_Day.BestandteilColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Type_Medikamente() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Mengen_Of_Day.GUID_Type_MedikamenteColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Type_Medikamente' in table 'proc_Mengen_Of_Day' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Mengen_Of_Day.GUID_Type_MedikamenteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Type_Nahrung() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableproc_Mengen_Of_Day.GUID_Type_NahrungColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUID_Type_Nahrung' in table 'proc_Mengen_Of_Day' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Mengen_Of_Day.GUID_Type_NahrungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsYearNull() As Boolean
            Return Me.IsNull(Me.tableproc_Mengen_Of_Day.YearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetYearNull()
            Me(Me.tableproc_Mengen_Of_Day.YearColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWeekNull() As Boolean
            Return Me.IsNull(Me.tableproc_Mengen_Of_Day.WeekColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWeekNull()
            Me(Me.tableproc_Mengen_Of_Day.WeekColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWeekdayNull() As Boolean
            Return Me.IsNull(Me.tableproc_Mengen_Of_Day.WeekdayColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWeekdayNull()
            Me(Me.tableproc_Mengen_Of_Day.WeekdayColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMengeNull() As Boolean
            Return Me.IsNull(Me.tableproc_Mengen_Of_Day.MengeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMengeNull()
            Me(Me.tableproc_Mengen_Of_Day.MengeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBestandteilNull() As Boolean
            Return Me.IsNull(Me.tableproc_Mengen_Of_Day.BestandteilColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBestandteilNull()
            Me(Me.tableproc_Mengen_Of_Day.BestandteilColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_Type_MedikamenteNull() As Boolean
            Return Me.IsNull(Me.tableproc_Mengen_Of_Day.GUID_Type_MedikamenteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_Type_MedikamenteNull()
            Me(Me.tableproc_Mengen_Of_Day.GUID_Type_MedikamenteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_Type_NahrungNull() As Boolean
            Return Me.IsNull(Me.tableproc_Mengen_Of_Day.GUID_Type_NahrungColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_Type_NahrungNull()
            Me(Me.tableproc_Mengen_Of_Day.GUID_Type_NahrungColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class proc_WochenstatistikRow
        Inherits Global.System.Data.DataRow
        
        Private tableproc_Wochenstatistik As proc_WochenstatistikDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableproc_Wochenstatistik = CType(Me.Table,proc_WochenstatistikDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Year() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproc_Wochenstatistik.YearColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Year' in table 'proc_Wochenstatistik' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Wochenstatistik.YearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Week() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproc_Wochenstatistik.WeekColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Week' in table 'proc_Wochenstatistik' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Wochenstatistik.WeekColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Timestamp() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproc_Wochenstatistik.TimestampColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Timestamp' in table 'proc_Wochenstatistik' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Wochenstatistik.TimestampColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Gewichtzunahme_Tag() As Single
            Get
                Try 
                    Return CType(Me(Me.tableproc_Wochenstatistik.Gewichtzunahme_TagColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Gewichtzunahme_Tag' in table 'proc_Wochenstatistik' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Wochenstatistik.Gewichtzunahme_TagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Menge() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproc_Wochenstatistik.MengeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Menge' in table 'proc_Wochenstatistik' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Wochenstatistik.MengeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Einheit() As String
            Get
                Try 
                    Return CType(Me(Me.tableproc_Wochenstatistik.Name_EinheitColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Name_Einheit' in table 'proc_Wochenstatistik' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproc_Wochenstatistik.Name_EinheitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsYearNull() As Boolean
            Return Me.IsNull(Me.tableproc_Wochenstatistik.YearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetYearNull()
            Me(Me.tableproc_Wochenstatistik.YearColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWeekNull() As Boolean
            Return Me.IsNull(Me.tableproc_Wochenstatistik.WeekColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWeekNull()
            Me(Me.tableproc_Wochenstatistik.WeekColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTimestampNull() As Boolean
            Return Me.IsNull(Me.tableproc_Wochenstatistik.TimestampColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTimestampNull()
            Me(Me.tableproc_Wochenstatistik.TimestampColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGewichtzunahme_TagNull() As Boolean
            Return Me.IsNull(Me.tableproc_Wochenstatistik.Gewichtzunahme_TagColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGewichtzunahme_TagNull()
            Me(Me.tableproc_Wochenstatistik.Gewichtzunahme_TagColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMengeNull() As Boolean
            Return Me.IsNull(Me.tableproc_Wochenstatistik.MengeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMengeNull()
            Me(Me.tableproc_Wochenstatistik.MengeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsName_EinheitNull() As Boolean
            Return Me.IsNull(Me.tableproc_Wochenstatistik.Name_EinheitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetName_EinheitNull()
            Me(Me.tableproc_Wochenstatistik.Name_EinheitColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class proc_GewichtsmessungRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As proc_GewichtsmessungRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As proc_GewichtsmessungRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As proc_GewichtsmessungRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class proc_Gewichtsmessung_By_DateRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As proc_Gewichtsmessung_By_DateRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As proc_Gewichtsmessung_By_DateRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As proc_Gewichtsmessung_By_DateRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class proc_Trinkmessungen_By_DateRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As proc_Trinkmessungen_By_DateRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As proc_Trinkmessungen_By_DateRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As proc_Trinkmessungen_By_DateRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class proc_TrinkmessungenRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As proc_TrinkmessungenRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As proc_TrinkmessungenRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As proc_TrinkmessungenRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class proc_Trinkbestandteile_Of_MessungRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As proc_Trinkbestandteile_Of_MessungRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As proc_Trinkbestandteile_Of_MessungRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As proc_Trinkbestandteile_Of_MessungRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class proc_TrinkbestandteilRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As proc_TrinkbestandteilRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As proc_TrinkbestandteilRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As proc_TrinkbestandteilRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class proc_Mengen_Of_Day_By_EinheitRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As proc_Mengen_Of_Day_By_EinheitRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As proc_Mengen_Of_Day_By_EinheitRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As proc_Mengen_Of_Day_By_EinheitRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class proc_ProblemeRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As proc_ProblemeRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As proc_ProblemeRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As proc_ProblemeRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class proc_BestandteileRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As proc_BestandteileRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As proc_BestandteileRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As proc_BestandteileRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class proc_Mengen_Of_DayRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As proc_Mengen_Of_DayRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As proc_Mengen_Of_DayRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As proc_Mengen_Of_DayRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class proc_WochenstatistikRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As proc_WochenstatistikRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As proc_WochenstatistikRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As proc_WochenstatistikRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace dsBabyModuleTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class proc_GewichtsmessungTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "proc_Gewichtsmessung"
            tableMapping.ColumnMappings.Add("GUID_Gewichtsmessung", "GUID_Gewichtsmessung")
            tableMapping.ColumnMappings.Add("Name_Gewichtsmessung", "Name_Gewichtsmessung")
            tableMapping.ColumnMappings.Add("Zeitpunkt_Messung", "Zeitpunkt_Messung")
            tableMapping.ColumnMappings.Add("Gewicht", "Gewicht")
            tableMapping.ColumnMappings.Add("GUID_Einheit", "GUID_Einheit")
            tableMapping.ColumnMappings.Add("Name_Einheit", "Name_Einheit")
            tableMapping.ColumnMappings.Add("GUID_Type_Einheit", "GUID_Type_Einheit")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Baby_Module.My.MySettings.Default.sem_db_system_baby_moduleConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.proc_Gewichtsmessung"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Attribute_GemessenZeitpunkt", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Attribute_Menge", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Gewichtsmessung", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Menge", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Einheit", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_RelationType_Gewicht", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_RelationType_belongsTo", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_RelationType_IsOfType", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Partner", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsBabyModule.proc_GewichtsmessungDataTable, ByVal GUID_Attribute_GemessenZeitpunkt As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Attribute_Menge As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Gewichtsmessung As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Menge As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Einheit As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_Gewicht As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_belongsTo As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_IsOfType As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Partner As Global.System.Nullable(Of Global.System.Guid)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (GUID_Attribute_GemessenZeitpunkt.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(GUID_Attribute_GemessenZeitpunkt.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (GUID_Attribute_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(GUID_Attribute_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Gewichtsmessung.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(GUID_Type_Gewichtsmessung.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(GUID_Type_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Einheit.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(GUID_Type_Einheit.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_Gewicht.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(GUID_RelationType_Gewicht.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_belongsTo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(GUID_RelationType_belongsTo.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_IsOfType.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(GUID_RelationType_IsOfType.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (GUID_Partner.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(GUID_Partner.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal GUID_Attribute_GemessenZeitpunkt As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Attribute_Menge As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Gewichtsmessung As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Menge As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Einheit As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_Gewicht As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_belongsTo As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_IsOfType As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Partner As Global.System.Nullable(Of Global.System.Guid)) As dsBabyModule.proc_GewichtsmessungDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (GUID_Attribute_GemessenZeitpunkt.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(GUID_Attribute_GemessenZeitpunkt.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (GUID_Attribute_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(GUID_Attribute_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Gewichtsmessung.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(GUID_Type_Gewichtsmessung.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(GUID_Type_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Einheit.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(GUID_Type_Einheit.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_Gewicht.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(GUID_RelationType_Gewicht.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_belongsTo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(GUID_RelationType_belongsTo.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_IsOfType.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(GUID_RelationType_IsOfType.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (GUID_Partner.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(GUID_Partner.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As dsBabyModule.proc_GewichtsmessungDataTable = New dsBabyModule.proc_GewichtsmessungDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class proc_Gewichtsmessung_By_DateTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "proc_Gewichtsmessung_By_Date"
            tableMapping.ColumnMappings.Add("GUID_Gewichtsmessung", "GUID_Gewichtsmessung")
            tableMapping.ColumnMappings.Add("Name_Gewichtsmessung", "Name_Gewichtsmessung")
            tableMapping.ColumnMappings.Add("GUID_Type_Gewichtsmessung", "GUID_Type_Gewichtsmessung")
            tableMapping.ColumnMappings.Add("GUID_TokenAttribute", "GUID_TokenAttribute")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Baby_Module.My.MySettings.Default.sem_db_system_baby_moduleConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.proc_Gewichtsmessung_By_Date"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Attribute_Zeitpunkt", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Gewichtsmessung", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Partner", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_RelationType_belongsTo", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Partner", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@date_Zeitpunkt", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 23, 3, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsBabyModule.proc_Gewichtsmessung_By_DateDataTable, ByVal GUID_Attribute_Zeitpunkt As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Gewichtsmessung As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Partner As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_belongsTo As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Partner As Global.System.Nullable(Of Global.System.Guid), ByVal date_Zeitpunkt As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (GUID_Attribute_Zeitpunkt.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(GUID_Attribute_Zeitpunkt.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Gewichtsmessung.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(GUID_Type_Gewichtsmessung.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Partner.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(GUID_Type_Partner.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_belongsTo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(GUID_RelationType_belongsTo.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (GUID_Partner.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(GUID_Partner.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (date_Zeitpunkt.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(date_Zeitpunkt.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal GUID_Attribute_Zeitpunkt As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Gewichtsmessung As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Partner As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_belongsTo As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Partner As Global.System.Nullable(Of Global.System.Guid), ByVal date_Zeitpunkt As Global.System.Nullable(Of Date)) As dsBabyModule.proc_Gewichtsmessung_By_DateDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (GUID_Attribute_Zeitpunkt.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(GUID_Attribute_Zeitpunkt.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Gewichtsmessung.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(GUID_Type_Gewichtsmessung.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Partner.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(GUID_Type_Partner.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_belongsTo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(GUID_RelationType_belongsTo.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (GUID_Partner.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(GUID_Partner.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (date_Zeitpunkt.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(date_Zeitpunkt.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As dsBabyModule.proc_Gewichtsmessung_By_DateDataTable = New dsBabyModule.proc_Gewichtsmessung_By_DateDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class proc_Trinkmessungen_By_DateTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "proc_Trinkmessungen_By_Date"
            tableMapping.ColumnMappings.Add("GUID_Partner", "GUID_Partner")
            tableMapping.ColumnMappings.Add("Name_Partner", "Name_Partner")
            tableMapping.ColumnMappings.Add("GUID_Type_Partner", "GUID_Type_Partner")
            tableMapping.ColumnMappings.Add("GUID_Trinkmessungen", "GUID_Trinkmessungen")
            tableMapping.ColumnMappings.Add("Name_Trinkmessungen", "Name_Trinkmessungen")
            tableMapping.ColumnMappings.Add("GUID_Type_Trinkmessungen", "GUID_Type_Trinkmessungen")
            tableMapping.ColumnMappings.Add("Zeitpunkt", "Zeitpunkt")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Baby_Module.My.MySettings.Default.sem_db_system_baby_moduleConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.proc_Trinkmessungen_By_Date"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Attribute_Zeitpunkt", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Trinkmessungen", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Partner", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_RelationType_belongsTo", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Partner", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@date_Zeitpunkt", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 23, 3, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsBabyModule.proc_Trinkmessungen_By_DateDataTable, ByVal GUID_Attribute_Zeitpunkt As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Trinkmessungen As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Partner As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_belongsTo As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Partner As Global.System.Nullable(Of Global.System.Guid), ByVal date_Zeitpunkt As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (GUID_Attribute_Zeitpunkt.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(GUID_Attribute_Zeitpunkt.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Trinkmessungen.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(GUID_Type_Trinkmessungen.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Partner.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(GUID_Type_Partner.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_belongsTo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(GUID_RelationType_belongsTo.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (GUID_Partner.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(GUID_Partner.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (date_Zeitpunkt.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(date_Zeitpunkt.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal GUID_Attribute_Zeitpunkt As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Trinkmessungen As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Partner As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_belongsTo As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Partner As Global.System.Nullable(Of Global.System.Guid), ByVal date_Zeitpunkt As Global.System.Nullable(Of Date)) As dsBabyModule.proc_Trinkmessungen_By_DateDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (GUID_Attribute_Zeitpunkt.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(GUID_Attribute_Zeitpunkt.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Trinkmessungen.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(GUID_Type_Trinkmessungen.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Partner.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(GUID_Type_Partner.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_belongsTo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(GUID_RelationType_belongsTo.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (GUID_Partner.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(GUID_Partner.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (date_Zeitpunkt.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(date_Zeitpunkt.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As dsBabyModule.proc_Trinkmessungen_By_DateDataTable = New dsBabyModule.proc_Trinkmessungen_By_DateDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class proc_TrinkmessungenTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "proc_Trinkmessungen"
            tableMapping.ColumnMappings.Add("GUID_Trinkmessungen", "GUID_Trinkmessungen")
            tableMapping.ColumnMappings.Add("Name_Trinkmessungen", "Name_Trinkmessungen")
            tableMapping.ColumnMappings.Add("GUID_Type_Trinkmessungen", "GUID_Type_Trinkmessungen")
            tableMapping.ColumnMappings.Add("GUID_Partner", "GUID_Partner")
            tableMapping.ColumnMappings.Add("Name_Partner", "Name_Partner")
            tableMapping.ColumnMappings.Add("GUID_Token_Attribute_Zeitpunkt", "GUID_Token_Attribute_Zeitpunkt")
            tableMapping.ColumnMappings.Add("Zeitpunkt", "Zeitpunkt")
            tableMapping.ColumnMappings.Add("GUID_TokenAttribute_Trinkprobleme", "GUID_TokenAttribute_Trinkprobleme")
            tableMapping.ColumnMappings.Add("Trinkprobleme", "Trinkprobleme")
            tableMapping.ColumnMappings.Add("GUID_TokenAttribute_Eigeninitiative", "GUID_TokenAttribute_Eigeninitiative")
            tableMapping.ColumnMappings.Add("Eigeninitiative", "Eigeninitiative")
            tableMapping.ColumnMappings.Add("Count_Bestandteile", "Count_Bestandteile")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Baby_Module.My.MySettings.Default.sem_db_system_baby_moduleConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.proc_Trinkmessungen"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Trinkmessungen", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Attribute_Menge", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Attribute_Zeitpunkt", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Attribute_Trinkprobleme", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Attribute_Eigeninitiative", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Partner", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Trinkbestandteil", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Menge", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Einheit", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Medikament", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Nahrung", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_RelationType_contains", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_RelationType_isOfType", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_RelationType_belongsTo", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_RelationType_belonging", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Partner", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill( _
                    ByVal dataTable As dsBabyModule.proc_TrinkmessungenDataTable,  _
                    ByVal GUID_Type_Trinkmessungen As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Attribute_Menge As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Attribute_Zeitpunkt As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Attribute_Trinkprobleme As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Attribute_Eigeninitiative As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Partner As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Trinkbestandteil As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Menge As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Einheit As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Medikament As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Nahrung As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_RelationType_contains As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_RelationType_isOfType As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_RelationType_belongsTo As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_RelationType_belonging As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Partner As Global.System.Nullable(Of Global.System.Guid)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (GUID_Type_Trinkmessungen.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(GUID_Type_Trinkmessungen.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (GUID_Attribute_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(GUID_Attribute_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (GUID_Attribute_Zeitpunkt.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(GUID_Attribute_Zeitpunkt.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (GUID_Attribute_Trinkprobleme.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(GUID_Attribute_Trinkprobleme.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (GUID_Attribute_Eigeninitiative.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(GUID_Attribute_Eigeninitiative.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Partner.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(GUID_Type_Partner.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Trinkbestandteil.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(GUID_Type_Trinkbestandteil.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(GUID_Type_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Einheit.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(GUID_Type_Einheit.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Medikament.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(GUID_Type_Medikament.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Nahrung.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(GUID_Type_Nahrung.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_contains.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(12).Value = CType(GUID_RelationType_contains.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_isOfType.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(13).Value = CType(GUID_RelationType_isOfType.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_belongsTo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(14).Value = CType(GUID_RelationType_belongsTo.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_belonging.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(15).Value = CType(GUID_RelationType_belonging.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (GUID_Partner.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(16).Value = CType(GUID_Partner.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData( _
                    ByVal GUID_Type_Trinkmessungen As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Attribute_Menge As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Attribute_Zeitpunkt As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Attribute_Trinkprobleme As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Attribute_Eigeninitiative As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Partner As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Trinkbestandteil As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Menge As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Einheit As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Medikament As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Nahrung As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_RelationType_contains As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_RelationType_isOfType As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_RelationType_belongsTo As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_RelationType_belonging As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Partner As Global.System.Nullable(Of Global.System.Guid)) As dsBabyModule.proc_TrinkmessungenDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (GUID_Type_Trinkmessungen.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(GUID_Type_Trinkmessungen.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (GUID_Attribute_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(GUID_Attribute_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (GUID_Attribute_Zeitpunkt.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(GUID_Attribute_Zeitpunkt.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (GUID_Attribute_Trinkprobleme.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(GUID_Attribute_Trinkprobleme.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (GUID_Attribute_Eigeninitiative.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(GUID_Attribute_Eigeninitiative.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Partner.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(GUID_Type_Partner.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Trinkbestandteil.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(GUID_Type_Trinkbestandteil.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(GUID_Type_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Einheit.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(GUID_Type_Einheit.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Medikament.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(GUID_Type_Medikament.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Nahrung.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(GUID_Type_Nahrung.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_contains.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(12).Value = CType(GUID_RelationType_contains.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_isOfType.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(13).Value = CType(GUID_RelationType_isOfType.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_belongsTo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(14).Value = CType(GUID_RelationType_belongsTo.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_belonging.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(15).Value = CType(GUID_RelationType_belonging.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (GUID_Partner.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(16).Value = CType(GUID_Partner.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As dsBabyModule.proc_TrinkmessungenDataTable = New dsBabyModule.proc_TrinkmessungenDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class proc_Trinkbestandteile_Of_MessungTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "proc_Trinkbestandteile_Of_Messung"
            tableMapping.ColumnMappings.Add("GUID_Trinkbestandteil", "GUID_Trinkbestandteil")
            tableMapping.ColumnMappings.Add("Name_Trinkbestandteil", "Name_Trinkbestandteil")
            tableMapping.ColumnMappings.Add("GUID_Type_Trinkbestandteil", "GUID_Type_Trinkbestandteil")
            tableMapping.ColumnMappings.Add("Menge", "Menge")
            tableMapping.ColumnMappings.Add("Name_Einheit", "Name_Einheit")
            tableMapping.ColumnMappings.Add("GUID_Menge", "GUID_Menge")
            tableMapping.ColumnMappings.Add("Name_Menge", "Name_Menge")
            tableMapping.ColumnMappings.Add("GUID_Type_Menge", "GUID_Type_Menge")
            tableMapping.ColumnMappings.Add("GUID_Einheit", "GUID_Einheit")
            tableMapping.ColumnMappings.Add("GUID_Type_Einheit", "GUID_Type_Einheit")
            tableMapping.ColumnMappings.Add("GUID_TokenAttribute_Menge", "GUID_TokenAttribute_Menge")
            tableMapping.ColumnMappings.Add("GUID_Nahrung", "GUID_Nahrung")
            tableMapping.ColumnMappings.Add("Name_Nahrung", "Name_Nahrung")
            tableMapping.ColumnMappings.Add("GUID_Type_Nahrung", "GUID_Type_Nahrung")
            tableMapping.ColumnMappings.Add("GUID_Medikamente", "GUID_Medikamente")
            tableMapping.ColumnMappings.Add("Name_Medikamente", "Name_Medikamente")
            tableMapping.ColumnMappings.Add("GUID_Type_Medikamente", "GUID_Type_Medikamente")
            tableMapping.ColumnMappings.Add("GUID_Trinkmessung", "GUID_Trinkmessung")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Baby_Module.My.MySettings.Default.sem_db_system_baby_moduleConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.proc_Trinkbestandteile_Of_Messung"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Attribute_Menge", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Trinkbestandteil", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Menge", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Einheit", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Medikament", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Nahrung", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_RelationType_contains", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_RelationType_IsOfType", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_RelationType_belonging", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Trinkmessung", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsBabyModule.proc_Trinkbestandteile_Of_MessungDataTable, ByVal GUID_Attribute_Menge As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Trinkbestandteil As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Menge As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Einheit As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Medikament As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Nahrung As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_contains As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_IsOfType As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_belonging As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Trinkmessung As Global.System.Nullable(Of Global.System.Guid)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (GUID_Attribute_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(GUID_Attribute_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Trinkbestandteil.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(GUID_Type_Trinkbestandteil.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(GUID_Type_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Einheit.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(GUID_Type_Einheit.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Medikament.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(GUID_Type_Medikament.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Nahrung.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(GUID_Type_Nahrung.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_contains.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(GUID_RelationType_contains.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_IsOfType.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(GUID_RelationType_IsOfType.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_belonging.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(GUID_RelationType_belonging.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (GUID_Trinkmessung.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(GUID_Trinkmessung.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal GUID_Attribute_Menge As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Trinkbestandteil As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Menge As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Einheit As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Medikament As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Nahrung As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_contains As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_IsOfType As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_belonging As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Trinkmessung As Global.System.Nullable(Of Global.System.Guid)) As dsBabyModule.proc_Trinkbestandteile_Of_MessungDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (GUID_Attribute_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(GUID_Attribute_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Trinkbestandteil.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(GUID_Type_Trinkbestandteil.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(GUID_Type_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Einheit.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(GUID_Type_Einheit.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Medikament.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(GUID_Type_Medikament.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Nahrung.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(GUID_Type_Nahrung.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_contains.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(GUID_RelationType_contains.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_IsOfType.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(GUID_RelationType_IsOfType.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_belonging.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(GUID_RelationType_belonging.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (GUID_Trinkmessung.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(GUID_Trinkmessung.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As dsBabyModule.proc_Trinkbestandteile_Of_MessungDataTable = New dsBabyModule.proc_Trinkbestandteile_Of_MessungDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class proc_TrinkbestandteilTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "proc_Trinkbestandteil"
            tableMapping.ColumnMappings.Add("GUID_Trinkbestandteil", "GUID_Trinkbestandteil")
            tableMapping.ColumnMappings.Add("Name_Trinkbestandteil", "Name_Trinkbestandteil")
            tableMapping.ColumnMappings.Add("GUID_Type_Trinkbestandteil", "GUID_Type_Trinkbestandteil")
            tableMapping.ColumnMappings.Add("Menge", "Menge")
            tableMapping.ColumnMappings.Add("Name_Einheit", "Name_Einheit")
            tableMapping.ColumnMappings.Add("GUID_Menge", "GUID_Menge")
            tableMapping.ColumnMappings.Add("Name_Menge", "Name_Menge")
            tableMapping.ColumnMappings.Add("GUID_Type_Menge", "GUID_Type_Menge")
            tableMapping.ColumnMappings.Add("GUID_Einheit", "GUID_Einheit")
            tableMapping.ColumnMappings.Add("GUID_Type_Einheit", "GUID_Type_Einheit")
            tableMapping.ColumnMappings.Add("GUID_TokenAttribute_Menge", "GUID_TokenAttribute_Menge")
            tableMapping.ColumnMappings.Add("GUID_Nahrung", "GUID_Nahrung")
            tableMapping.ColumnMappings.Add("Name_Nahrung", "Name_Nahrung")
            tableMapping.ColumnMappings.Add("GUID_Type_Nahrung", "GUID_Type_Nahrung")
            tableMapping.ColumnMappings.Add("GUID_Medikamente", "GUID_Medikamente")
            tableMapping.ColumnMappings.Add("Name_Medikamente", "Name_Medikamente")
            tableMapping.ColumnMappings.Add("GUID_Type_Medikamente", "GUID_Type_Medikamente")
            tableMapping.ColumnMappings.Add("GUID_Trinkmessung", "GUID_Trinkmessung")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Baby_Module.My.MySettings.Default.sem_db_system_baby_moduleConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.proc_Trinkbestandteil"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Attribute_Menge", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Trinkbestandteil", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Menge", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Einheit", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Medikament", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Nahrung", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_RelationType_contains", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_RelationType_IsOfType", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_RelationType_belonging", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Trinkbestandteil", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsBabyModule.proc_TrinkbestandteilDataTable, ByVal GUID_Attribute_Menge As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Trinkbestandteil As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Menge As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Einheit As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Medikament As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Nahrung As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_contains As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_IsOfType As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_belonging As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Trinkbestandteil As Global.System.Nullable(Of Global.System.Guid)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (GUID_Attribute_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(GUID_Attribute_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Trinkbestandteil.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(GUID_Type_Trinkbestandteil.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(GUID_Type_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Einheit.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(GUID_Type_Einheit.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Medikament.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(GUID_Type_Medikament.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Nahrung.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(GUID_Type_Nahrung.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_contains.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(GUID_RelationType_contains.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_IsOfType.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(GUID_RelationType_IsOfType.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_belonging.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(GUID_RelationType_belonging.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (GUID_Trinkbestandteil.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(GUID_Trinkbestandteil.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal GUID_Attribute_Menge As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Trinkbestandteil As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Menge As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Einheit As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Medikament As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Nahrung As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_contains As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_IsOfType As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_belonging As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Trinkbestandteil As Global.System.Nullable(Of Global.System.Guid)) As dsBabyModule.proc_TrinkbestandteilDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (GUID_Attribute_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(GUID_Attribute_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Trinkbestandteil.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(GUID_Type_Trinkbestandteil.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(GUID_Type_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Einheit.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(GUID_Type_Einheit.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Medikament.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(GUID_Type_Medikament.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Nahrung.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(GUID_Type_Nahrung.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_contains.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(GUID_RelationType_contains.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_IsOfType.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(GUID_RelationType_IsOfType.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_belonging.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(GUID_RelationType_belonging.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (GUID_Trinkbestandteil.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(GUID_Trinkbestandteil.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As dsBabyModule.proc_TrinkbestandteilDataTable = New dsBabyModule.proc_TrinkbestandteilDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class proc_Mengen_Of_Day_By_EinheitTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "proc_Mengen_Of_Day_By_Einheit"
            tableMapping.ColumnMappings.Add("Year", "Year")
            tableMapping.ColumnMappings.Add("Week", "Week")
            tableMapping.ColumnMappings.Add("Weekday", "Weekday")
            tableMapping.ColumnMappings.Add("Menge", "Menge")
            tableMapping.ColumnMappings.Add("Name_Einheit", "Name_Einheit")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Baby_Module.My.MySettings.Default.sem_db_system_baby_moduleConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.proc_Mengen_Of_Day_By_Einheit"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Trinkmessungen", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Attribute_Zeitpunkt", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Attribute_Trinkprobleme", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Attribute_Eigeninitiative", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Partner", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_RelationType_belongsTo", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Attribute_Menge", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Trinkbestandteil", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Menge", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Einheit", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_RelationType_contains", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_RelationType_IsOfType", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_RelationType_belonging", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Partner", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Einheit", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@date_Messung", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 23, 3, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill( _
                    ByVal dataTable As dsBabyModule.proc_Mengen_Of_Day_By_EinheitDataTable,  _
                    ByVal GUID_Type_Trinkmessungen As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Attribute_Zeitpunkt As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Attribute_Trinkprobleme As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Attribute_Eigeninitiative As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Partner As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_RelationType_belongsTo As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Attribute_Menge As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Trinkbestandteil As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Menge As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Einheit As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_RelationType_contains As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_RelationType_IsOfType As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_RelationType_belonging As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Partner As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Einheit As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal date_Messung As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (GUID_Type_Trinkmessungen.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(GUID_Type_Trinkmessungen.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (GUID_Attribute_Zeitpunkt.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(GUID_Attribute_Zeitpunkt.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (GUID_Attribute_Trinkprobleme.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(GUID_Attribute_Trinkprobleme.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (GUID_Attribute_Eigeninitiative.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(GUID_Attribute_Eigeninitiative.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Partner.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(GUID_Type_Partner.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_belongsTo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(GUID_RelationType_belongsTo.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (GUID_Attribute_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(GUID_Attribute_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Trinkbestandteil.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(GUID_Type_Trinkbestandteil.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(GUID_Type_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Einheit.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(GUID_Type_Einheit.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_contains.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(GUID_RelationType_contains.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_IsOfType.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(12).Value = CType(GUID_RelationType_IsOfType.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_belonging.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(13).Value = CType(GUID_RelationType_belonging.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (GUID_Partner.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(14).Value = CType(GUID_Partner.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (GUID_Einheit.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(15).Value = CType(GUID_Einheit.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (date_Messung.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(16).Value = CType(date_Messung.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData( _
                    ByVal GUID_Type_Trinkmessungen As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Attribute_Zeitpunkt As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Attribute_Trinkprobleme As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Attribute_Eigeninitiative As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Partner As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_RelationType_belongsTo As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Attribute_Menge As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Trinkbestandteil As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Menge As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Einheit As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_RelationType_contains As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_RelationType_IsOfType As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_RelationType_belonging As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Partner As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Einheit As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal date_Messung As Global.System.Nullable(Of Date)) As dsBabyModule.proc_Mengen_Of_Day_By_EinheitDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (GUID_Type_Trinkmessungen.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(GUID_Type_Trinkmessungen.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (GUID_Attribute_Zeitpunkt.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(GUID_Attribute_Zeitpunkt.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (GUID_Attribute_Trinkprobleme.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(GUID_Attribute_Trinkprobleme.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (GUID_Attribute_Eigeninitiative.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(GUID_Attribute_Eigeninitiative.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Partner.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(GUID_Type_Partner.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_belongsTo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(GUID_RelationType_belongsTo.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (GUID_Attribute_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(GUID_Attribute_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Trinkbestandteil.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(GUID_Type_Trinkbestandteil.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(GUID_Type_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Einheit.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(GUID_Type_Einheit.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_contains.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(GUID_RelationType_contains.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_IsOfType.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(12).Value = CType(GUID_RelationType_IsOfType.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_belonging.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(13).Value = CType(GUID_RelationType_belonging.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (GUID_Partner.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(14).Value = CType(GUID_Partner.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (GUID_Einheit.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(15).Value = CType(GUID_Einheit.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (date_Messung.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(16).Value = CType(date_Messung.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As dsBabyModule.proc_Mengen_Of_Day_By_EinheitDataTable = New dsBabyModule.proc_Mengen_Of_Day_By_EinheitDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class proc_ProblemeTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "proc_Probleme"
            tableMapping.ColumnMappings.Add("GUID_Probleme__Baby_", "GUID_Probleme__Baby_")
            tableMapping.ColumnMappings.Add("Name_Probleme__Baby_", "Name_Probleme__Baby_")
            tableMapping.ColumnMappings.Add("GUID_Type_Probleme__Baby_", "GUID_Type_Probleme__Baby_")
            tableMapping.ColumnMappings.Add("GUID_Problemarten", "GUID_Problemarten")
            tableMapping.ColumnMappings.Add("Name_Problemarten", "Name_Problemarten")
            tableMapping.ColumnMappings.Add("GUID_Type_Problemarten", "GUID_Type_Problemarten")
            tableMapping.ColumnMappings.Add("GUID_TokenAttribute_Startdate", "GUID_TokenAttribute_Startdate")
            tableMapping.ColumnMappings.Add("StartDate", "StartDate")
            tableMapping.ColumnMappings.Add("GUID_TokenAttribute_Ende", "GUID_TokenAttribute_Ende")
            tableMapping.ColumnMappings.Add("Ende", "Ende")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Baby_Module.My.MySettings.Default.sem_db_system_baby_moduleConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.proc_Probleme"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Attribute_Startdate", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Attribute_Ende", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_ProblemeBaby", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Problemart", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_RelationType_belongsTo", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_RelationType_isOfType", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Partner", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsBabyModule.proc_ProblemeDataTable, ByVal GUID_Attribute_Startdate As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Attribute_Ende As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_ProblemeBaby As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Problemart As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_belongsTo As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_isOfType As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Partner As Global.System.Nullable(Of Global.System.Guid)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (GUID_Attribute_Startdate.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(GUID_Attribute_Startdate.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (GUID_Attribute_Ende.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(GUID_Attribute_Ende.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_ProblemeBaby.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(GUID_Type_ProblemeBaby.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Problemart.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(GUID_Type_Problemart.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_belongsTo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(GUID_RelationType_belongsTo.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_isOfType.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(GUID_RelationType_isOfType.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (GUID_Partner.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(GUID_Partner.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal GUID_Attribute_Startdate As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Attribute_Ende As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_ProblemeBaby As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Problemart As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_belongsTo As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_isOfType As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Partner As Global.System.Nullable(Of Global.System.Guid)) As dsBabyModule.proc_ProblemeDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (GUID_Attribute_Startdate.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(GUID_Attribute_Startdate.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (GUID_Attribute_Ende.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(GUID_Attribute_Ende.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_ProblemeBaby.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(GUID_Type_ProblemeBaby.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Problemart.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(GUID_Type_Problemart.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_belongsTo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(GUID_RelationType_belongsTo.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_isOfType.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(GUID_RelationType_isOfType.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (GUID_Partner.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(GUID_Partner.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As dsBabyModule.proc_ProblemeDataTable = New dsBabyModule.proc_ProblemeDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class proc_BestandteileTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "proc_Bestandteile"
            tableMapping.ColumnMappings.Add("GUID_Bestandteil", "GUID_Bestandteil")
            tableMapping.ColumnMappings.Add("Name_Bestandteil", "Name_Bestandteil")
            tableMapping.ColumnMappings.Add("GUID_Type_Bestandteil", "GUID_Type_Bestandteil")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Baby_Module.My.MySettings.Default.sem_db_system_baby_moduleConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.proc_Bestandteile"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Trinkbestandteil", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Medikament", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Nahrungsmittel", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_RelationType_contains", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsBabyModule.proc_BestandteileDataTable, ByVal GUID_Type_Trinkbestandteil As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Medikament As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Nahrungsmittel As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_contains As Global.System.Nullable(Of Global.System.Guid)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (GUID_Type_Trinkbestandteil.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(GUID_Type_Trinkbestandteil.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Medikament.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(GUID_Type_Medikament.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Nahrungsmittel.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(GUID_Type_Nahrungsmittel.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_contains.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(GUID_RelationType_contains.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal GUID_Type_Trinkbestandteil As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Medikament As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_Type_Nahrungsmittel As Global.System.Nullable(Of Global.System.Guid), ByVal GUID_RelationType_contains As Global.System.Nullable(Of Global.System.Guid)) As dsBabyModule.proc_BestandteileDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (GUID_Type_Trinkbestandteil.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(GUID_Type_Trinkbestandteil.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Medikament.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(GUID_Type_Medikament.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Nahrungsmittel.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(GUID_Type_Nahrungsmittel.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_contains.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(GUID_RelationType_contains.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As dsBabyModule.proc_BestandteileDataTable = New dsBabyModule.proc_BestandteileDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class proc_Mengen_Of_DayTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "proc_Mengen_Of_Day"
            tableMapping.ColumnMappings.Add("Year", "Year")
            tableMapping.ColumnMappings.Add("Week", "Week")
            tableMapping.ColumnMappings.Add("Weekday", "Weekday")
            tableMapping.ColumnMappings.Add("Menge", "Menge")
            tableMapping.ColumnMappings.Add("Name_Einheit", "Name_Einheit")
            tableMapping.ColumnMappings.Add("Bestandteil", "Bestandteil")
            tableMapping.ColumnMappings.Add("GUID_Type_Medikamente", "GUID_Type_Medikamente")
            tableMapping.ColumnMappings.Add("GUID_Type_Nahrung", "GUID_Type_Nahrung")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Baby_Module.My.MySettings.Default.sem_db_system_baby_moduleConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.proc_Mengen_Of_Day"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Trinkmessungen", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Attribute_Zeitpunkt", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Attribute_Trinkprobleme", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Attribute_Eigeninitiative", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Partner", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Nahrung", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Medikament", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_RelationType_belongsTo", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Attribute_Menge", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Trinkbestandteil", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Menge", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Einheit", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_RelationType_contains", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_RelationType_IsOfType", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_RelationType_belonging", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Partner", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@date_Messung", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 23, 3, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill( _
                    ByVal dataTable As dsBabyModule.proc_Mengen_Of_DayDataTable,  _
                    ByVal GUID_Type_Trinkmessungen As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Attribute_Zeitpunkt As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Attribute_Trinkprobleme As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Attribute_Eigeninitiative As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Partner As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Nahrung As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Medikament As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_RelationType_belongsTo As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Attribute_Menge As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Trinkbestandteil As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Menge As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Einheit As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_RelationType_contains As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_RelationType_IsOfType As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_RelationType_belonging As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Partner As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal date_Messung As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (GUID_Type_Trinkmessungen.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(GUID_Type_Trinkmessungen.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (GUID_Attribute_Zeitpunkt.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(GUID_Attribute_Zeitpunkt.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (GUID_Attribute_Trinkprobleme.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(GUID_Attribute_Trinkprobleme.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (GUID_Attribute_Eigeninitiative.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(GUID_Attribute_Eigeninitiative.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Partner.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(GUID_Type_Partner.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Nahrung.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(GUID_Type_Nahrung.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Medikament.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(GUID_Type_Medikament.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_belongsTo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(GUID_RelationType_belongsTo.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (GUID_Attribute_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(GUID_Attribute_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Trinkbestandteil.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(GUID_Type_Trinkbestandteil.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(GUID_Type_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Einheit.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(12).Value = CType(GUID_Type_Einheit.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_contains.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(13).Value = CType(GUID_RelationType_contains.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_IsOfType.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(14).Value = CType(GUID_RelationType_IsOfType.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_belonging.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(15).Value = CType(GUID_RelationType_belonging.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (GUID_Partner.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(16).Value = CType(GUID_Partner.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (date_Messung.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(17).Value = CType(date_Messung.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData( _
                    ByVal GUID_Type_Trinkmessungen As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Attribute_Zeitpunkt As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Attribute_Trinkprobleme As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Attribute_Eigeninitiative As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Partner As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Nahrung As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Medikament As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_RelationType_belongsTo As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Attribute_Menge As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Trinkbestandteil As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Menge As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Einheit As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_RelationType_contains As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_RelationType_IsOfType As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_RelationType_belonging As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Partner As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal date_Messung As Global.System.Nullable(Of Date)) As dsBabyModule.proc_Mengen_Of_DayDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (GUID_Type_Trinkmessungen.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(GUID_Type_Trinkmessungen.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (GUID_Attribute_Zeitpunkt.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(GUID_Attribute_Zeitpunkt.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (GUID_Attribute_Trinkprobleme.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(GUID_Attribute_Trinkprobleme.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (GUID_Attribute_Eigeninitiative.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(GUID_Attribute_Eigeninitiative.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Partner.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(GUID_Type_Partner.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Nahrung.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(GUID_Type_Nahrung.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Medikament.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(GUID_Type_Medikament.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_belongsTo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(GUID_RelationType_belongsTo.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (GUID_Attribute_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(GUID_Attribute_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Trinkbestandteil.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(GUID_Type_Trinkbestandteil.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(GUID_Type_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Einheit.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(12).Value = CType(GUID_Type_Einheit.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_contains.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(13).Value = CType(GUID_RelationType_contains.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_IsOfType.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(14).Value = CType(GUID_RelationType_IsOfType.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_belonging.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(15).Value = CType(GUID_RelationType_belonging.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (GUID_Partner.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(16).Value = CType(GUID_Partner.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (date_Messung.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(17).Value = CType(date_Messung.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As dsBabyModule.proc_Mengen_Of_DayDataTable = New dsBabyModule.proc_Mengen_Of_DayDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class proc_WochenstatistikTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "proc_Wochenstatistik"
            tableMapping.ColumnMappings.Add("Year", "Year")
            tableMapping.ColumnMappings.Add("Week", "Week")
            tableMapping.ColumnMappings.Add("Timestamp", "Timestamp")
            tableMapping.ColumnMappings.Add("Gewichtzunahme_Tag", "Gewichtzunahme_Tag")
            tableMapping.ColumnMappings.Add("Menge", "Menge")
            tableMapping.ColumnMappings.Add("Name_Einheit", "Name_Einheit")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Baby_Module.My.MySettings.Default.sem_db_system_baby_moduleConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.proc_Wochenstatistik"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Attribute_GemessenZeitpunkt", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Attribute_Menge", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Attribute_Zeitpunkt", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Attribute_Trinkprobleme", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Attribute_Eigeninitiative", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Gewichtsmessung", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Menge", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Einheit", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Trinkmessungen", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Partner", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Nahrung", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Medikament", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Type_Trinkbestandteil", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_RelationType_contains", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_RelationType_belonging", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_RelationType_Gewicht", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_RelationType_belongsTo", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_RelationType_IsOfType", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUID_Partner", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill( _
                    ByVal dataTable As dsBabyModule.proc_WochenstatistikDataTable,  _
                    ByVal GUID_Attribute_GemessenZeitpunkt As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Attribute_Menge As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Attribute_Zeitpunkt As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Attribute_Trinkprobleme As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Attribute_Eigeninitiative As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Gewichtsmessung As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Menge As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Einheit As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Trinkmessungen As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Partner As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Nahrung As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Medikament As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Trinkbestandteil As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_RelationType_contains As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_RelationType_belonging As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_RelationType_Gewicht As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_RelationType_belongsTo As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_RelationType_IsOfType As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Partner As Global.System.Nullable(Of Global.System.Guid)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (GUID_Attribute_GemessenZeitpunkt.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(GUID_Attribute_GemessenZeitpunkt.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (GUID_Attribute_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(GUID_Attribute_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (GUID_Attribute_Zeitpunkt.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(GUID_Attribute_Zeitpunkt.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (GUID_Attribute_Trinkprobleme.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(GUID_Attribute_Trinkprobleme.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (GUID_Attribute_Eigeninitiative.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(GUID_Attribute_Eigeninitiative.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Gewichtsmessung.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(GUID_Type_Gewichtsmessung.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(GUID_Type_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Einheit.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(GUID_Type_Einheit.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Trinkmessungen.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(GUID_Type_Trinkmessungen.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Partner.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(GUID_Type_Partner.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Nahrung.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(GUID_Type_Nahrung.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Medikament.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(12).Value = CType(GUID_Type_Medikament.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Trinkbestandteil.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(13).Value = CType(GUID_Type_Trinkbestandteil.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_contains.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(14).Value = CType(GUID_RelationType_contains.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_belonging.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(15).Value = CType(GUID_RelationType_belonging.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_Gewicht.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(16).Value = CType(GUID_RelationType_Gewicht.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_belongsTo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(17).Value = CType(GUID_RelationType_belongsTo.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_IsOfType.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(18).Value = CType(GUID_RelationType_IsOfType.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (GUID_Partner.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(19).Value = CType(GUID_Partner.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData( _
                    ByVal GUID_Attribute_GemessenZeitpunkt As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Attribute_Menge As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Attribute_Zeitpunkt As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Attribute_Trinkprobleme As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Attribute_Eigeninitiative As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Gewichtsmessung As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Menge As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Einheit As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Trinkmessungen As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Partner As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Nahrung As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Medikament As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Type_Trinkbestandteil As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_RelationType_contains As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_RelationType_belonging As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_RelationType_Gewicht As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_RelationType_belongsTo As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_RelationType_IsOfType As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal GUID_Partner As Global.System.Nullable(Of Global.System.Guid)) As dsBabyModule.proc_WochenstatistikDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (GUID_Attribute_GemessenZeitpunkt.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(GUID_Attribute_GemessenZeitpunkt.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (GUID_Attribute_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(GUID_Attribute_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (GUID_Attribute_Zeitpunkt.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(GUID_Attribute_Zeitpunkt.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (GUID_Attribute_Trinkprobleme.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(GUID_Attribute_Trinkprobleme.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (GUID_Attribute_Eigeninitiative.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(GUID_Attribute_Eigeninitiative.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Gewichtsmessung.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(GUID_Type_Gewichtsmessung.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Menge.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(GUID_Type_Menge.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Einheit.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(GUID_Type_Einheit.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Trinkmessungen.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(GUID_Type_Trinkmessungen.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Partner.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(GUID_Type_Partner.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Nahrung.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(GUID_Type_Nahrung.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Medikament.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(12).Value = CType(GUID_Type_Medikament.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (GUID_Type_Trinkbestandteil.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(13).Value = CType(GUID_Type_Trinkbestandteil.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_contains.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(14).Value = CType(GUID_RelationType_contains.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_belonging.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(15).Value = CType(GUID_RelationType_belonging.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_Gewicht.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(16).Value = CType(GUID_RelationType_Gewicht.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_belongsTo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(17).Value = CType(GUID_RelationType_belongsTo.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (GUID_RelationType_IsOfType.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(18).Value = CType(GUID_RelationType_IsOfType.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (GUID_Partner.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(19).Value = CType(GUID_Partner.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As dsBabyModule.proc_WochenstatistikDataTable = New dsBabyModule.proc_WochenstatistikDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As dsBabyModule, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As dsBabyModule, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As dsBabyModule, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As dsBabyModule) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
